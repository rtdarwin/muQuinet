// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: response.proto

#ifndef PROTOBUF_response_2eproto__INCLUDED
#define PROTOBUF_response_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_response_2eproto();
void protobuf_AssignDesc_response_2eproto();
void protobuf_ShutdownFile_response_2eproto();

class Response;
class Response_Atstart;
class Response_Close;
class Response_Connect;
class Response_Fcntl;
class Response_Getpeername;
class Response_Getsockname;
class Response_Getsockopt;
class Response_Poll;
class Response_Recvfrom;
class Response_Select;
class Response_Sendto;
class Response_Setsockopt;
class Response_Socket;

enum Response_RetCode {
  Response_RetCode_OK = 0,
  Response_RetCode_ERROR = 1,
  Response_RetCode_WAIT_NEXT = 2
};
bool Response_RetCode_IsValid(int value);
const Response_RetCode Response_RetCode_RetCode_MIN = Response_RetCode_OK;
const Response_RetCode Response_RetCode_RetCode_MAX = Response_RetCode_WAIT_NEXT;
const int Response_RetCode_RetCode_ARRAYSIZE = Response_RetCode_RetCode_MAX + 1;

const ::google::protobuf::EnumDescriptor* Response_RetCode_descriptor();
inline const ::std::string& Response_RetCode_Name(Response_RetCode value) {
  return ::google::protobuf::internal::NameOfEnum(
    Response_RetCode_descriptor(), value);
}
inline bool Response_RetCode_Parse(
    const ::std::string& name, Response_RetCode* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Response_RetCode>(
    Response_RetCode_descriptor(), name, value);
}
// ===================================================================

class Response_Socket : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Response.Socket) */ {
 public:
  Response_Socket();
  virtual ~Response_Socket();

  Response_Socket(const Response_Socket& from);

  inline Response_Socket& operator=(const Response_Socket& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Response_Socket& default_instance();

  void Swap(Response_Socket* other);

  // implements Message ----------------------------------------------

  inline Response_Socket* New() const { return New(NULL); }

  Response_Socket* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Response_Socket& from);
  void MergeFrom(const Response_Socket& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Response_Socket* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 ret = 1;
  bool has_ret() const;
  void clear_ret();
  static const int kRetFieldNumber = 1;
  ::google::protobuf::int32 ret() const;
  void set_ret(::google::protobuf::int32 value);

  // optional int32 errno_ = 2;
  bool has_errno_() const;
  void clear_errno_();
  static const int kErrnoFieldNumber = 2;
  ::google::protobuf::int32 errno_() const;
  void set_errno_(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Response.Socket)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_errno_();
  inline void clear_has_errno_();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 ret_;
  ::google::protobuf::int32 errno__;
  friend void  protobuf_AddDesc_response_2eproto();
  friend void protobuf_AssignDesc_response_2eproto();
  friend void protobuf_ShutdownFile_response_2eproto();

  void InitAsDefaultInstance();
  static Response_Socket* default_instance_;
};
// -------------------------------------------------------------------

class Response_Connect : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Response.Connect) */ {
 public:
  Response_Connect();
  virtual ~Response_Connect();

  Response_Connect(const Response_Connect& from);

  inline Response_Connect& operator=(const Response_Connect& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Response_Connect& default_instance();

  void Swap(Response_Connect* other);

  // implements Message ----------------------------------------------

  inline Response_Connect* New() const { return New(NULL); }

  Response_Connect* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Response_Connect& from);
  void MergeFrom(const Response_Connect& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Response_Connect* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 ret = 1;
  bool has_ret() const;
  void clear_ret();
  static const int kRetFieldNumber = 1;
  ::google::protobuf::int32 ret() const;
  void set_ret(::google::protobuf::int32 value);

  // optional int32 errno_ = 2;
  bool has_errno_() const;
  void clear_errno_();
  static const int kErrnoFieldNumber = 2;
  ::google::protobuf::int32 errno_() const;
  void set_errno_(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Response.Connect)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_errno_();
  inline void clear_has_errno_();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 ret_;
  ::google::protobuf::int32 errno__;
  friend void  protobuf_AddDesc_response_2eproto();
  friend void protobuf_AssignDesc_response_2eproto();
  friend void protobuf_ShutdownFile_response_2eproto();

  void InitAsDefaultInstance();
  static Response_Connect* default_instance_;
};
// -------------------------------------------------------------------

class Response_Close : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Response.Close) */ {
 public:
  Response_Close();
  virtual ~Response_Close();

  Response_Close(const Response_Close& from);

  inline Response_Close& operator=(const Response_Close& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Response_Close& default_instance();

  void Swap(Response_Close* other);

  // implements Message ----------------------------------------------

  inline Response_Close* New() const { return New(NULL); }

  Response_Close* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Response_Close& from);
  void MergeFrom(const Response_Close& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Response_Close* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 ret = 1;
  bool has_ret() const;
  void clear_ret();
  static const int kRetFieldNumber = 1;
  ::google::protobuf::int32 ret() const;
  void set_ret(::google::protobuf::int32 value);

  // optional int32 errno_ = 2;
  bool has_errno_() const;
  void clear_errno_();
  static const int kErrnoFieldNumber = 2;
  ::google::protobuf::int32 errno_() const;
  void set_errno_(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Response.Close)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_errno_();
  inline void clear_has_errno_();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 ret_;
  ::google::protobuf::int32 errno__;
  friend void  protobuf_AddDesc_response_2eproto();
  friend void protobuf_AssignDesc_response_2eproto();
  friend void protobuf_ShutdownFile_response_2eproto();

  void InitAsDefaultInstance();
  static Response_Close* default_instance_;
};
// -------------------------------------------------------------------

class Response_Recvfrom : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Response.Recvfrom) */ {
 public:
  Response_Recvfrom();
  virtual ~Response_Recvfrom();

  Response_Recvfrom(const Response_Recvfrom& from);

  inline Response_Recvfrom& operator=(const Response_Recvfrom& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Response_Recvfrom& default_instance();

  void Swap(Response_Recvfrom* other);

  // implements Message ----------------------------------------------

  inline Response_Recvfrom* New() const { return New(NULL); }

  Response_Recvfrom* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Response_Recvfrom& from);
  void MergeFrom(const Response_Recvfrom& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Response_Recvfrom* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 ret = 1;
  bool has_ret() const;
  void clear_ret();
  static const int kRetFieldNumber = 1;
  ::google::protobuf::int32 ret() const;
  void set_ret(::google::protobuf::int32 value);

  // optional int32 errno_ = 2;
  bool has_errno_() const;
  void clear_errno_();
  static const int kErrnoFieldNumber = 2;
  ::google::protobuf::int32 errno_() const;
  void set_errno_(::google::protobuf::int32 value);

  // optional bytes buf = 3;
  bool has_buf() const;
  void clear_buf();
  static const int kBufFieldNumber = 3;
  const ::std::string& buf() const;
  void set_buf(const ::std::string& value);
  void set_buf(const char* value);
  void set_buf(const void* value, size_t size);
  ::std::string* mutable_buf();
  ::std::string* release_buf();
  void set_allocated_buf(::std::string* buf);

  // optional bytes addr = 4;
  bool has_addr() const;
  void clear_addr();
  static const int kAddrFieldNumber = 4;
  const ::std::string& addr() const;
  void set_addr(const ::std::string& value);
  void set_addr(const char* value);
  void set_addr(const void* value, size_t size);
  ::std::string* mutable_addr();
  ::std::string* release_addr();
  void set_allocated_addr(::std::string* addr);

  // @@protoc_insertion_point(class_scope:Response.Recvfrom)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_errno_();
  inline void clear_has_errno_();
  inline void set_has_buf();
  inline void clear_has_buf();
  inline void set_has_addr();
  inline void clear_has_addr();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 ret_;
  ::google::protobuf::int32 errno__;
  ::google::protobuf::internal::ArenaStringPtr buf_;
  ::google::protobuf::internal::ArenaStringPtr addr_;
  friend void  protobuf_AddDesc_response_2eproto();
  friend void protobuf_AssignDesc_response_2eproto();
  friend void protobuf_ShutdownFile_response_2eproto();

  void InitAsDefaultInstance();
  static Response_Recvfrom* default_instance_;
};
// -------------------------------------------------------------------

class Response_Sendto : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Response.Sendto) */ {
 public:
  Response_Sendto();
  virtual ~Response_Sendto();

  Response_Sendto(const Response_Sendto& from);

  inline Response_Sendto& operator=(const Response_Sendto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Response_Sendto& default_instance();

  void Swap(Response_Sendto* other);

  // implements Message ----------------------------------------------

  inline Response_Sendto* New() const { return New(NULL); }

  Response_Sendto* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Response_Sendto& from);
  void MergeFrom(const Response_Sendto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Response_Sendto* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 ret = 1;
  bool has_ret() const;
  void clear_ret();
  static const int kRetFieldNumber = 1;
  ::google::protobuf::int32 ret() const;
  void set_ret(::google::protobuf::int32 value);

  // optional int32 errno_ = 2;
  bool has_errno_() const;
  void clear_errno_();
  static const int kErrnoFieldNumber = 2;
  ::google::protobuf::int32 errno_() const;
  void set_errno_(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Response.Sendto)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_errno_();
  inline void clear_has_errno_();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 ret_;
  ::google::protobuf::int32 errno__;
  friend void  protobuf_AddDesc_response_2eproto();
  friend void protobuf_AssignDesc_response_2eproto();
  friend void protobuf_ShutdownFile_response_2eproto();

  void InitAsDefaultInstance();
  static Response_Sendto* default_instance_;
};
// -------------------------------------------------------------------

class Response_Poll : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Response.Poll) */ {
 public:
  Response_Poll();
  virtual ~Response_Poll();

  Response_Poll(const Response_Poll& from);

  inline Response_Poll& operator=(const Response_Poll& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Response_Poll& default_instance();

  void Swap(Response_Poll* other);

  // implements Message ----------------------------------------------

  inline Response_Poll* New() const { return New(NULL); }

  Response_Poll* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Response_Poll& from);
  void MergeFrom(const Response_Poll& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Response_Poll* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 ret = 1;
  bool has_ret() const;
  void clear_ret();
  static const int kRetFieldNumber = 1;
  ::google::protobuf::int32 ret() const;
  void set_ret(::google::protobuf::int32 value);

  // optional int32 errno_ = 2;
  bool has_errno_() const;
  void clear_errno_();
  static const int kErrnoFieldNumber = 2;
  ::google::protobuf::int32 errno_() const;
  void set_errno_(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Response.Poll)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_errno_();
  inline void clear_has_errno_();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 ret_;
  ::google::protobuf::int32 errno__;
  friend void  protobuf_AddDesc_response_2eproto();
  friend void protobuf_AssignDesc_response_2eproto();
  friend void protobuf_ShutdownFile_response_2eproto();

  void InitAsDefaultInstance();
  static Response_Poll* default_instance_;
};
// -------------------------------------------------------------------

class Response_Select : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Response.Select) */ {
 public:
  Response_Select();
  virtual ~Response_Select();

  Response_Select(const Response_Select& from);

  inline Response_Select& operator=(const Response_Select& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Response_Select& default_instance();

  void Swap(Response_Select* other);

  // implements Message ----------------------------------------------

  inline Response_Select* New() const { return New(NULL); }

  Response_Select* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Response_Select& from);
  void MergeFrom(const Response_Select& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Response_Select* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 ret = 1;
  bool has_ret() const;
  void clear_ret();
  static const int kRetFieldNumber = 1;
  ::google::protobuf::int32 ret() const;
  void set_ret(::google::protobuf::int32 value);

  // optional int32 errno_ = 2;
  bool has_errno_() const;
  void clear_errno_();
  static const int kErrnoFieldNumber = 2;
  ::google::protobuf::int32 errno_() const;
  void set_errno_(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Response.Select)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_errno_();
  inline void clear_has_errno_();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 ret_;
  ::google::protobuf::int32 errno__;
  friend void  protobuf_AddDesc_response_2eproto();
  friend void protobuf_AssignDesc_response_2eproto();
  friend void protobuf_ShutdownFile_response_2eproto();

  void InitAsDefaultInstance();
  static Response_Select* default_instance_;
};
// -------------------------------------------------------------------

class Response_Getpeername : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Response.Getpeername) */ {
 public:
  Response_Getpeername();
  virtual ~Response_Getpeername();

  Response_Getpeername(const Response_Getpeername& from);

  inline Response_Getpeername& operator=(const Response_Getpeername& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Response_Getpeername& default_instance();

  void Swap(Response_Getpeername* other);

  // implements Message ----------------------------------------------

  inline Response_Getpeername* New() const { return New(NULL); }

  Response_Getpeername* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Response_Getpeername& from);
  void MergeFrom(const Response_Getpeername& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Response_Getpeername* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 ret = 1;
  bool has_ret() const;
  void clear_ret();
  static const int kRetFieldNumber = 1;
  ::google::protobuf::int32 ret() const;
  void set_ret(::google::protobuf::int32 value);

  // optional int32 errno_ = 2;
  bool has_errno_() const;
  void clear_errno_();
  static const int kErrnoFieldNumber = 2;
  ::google::protobuf::int32 errno_() const;
  void set_errno_(::google::protobuf::int32 value);

  // optional bytes peername = 3;
  bool has_peername() const;
  void clear_peername();
  static const int kPeernameFieldNumber = 3;
  const ::std::string& peername() const;
  void set_peername(const ::std::string& value);
  void set_peername(const char* value);
  void set_peername(const void* value, size_t size);
  ::std::string* mutable_peername();
  ::std::string* release_peername();
  void set_allocated_peername(::std::string* peername);

  // @@protoc_insertion_point(class_scope:Response.Getpeername)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_errno_();
  inline void clear_has_errno_();
  inline void set_has_peername();
  inline void clear_has_peername();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 ret_;
  ::google::protobuf::int32 errno__;
  ::google::protobuf::internal::ArenaStringPtr peername_;
  friend void  protobuf_AddDesc_response_2eproto();
  friend void protobuf_AssignDesc_response_2eproto();
  friend void protobuf_ShutdownFile_response_2eproto();

  void InitAsDefaultInstance();
  static Response_Getpeername* default_instance_;
};
// -------------------------------------------------------------------

class Response_Getsockname : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Response.Getsockname) */ {
 public:
  Response_Getsockname();
  virtual ~Response_Getsockname();

  Response_Getsockname(const Response_Getsockname& from);

  inline Response_Getsockname& operator=(const Response_Getsockname& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Response_Getsockname& default_instance();

  void Swap(Response_Getsockname* other);

  // implements Message ----------------------------------------------

  inline Response_Getsockname* New() const { return New(NULL); }

  Response_Getsockname* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Response_Getsockname& from);
  void MergeFrom(const Response_Getsockname& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Response_Getsockname* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 ret = 1;
  bool has_ret() const;
  void clear_ret();
  static const int kRetFieldNumber = 1;
  ::google::protobuf::int32 ret() const;
  void set_ret(::google::protobuf::int32 value);

  // optional int32 errno_ = 2;
  bool has_errno_() const;
  void clear_errno_();
  static const int kErrnoFieldNumber = 2;
  ::google::protobuf::int32 errno_() const;
  void set_errno_(::google::protobuf::int32 value);

  // optional bytes sockanme = 3;
  bool has_sockanme() const;
  void clear_sockanme();
  static const int kSockanmeFieldNumber = 3;
  const ::std::string& sockanme() const;
  void set_sockanme(const ::std::string& value);
  void set_sockanme(const char* value);
  void set_sockanme(const void* value, size_t size);
  ::std::string* mutable_sockanme();
  ::std::string* release_sockanme();
  void set_allocated_sockanme(::std::string* sockanme);

  // @@protoc_insertion_point(class_scope:Response.Getsockname)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_errno_();
  inline void clear_has_errno_();
  inline void set_has_sockanme();
  inline void clear_has_sockanme();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 ret_;
  ::google::protobuf::int32 errno__;
  ::google::protobuf::internal::ArenaStringPtr sockanme_;
  friend void  protobuf_AddDesc_response_2eproto();
  friend void protobuf_AssignDesc_response_2eproto();
  friend void protobuf_ShutdownFile_response_2eproto();

  void InitAsDefaultInstance();
  static Response_Getsockname* default_instance_;
};
// -------------------------------------------------------------------

class Response_Getsockopt : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Response.Getsockopt) */ {
 public:
  Response_Getsockopt();
  virtual ~Response_Getsockopt();

  Response_Getsockopt(const Response_Getsockopt& from);

  inline Response_Getsockopt& operator=(const Response_Getsockopt& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Response_Getsockopt& default_instance();

  void Swap(Response_Getsockopt* other);

  // implements Message ----------------------------------------------

  inline Response_Getsockopt* New() const { return New(NULL); }

  Response_Getsockopt* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Response_Getsockopt& from);
  void MergeFrom(const Response_Getsockopt& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Response_Getsockopt* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 ret = 1;
  bool has_ret() const;
  void clear_ret();
  static const int kRetFieldNumber = 1;
  ::google::protobuf::int32 ret() const;
  void set_ret(::google::protobuf::int32 value);

  // optional int32 errno_ = 2;
  bool has_errno_() const;
  void clear_errno_();
  static const int kErrnoFieldNumber = 2;
  ::google::protobuf::int32 errno_() const;
  void set_errno_(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Response.Getsockopt)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_errno_();
  inline void clear_has_errno_();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 ret_;
  ::google::protobuf::int32 errno__;
  friend void  protobuf_AddDesc_response_2eproto();
  friend void protobuf_AssignDesc_response_2eproto();
  friend void protobuf_ShutdownFile_response_2eproto();

  void InitAsDefaultInstance();
  static Response_Getsockopt* default_instance_;
};
// -------------------------------------------------------------------

class Response_Setsockopt : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Response.Setsockopt) */ {
 public:
  Response_Setsockopt();
  virtual ~Response_Setsockopt();

  Response_Setsockopt(const Response_Setsockopt& from);

  inline Response_Setsockopt& operator=(const Response_Setsockopt& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Response_Setsockopt& default_instance();

  void Swap(Response_Setsockopt* other);

  // implements Message ----------------------------------------------

  inline Response_Setsockopt* New() const { return New(NULL); }

  Response_Setsockopt* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Response_Setsockopt& from);
  void MergeFrom(const Response_Setsockopt& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Response_Setsockopt* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 ret = 1;
  bool has_ret() const;
  void clear_ret();
  static const int kRetFieldNumber = 1;
  ::google::protobuf::int32 ret() const;
  void set_ret(::google::protobuf::int32 value);

  // optional int32 errno_ = 2;
  bool has_errno_() const;
  void clear_errno_();
  static const int kErrnoFieldNumber = 2;
  ::google::protobuf::int32 errno_() const;
  void set_errno_(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Response.Setsockopt)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_errno_();
  inline void clear_has_errno_();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 ret_;
  ::google::protobuf::int32 errno__;
  friend void  protobuf_AddDesc_response_2eproto();
  friend void protobuf_AssignDesc_response_2eproto();
  friend void protobuf_ShutdownFile_response_2eproto();

  void InitAsDefaultInstance();
  static Response_Setsockopt* default_instance_;
};
// -------------------------------------------------------------------

class Response_Fcntl : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Response.Fcntl) */ {
 public:
  Response_Fcntl();
  virtual ~Response_Fcntl();

  Response_Fcntl(const Response_Fcntl& from);

  inline Response_Fcntl& operator=(const Response_Fcntl& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Response_Fcntl& default_instance();

  void Swap(Response_Fcntl* other);

  // implements Message ----------------------------------------------

  inline Response_Fcntl* New() const { return New(NULL); }

  Response_Fcntl* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Response_Fcntl& from);
  void MergeFrom(const Response_Fcntl& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Response_Fcntl* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 ret = 1;
  bool has_ret() const;
  void clear_ret();
  static const int kRetFieldNumber = 1;
  ::google::protobuf::int32 ret() const;
  void set_ret(::google::protobuf::int32 value);

  // optional int32 errno_ = 2;
  bool has_errno_() const;
  void clear_errno_();
  static const int kErrnoFieldNumber = 2;
  ::google::protobuf::int32 errno_() const;
  void set_errno_(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Response.Fcntl)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_errno_();
  inline void clear_has_errno_();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 ret_;
  ::google::protobuf::int32 errno__;
  friend void  protobuf_AddDesc_response_2eproto();
  friend void protobuf_AssignDesc_response_2eproto();
  friend void protobuf_ShutdownFile_response_2eproto();

  void InitAsDefaultInstance();
  static Response_Fcntl* default_instance_;
};
// -------------------------------------------------------------------

class Response_Atstart : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Response.Atstart) */ {
 public:
  Response_Atstart();
  virtual ~Response_Atstart();

  Response_Atstart(const Response_Atstart& from);

  inline Response_Atstart& operator=(const Response_Atstart& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Response_Atstart& default_instance();

  void Swap(Response_Atstart* other);

  // implements Message ----------------------------------------------

  inline Response_Atstart* New() const { return New(NULL); }

  Response_Atstart* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Response_Atstart& from);
  void MergeFrom(const Response_Atstart& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Response_Atstart* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 startfd = 1;
  bool has_startfd() const;
  void clear_startfd();
  static const int kStartfdFieldNumber = 1;
  ::google::protobuf::int32 startfd() const;
  void set_startfd(::google::protobuf::int32 value);

  // optional int32 count = 2;
  bool has_count() const;
  void clear_count();
  static const int kCountFieldNumber = 2;
  ::google::protobuf::int32 count() const;
  void set_count(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Response.Atstart)
 private:
  inline void set_has_startfd();
  inline void clear_has_startfd();
  inline void set_has_count();
  inline void clear_has_count();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 startfd_;
  ::google::protobuf::int32 count_;
  friend void  protobuf_AddDesc_response_2eproto();
  friend void protobuf_AssignDesc_response_2eproto();
  friend void protobuf_ShutdownFile_response_2eproto();

  void InitAsDefaultInstance();
  static Response_Atstart* default_instance_;
};
// -------------------------------------------------------------------

class Response : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Response) */ {
 public:
  Response();
  virtual ~Response();

  Response(const Response& from);

  inline Response& operator=(const Response& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Response& default_instance();

  enum ReturningCase {
    kSocketCall = 1,
    kConnectCall = 2,
    kCloseCall = 3,
    kRecvfromCall = 4,
    kSendtoCall = 5,
    kPollCall = 6,
    kSelectCall = 7,
    kGetpeernameCall = 8,
    kGetsocknameCall = 9,
    kGetsockoptCall = 10,
    kSetsockoptCall = 11,
    kFcntlCall = 12,
    kAtstartAction = 16,
    RETURNING_NOT_SET = 0,
  };

  void Swap(Response* other);

  // implements Message ----------------------------------------------

  inline Response* New() const { return New(NULL); }

  Response* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Response& from);
  void MergeFrom(const Response& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Response* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef Response_Socket Socket;
  typedef Response_Connect Connect;
  typedef Response_Close Close;
  typedef Response_Recvfrom Recvfrom;
  typedef Response_Sendto Sendto;
  typedef Response_Poll Poll;
  typedef Response_Select Select;
  typedef Response_Getpeername Getpeername;
  typedef Response_Getsockname Getsockname;
  typedef Response_Getsockopt Getsockopt;
  typedef Response_Setsockopt Setsockopt;
  typedef Response_Fcntl Fcntl;
  typedef Response_Atstart Atstart;

  typedef Response_RetCode RetCode;
  static const RetCode OK =
    Response_RetCode_OK;
  static const RetCode ERROR =
    Response_RetCode_ERROR;
  static const RetCode WAIT_NEXT =
    Response_RetCode_WAIT_NEXT;
  static inline bool RetCode_IsValid(int value) {
    return Response_RetCode_IsValid(value);
  }
  static const RetCode RetCode_MIN =
    Response_RetCode_RetCode_MIN;
  static const RetCode RetCode_MAX =
    Response_RetCode_RetCode_MAX;
  static const int RetCode_ARRAYSIZE =
    Response_RetCode_RetCode_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  RetCode_descriptor() {
    return Response_RetCode_descriptor();
  }
  static inline const ::std::string& RetCode_Name(RetCode value) {
    return Response_RetCode_Name(value);
  }
  static inline bool RetCode_Parse(const ::std::string& name,
      RetCode* value) {
    return Response_RetCode_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .Response.Socket socketCall = 1;
  bool has_socketcall() const;
  void clear_socketcall();
  static const int kSocketCallFieldNumber = 1;
  const ::Response_Socket& socketcall() const;
  ::Response_Socket* mutable_socketcall();
  ::Response_Socket* release_socketcall();
  void set_allocated_socketcall(::Response_Socket* socketcall);

  // optional .Response.Connect connectCall = 2;
  bool has_connectcall() const;
  void clear_connectcall();
  static const int kConnectCallFieldNumber = 2;
  const ::Response_Connect& connectcall() const;
  ::Response_Connect* mutable_connectcall();
  ::Response_Connect* release_connectcall();
  void set_allocated_connectcall(::Response_Connect* connectcall);

  // optional .Response.Close closeCall = 3;
  bool has_closecall() const;
  void clear_closecall();
  static const int kCloseCallFieldNumber = 3;
  const ::Response_Close& closecall() const;
  ::Response_Close* mutable_closecall();
  ::Response_Close* release_closecall();
  void set_allocated_closecall(::Response_Close* closecall);

  // optional .Response.Recvfrom recvfromCall = 4;
  bool has_recvfromcall() const;
  void clear_recvfromcall();
  static const int kRecvfromCallFieldNumber = 4;
  const ::Response_Recvfrom& recvfromcall() const;
  ::Response_Recvfrom* mutable_recvfromcall();
  ::Response_Recvfrom* release_recvfromcall();
  void set_allocated_recvfromcall(::Response_Recvfrom* recvfromcall);

  // optional .Response.Sendto sendtoCall = 5;
  bool has_sendtocall() const;
  void clear_sendtocall();
  static const int kSendtoCallFieldNumber = 5;
  const ::Response_Sendto& sendtocall() const;
  ::Response_Sendto* mutable_sendtocall();
  ::Response_Sendto* release_sendtocall();
  void set_allocated_sendtocall(::Response_Sendto* sendtocall);

  // optional .Response.Poll pollCall = 6;
  bool has_pollcall() const;
  void clear_pollcall();
  static const int kPollCallFieldNumber = 6;
  const ::Response_Poll& pollcall() const;
  ::Response_Poll* mutable_pollcall();
  ::Response_Poll* release_pollcall();
  void set_allocated_pollcall(::Response_Poll* pollcall);

  // optional .Response.Select selectCall = 7;
  bool has_selectcall() const;
  void clear_selectcall();
  static const int kSelectCallFieldNumber = 7;
  const ::Response_Select& selectcall() const;
  ::Response_Select* mutable_selectcall();
  ::Response_Select* release_selectcall();
  void set_allocated_selectcall(::Response_Select* selectcall);

  // optional .Response.Getpeername getpeernameCall = 8;
  bool has_getpeernamecall() const;
  void clear_getpeernamecall();
  static const int kGetpeernameCallFieldNumber = 8;
  const ::Response_Getpeername& getpeernamecall() const;
  ::Response_Getpeername* mutable_getpeernamecall();
  ::Response_Getpeername* release_getpeernamecall();
  void set_allocated_getpeernamecall(::Response_Getpeername* getpeernamecall);

  // optional .Response.Getsockname getsocknameCall = 9;
  bool has_getsocknamecall() const;
  void clear_getsocknamecall();
  static const int kGetsocknameCallFieldNumber = 9;
  const ::Response_Getsockname& getsocknamecall() const;
  ::Response_Getsockname* mutable_getsocknamecall();
  ::Response_Getsockname* release_getsocknamecall();
  void set_allocated_getsocknamecall(::Response_Getsockname* getsocknamecall);

  // optional .Response.Getsockopt getsockoptCall = 10;
  bool has_getsockoptcall() const;
  void clear_getsockoptcall();
  static const int kGetsockoptCallFieldNumber = 10;
  const ::Response_Getsockopt& getsockoptcall() const;
  ::Response_Getsockopt* mutable_getsockoptcall();
  ::Response_Getsockopt* release_getsockoptcall();
  void set_allocated_getsockoptcall(::Response_Getsockopt* getsockoptcall);

  // optional .Response.Setsockopt setsockoptCall = 11;
  bool has_setsockoptcall() const;
  void clear_setsockoptcall();
  static const int kSetsockoptCallFieldNumber = 11;
  const ::Response_Setsockopt& setsockoptcall() const;
  ::Response_Setsockopt* mutable_setsockoptcall();
  ::Response_Setsockopt* release_setsockoptcall();
  void set_allocated_setsockoptcall(::Response_Setsockopt* setsockoptcall);

  // optional .Response.Fcntl fcntlCall = 12;
  bool has_fcntlcall() const;
  void clear_fcntlcall();
  static const int kFcntlCallFieldNumber = 12;
  const ::Response_Fcntl& fcntlcall() const;
  ::Response_Fcntl* mutable_fcntlcall();
  ::Response_Fcntl* release_fcntlcall();
  void set_allocated_fcntlcall(::Response_Fcntl* fcntlcall);

  // optional .Response.Atstart atstartAction = 16;
  bool has_atstartaction() const;
  void clear_atstartaction();
  static const int kAtstartActionFieldNumber = 16;
  const ::Response_Atstart& atstartaction() const;
  ::Response_Atstart* mutable_atstartaction();
  ::Response_Atstart* release_atstartaction();
  void set_allocated_atstartaction(::Response_Atstart* atstartaction);

  // required .Response.RetCode retCode = 15;
  bool has_retcode() const;
  void clear_retcode();
  static const int kRetCodeFieldNumber = 15;
  ::Response_RetCode retcode() const;
  void set_retcode(::Response_RetCode value);

  ReturningCase returning_case() const;
  // @@protoc_insertion_point(class_scope:Response)
 private:
  inline void set_has_socketcall();
  inline void set_has_connectcall();
  inline void set_has_closecall();
  inline void set_has_recvfromcall();
  inline void set_has_sendtocall();
  inline void set_has_pollcall();
  inline void set_has_selectcall();
  inline void set_has_getpeernamecall();
  inline void set_has_getsocknamecall();
  inline void set_has_getsockoptcall();
  inline void set_has_setsockoptcall();
  inline void set_has_fcntlcall();
  inline void set_has_atstartaction();
  inline void set_has_retcode();
  inline void clear_has_retcode();

  inline bool has_returning() const;
  void clear_returning();
  inline void clear_has_returning();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int retcode_;
  union ReturningUnion {
    ReturningUnion() {}
    ::Response_Socket* socketcall_;
    ::Response_Connect* connectcall_;
    ::Response_Close* closecall_;
    ::Response_Recvfrom* recvfromcall_;
    ::Response_Sendto* sendtocall_;
    ::Response_Poll* pollcall_;
    ::Response_Select* selectcall_;
    ::Response_Getpeername* getpeernamecall_;
    ::Response_Getsockname* getsocknamecall_;
    ::Response_Getsockopt* getsockoptcall_;
    ::Response_Setsockopt* setsockoptcall_;
    ::Response_Fcntl* fcntlcall_;
    ::Response_Atstart* atstartaction_;
  } returning_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend void  protobuf_AddDesc_response_2eproto();
  friend void protobuf_AssignDesc_response_2eproto();
  friend void protobuf_ShutdownFile_response_2eproto();

  void InitAsDefaultInstance();
  static Response* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// Response_Socket

// required int32 ret = 1;
inline bool Response_Socket::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Response_Socket::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Response_Socket::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Response_Socket::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 Response_Socket::ret() const {
  // @@protoc_insertion_point(field_get:Response.Socket.ret)
  return ret_;
}
inline void Response_Socket::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
  // @@protoc_insertion_point(field_set:Response.Socket.ret)
}

// optional int32 errno_ = 2;
inline bool Response_Socket::has_errno_() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Response_Socket::set_has_errno_() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Response_Socket::clear_has_errno_() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Response_Socket::clear_errno_() {
  errno__ = 0;
  clear_has_errno_();
}
inline ::google::protobuf::int32 Response_Socket::errno_() const {
  // @@protoc_insertion_point(field_get:Response.Socket.errno_)
  return errno__;
}
inline void Response_Socket::set_errno_(::google::protobuf::int32 value) {
  set_has_errno_();
  errno__ = value;
  // @@protoc_insertion_point(field_set:Response.Socket.errno_)
}

// -------------------------------------------------------------------

// Response_Connect

// required int32 ret = 1;
inline bool Response_Connect::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Response_Connect::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Response_Connect::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Response_Connect::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 Response_Connect::ret() const {
  // @@protoc_insertion_point(field_get:Response.Connect.ret)
  return ret_;
}
inline void Response_Connect::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
  // @@protoc_insertion_point(field_set:Response.Connect.ret)
}

// optional int32 errno_ = 2;
inline bool Response_Connect::has_errno_() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Response_Connect::set_has_errno_() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Response_Connect::clear_has_errno_() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Response_Connect::clear_errno_() {
  errno__ = 0;
  clear_has_errno_();
}
inline ::google::protobuf::int32 Response_Connect::errno_() const {
  // @@protoc_insertion_point(field_get:Response.Connect.errno_)
  return errno__;
}
inline void Response_Connect::set_errno_(::google::protobuf::int32 value) {
  set_has_errno_();
  errno__ = value;
  // @@protoc_insertion_point(field_set:Response.Connect.errno_)
}

// -------------------------------------------------------------------

// Response_Close

// required int32 ret = 1;
inline bool Response_Close::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Response_Close::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Response_Close::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Response_Close::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 Response_Close::ret() const {
  // @@protoc_insertion_point(field_get:Response.Close.ret)
  return ret_;
}
inline void Response_Close::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
  // @@protoc_insertion_point(field_set:Response.Close.ret)
}

// optional int32 errno_ = 2;
inline bool Response_Close::has_errno_() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Response_Close::set_has_errno_() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Response_Close::clear_has_errno_() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Response_Close::clear_errno_() {
  errno__ = 0;
  clear_has_errno_();
}
inline ::google::protobuf::int32 Response_Close::errno_() const {
  // @@protoc_insertion_point(field_get:Response.Close.errno_)
  return errno__;
}
inline void Response_Close::set_errno_(::google::protobuf::int32 value) {
  set_has_errno_();
  errno__ = value;
  // @@protoc_insertion_point(field_set:Response.Close.errno_)
}

// -------------------------------------------------------------------

// Response_Recvfrom

// required int32 ret = 1;
inline bool Response_Recvfrom::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Response_Recvfrom::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Response_Recvfrom::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Response_Recvfrom::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 Response_Recvfrom::ret() const {
  // @@protoc_insertion_point(field_get:Response.Recvfrom.ret)
  return ret_;
}
inline void Response_Recvfrom::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
  // @@protoc_insertion_point(field_set:Response.Recvfrom.ret)
}

// optional int32 errno_ = 2;
inline bool Response_Recvfrom::has_errno_() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Response_Recvfrom::set_has_errno_() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Response_Recvfrom::clear_has_errno_() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Response_Recvfrom::clear_errno_() {
  errno__ = 0;
  clear_has_errno_();
}
inline ::google::protobuf::int32 Response_Recvfrom::errno_() const {
  // @@protoc_insertion_point(field_get:Response.Recvfrom.errno_)
  return errno__;
}
inline void Response_Recvfrom::set_errno_(::google::protobuf::int32 value) {
  set_has_errno_();
  errno__ = value;
  // @@protoc_insertion_point(field_set:Response.Recvfrom.errno_)
}

// optional bytes buf = 3;
inline bool Response_Recvfrom::has_buf() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Response_Recvfrom::set_has_buf() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Response_Recvfrom::clear_has_buf() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Response_Recvfrom::clear_buf() {
  buf_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_buf();
}
inline const ::std::string& Response_Recvfrom::buf() const {
  // @@protoc_insertion_point(field_get:Response.Recvfrom.buf)
  return buf_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Response_Recvfrom::set_buf(const ::std::string& value) {
  set_has_buf();
  buf_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Response.Recvfrom.buf)
}
inline void Response_Recvfrom::set_buf(const char* value) {
  set_has_buf();
  buf_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Response.Recvfrom.buf)
}
inline void Response_Recvfrom::set_buf(const void* value, size_t size) {
  set_has_buf();
  buf_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Response.Recvfrom.buf)
}
inline ::std::string* Response_Recvfrom::mutable_buf() {
  set_has_buf();
  // @@protoc_insertion_point(field_mutable:Response.Recvfrom.buf)
  return buf_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Response_Recvfrom::release_buf() {
  // @@protoc_insertion_point(field_release:Response.Recvfrom.buf)
  clear_has_buf();
  return buf_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Response_Recvfrom::set_allocated_buf(::std::string* buf) {
  if (buf != NULL) {
    set_has_buf();
  } else {
    clear_has_buf();
  }
  buf_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), buf);
  // @@protoc_insertion_point(field_set_allocated:Response.Recvfrom.buf)
}

// optional bytes addr = 4;
inline bool Response_Recvfrom::has_addr() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Response_Recvfrom::set_has_addr() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Response_Recvfrom::clear_has_addr() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Response_Recvfrom::clear_addr() {
  addr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_addr();
}
inline const ::std::string& Response_Recvfrom::addr() const {
  // @@protoc_insertion_point(field_get:Response.Recvfrom.addr)
  return addr_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Response_Recvfrom::set_addr(const ::std::string& value) {
  set_has_addr();
  addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Response.Recvfrom.addr)
}
inline void Response_Recvfrom::set_addr(const char* value) {
  set_has_addr();
  addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Response.Recvfrom.addr)
}
inline void Response_Recvfrom::set_addr(const void* value, size_t size) {
  set_has_addr();
  addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Response.Recvfrom.addr)
}
inline ::std::string* Response_Recvfrom::mutable_addr() {
  set_has_addr();
  // @@protoc_insertion_point(field_mutable:Response.Recvfrom.addr)
  return addr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Response_Recvfrom::release_addr() {
  // @@protoc_insertion_point(field_release:Response.Recvfrom.addr)
  clear_has_addr();
  return addr_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Response_Recvfrom::set_allocated_addr(::std::string* addr) {
  if (addr != NULL) {
    set_has_addr();
  } else {
    clear_has_addr();
  }
  addr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), addr);
  // @@protoc_insertion_point(field_set_allocated:Response.Recvfrom.addr)
}

// -------------------------------------------------------------------

// Response_Sendto

// required int32 ret = 1;
inline bool Response_Sendto::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Response_Sendto::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Response_Sendto::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Response_Sendto::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 Response_Sendto::ret() const {
  // @@protoc_insertion_point(field_get:Response.Sendto.ret)
  return ret_;
}
inline void Response_Sendto::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
  // @@protoc_insertion_point(field_set:Response.Sendto.ret)
}

// optional int32 errno_ = 2;
inline bool Response_Sendto::has_errno_() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Response_Sendto::set_has_errno_() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Response_Sendto::clear_has_errno_() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Response_Sendto::clear_errno_() {
  errno__ = 0;
  clear_has_errno_();
}
inline ::google::protobuf::int32 Response_Sendto::errno_() const {
  // @@protoc_insertion_point(field_get:Response.Sendto.errno_)
  return errno__;
}
inline void Response_Sendto::set_errno_(::google::protobuf::int32 value) {
  set_has_errno_();
  errno__ = value;
  // @@protoc_insertion_point(field_set:Response.Sendto.errno_)
}

// -------------------------------------------------------------------

// Response_Poll

// required int32 ret = 1;
inline bool Response_Poll::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Response_Poll::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Response_Poll::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Response_Poll::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 Response_Poll::ret() const {
  // @@protoc_insertion_point(field_get:Response.Poll.ret)
  return ret_;
}
inline void Response_Poll::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
  // @@protoc_insertion_point(field_set:Response.Poll.ret)
}

// optional int32 errno_ = 2;
inline bool Response_Poll::has_errno_() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Response_Poll::set_has_errno_() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Response_Poll::clear_has_errno_() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Response_Poll::clear_errno_() {
  errno__ = 0;
  clear_has_errno_();
}
inline ::google::protobuf::int32 Response_Poll::errno_() const {
  // @@protoc_insertion_point(field_get:Response.Poll.errno_)
  return errno__;
}
inline void Response_Poll::set_errno_(::google::protobuf::int32 value) {
  set_has_errno_();
  errno__ = value;
  // @@protoc_insertion_point(field_set:Response.Poll.errno_)
}

// -------------------------------------------------------------------

// Response_Select

// required int32 ret = 1;
inline bool Response_Select::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Response_Select::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Response_Select::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Response_Select::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 Response_Select::ret() const {
  // @@protoc_insertion_point(field_get:Response.Select.ret)
  return ret_;
}
inline void Response_Select::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
  // @@protoc_insertion_point(field_set:Response.Select.ret)
}

// optional int32 errno_ = 2;
inline bool Response_Select::has_errno_() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Response_Select::set_has_errno_() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Response_Select::clear_has_errno_() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Response_Select::clear_errno_() {
  errno__ = 0;
  clear_has_errno_();
}
inline ::google::protobuf::int32 Response_Select::errno_() const {
  // @@protoc_insertion_point(field_get:Response.Select.errno_)
  return errno__;
}
inline void Response_Select::set_errno_(::google::protobuf::int32 value) {
  set_has_errno_();
  errno__ = value;
  // @@protoc_insertion_point(field_set:Response.Select.errno_)
}

// -------------------------------------------------------------------

// Response_Getpeername

// required int32 ret = 1;
inline bool Response_Getpeername::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Response_Getpeername::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Response_Getpeername::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Response_Getpeername::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 Response_Getpeername::ret() const {
  // @@protoc_insertion_point(field_get:Response.Getpeername.ret)
  return ret_;
}
inline void Response_Getpeername::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
  // @@protoc_insertion_point(field_set:Response.Getpeername.ret)
}

// optional int32 errno_ = 2;
inline bool Response_Getpeername::has_errno_() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Response_Getpeername::set_has_errno_() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Response_Getpeername::clear_has_errno_() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Response_Getpeername::clear_errno_() {
  errno__ = 0;
  clear_has_errno_();
}
inline ::google::protobuf::int32 Response_Getpeername::errno_() const {
  // @@protoc_insertion_point(field_get:Response.Getpeername.errno_)
  return errno__;
}
inline void Response_Getpeername::set_errno_(::google::protobuf::int32 value) {
  set_has_errno_();
  errno__ = value;
  // @@protoc_insertion_point(field_set:Response.Getpeername.errno_)
}

// optional bytes peername = 3;
inline bool Response_Getpeername::has_peername() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Response_Getpeername::set_has_peername() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Response_Getpeername::clear_has_peername() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Response_Getpeername::clear_peername() {
  peername_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_peername();
}
inline const ::std::string& Response_Getpeername::peername() const {
  // @@protoc_insertion_point(field_get:Response.Getpeername.peername)
  return peername_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Response_Getpeername::set_peername(const ::std::string& value) {
  set_has_peername();
  peername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Response.Getpeername.peername)
}
inline void Response_Getpeername::set_peername(const char* value) {
  set_has_peername();
  peername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Response.Getpeername.peername)
}
inline void Response_Getpeername::set_peername(const void* value, size_t size) {
  set_has_peername();
  peername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Response.Getpeername.peername)
}
inline ::std::string* Response_Getpeername::mutable_peername() {
  set_has_peername();
  // @@protoc_insertion_point(field_mutable:Response.Getpeername.peername)
  return peername_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Response_Getpeername::release_peername() {
  // @@protoc_insertion_point(field_release:Response.Getpeername.peername)
  clear_has_peername();
  return peername_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Response_Getpeername::set_allocated_peername(::std::string* peername) {
  if (peername != NULL) {
    set_has_peername();
  } else {
    clear_has_peername();
  }
  peername_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), peername);
  // @@protoc_insertion_point(field_set_allocated:Response.Getpeername.peername)
}

// -------------------------------------------------------------------

// Response_Getsockname

// required int32 ret = 1;
inline bool Response_Getsockname::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Response_Getsockname::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Response_Getsockname::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Response_Getsockname::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 Response_Getsockname::ret() const {
  // @@protoc_insertion_point(field_get:Response.Getsockname.ret)
  return ret_;
}
inline void Response_Getsockname::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
  // @@protoc_insertion_point(field_set:Response.Getsockname.ret)
}

// optional int32 errno_ = 2;
inline bool Response_Getsockname::has_errno_() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Response_Getsockname::set_has_errno_() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Response_Getsockname::clear_has_errno_() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Response_Getsockname::clear_errno_() {
  errno__ = 0;
  clear_has_errno_();
}
inline ::google::protobuf::int32 Response_Getsockname::errno_() const {
  // @@protoc_insertion_point(field_get:Response.Getsockname.errno_)
  return errno__;
}
inline void Response_Getsockname::set_errno_(::google::protobuf::int32 value) {
  set_has_errno_();
  errno__ = value;
  // @@protoc_insertion_point(field_set:Response.Getsockname.errno_)
}

// optional bytes sockanme = 3;
inline bool Response_Getsockname::has_sockanme() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Response_Getsockname::set_has_sockanme() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Response_Getsockname::clear_has_sockanme() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Response_Getsockname::clear_sockanme() {
  sockanme_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_sockanme();
}
inline const ::std::string& Response_Getsockname::sockanme() const {
  // @@protoc_insertion_point(field_get:Response.Getsockname.sockanme)
  return sockanme_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Response_Getsockname::set_sockanme(const ::std::string& value) {
  set_has_sockanme();
  sockanme_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Response.Getsockname.sockanme)
}
inline void Response_Getsockname::set_sockanme(const char* value) {
  set_has_sockanme();
  sockanme_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Response.Getsockname.sockanme)
}
inline void Response_Getsockname::set_sockanme(const void* value, size_t size) {
  set_has_sockanme();
  sockanme_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Response.Getsockname.sockanme)
}
inline ::std::string* Response_Getsockname::mutable_sockanme() {
  set_has_sockanme();
  // @@protoc_insertion_point(field_mutable:Response.Getsockname.sockanme)
  return sockanme_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Response_Getsockname::release_sockanme() {
  // @@protoc_insertion_point(field_release:Response.Getsockname.sockanme)
  clear_has_sockanme();
  return sockanme_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Response_Getsockname::set_allocated_sockanme(::std::string* sockanme) {
  if (sockanme != NULL) {
    set_has_sockanme();
  } else {
    clear_has_sockanme();
  }
  sockanme_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sockanme);
  // @@protoc_insertion_point(field_set_allocated:Response.Getsockname.sockanme)
}

// -------------------------------------------------------------------

// Response_Getsockopt

// required int32 ret = 1;
inline bool Response_Getsockopt::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Response_Getsockopt::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Response_Getsockopt::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Response_Getsockopt::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 Response_Getsockopt::ret() const {
  // @@protoc_insertion_point(field_get:Response.Getsockopt.ret)
  return ret_;
}
inline void Response_Getsockopt::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
  // @@protoc_insertion_point(field_set:Response.Getsockopt.ret)
}

// optional int32 errno_ = 2;
inline bool Response_Getsockopt::has_errno_() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Response_Getsockopt::set_has_errno_() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Response_Getsockopt::clear_has_errno_() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Response_Getsockopt::clear_errno_() {
  errno__ = 0;
  clear_has_errno_();
}
inline ::google::protobuf::int32 Response_Getsockopt::errno_() const {
  // @@protoc_insertion_point(field_get:Response.Getsockopt.errno_)
  return errno__;
}
inline void Response_Getsockopt::set_errno_(::google::protobuf::int32 value) {
  set_has_errno_();
  errno__ = value;
  // @@protoc_insertion_point(field_set:Response.Getsockopt.errno_)
}

// -------------------------------------------------------------------

// Response_Setsockopt

// required int32 ret = 1;
inline bool Response_Setsockopt::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Response_Setsockopt::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Response_Setsockopt::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Response_Setsockopt::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 Response_Setsockopt::ret() const {
  // @@protoc_insertion_point(field_get:Response.Setsockopt.ret)
  return ret_;
}
inline void Response_Setsockopt::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
  // @@protoc_insertion_point(field_set:Response.Setsockopt.ret)
}

// optional int32 errno_ = 2;
inline bool Response_Setsockopt::has_errno_() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Response_Setsockopt::set_has_errno_() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Response_Setsockopt::clear_has_errno_() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Response_Setsockopt::clear_errno_() {
  errno__ = 0;
  clear_has_errno_();
}
inline ::google::protobuf::int32 Response_Setsockopt::errno_() const {
  // @@protoc_insertion_point(field_get:Response.Setsockopt.errno_)
  return errno__;
}
inline void Response_Setsockopt::set_errno_(::google::protobuf::int32 value) {
  set_has_errno_();
  errno__ = value;
  // @@protoc_insertion_point(field_set:Response.Setsockopt.errno_)
}

// -------------------------------------------------------------------

// Response_Fcntl

// required int32 ret = 1;
inline bool Response_Fcntl::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Response_Fcntl::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Response_Fcntl::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Response_Fcntl::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 Response_Fcntl::ret() const {
  // @@protoc_insertion_point(field_get:Response.Fcntl.ret)
  return ret_;
}
inline void Response_Fcntl::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
  // @@protoc_insertion_point(field_set:Response.Fcntl.ret)
}

// optional int32 errno_ = 2;
inline bool Response_Fcntl::has_errno_() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Response_Fcntl::set_has_errno_() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Response_Fcntl::clear_has_errno_() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Response_Fcntl::clear_errno_() {
  errno__ = 0;
  clear_has_errno_();
}
inline ::google::protobuf::int32 Response_Fcntl::errno_() const {
  // @@protoc_insertion_point(field_get:Response.Fcntl.errno_)
  return errno__;
}
inline void Response_Fcntl::set_errno_(::google::protobuf::int32 value) {
  set_has_errno_();
  errno__ = value;
  // @@protoc_insertion_point(field_set:Response.Fcntl.errno_)
}

// -------------------------------------------------------------------

// Response_Atstart

// required int32 startfd = 1;
inline bool Response_Atstart::has_startfd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Response_Atstart::set_has_startfd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Response_Atstart::clear_has_startfd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Response_Atstart::clear_startfd() {
  startfd_ = 0;
  clear_has_startfd();
}
inline ::google::protobuf::int32 Response_Atstart::startfd() const {
  // @@protoc_insertion_point(field_get:Response.Atstart.startfd)
  return startfd_;
}
inline void Response_Atstart::set_startfd(::google::protobuf::int32 value) {
  set_has_startfd();
  startfd_ = value;
  // @@protoc_insertion_point(field_set:Response.Atstart.startfd)
}

// optional int32 count = 2;
inline bool Response_Atstart::has_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Response_Atstart::set_has_count() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Response_Atstart::clear_has_count() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Response_Atstart::clear_count() {
  count_ = 0;
  clear_has_count();
}
inline ::google::protobuf::int32 Response_Atstart::count() const {
  // @@protoc_insertion_point(field_get:Response.Atstart.count)
  return count_;
}
inline void Response_Atstart::set_count(::google::protobuf::int32 value) {
  set_has_count();
  count_ = value;
  // @@protoc_insertion_point(field_set:Response.Atstart.count)
}

// -------------------------------------------------------------------

// Response

// optional .Response.Socket socketCall = 1;
inline bool Response::has_socketcall() const {
  return returning_case() == kSocketCall;
}
inline void Response::set_has_socketcall() {
  _oneof_case_[0] = kSocketCall;
}
inline void Response::clear_socketcall() {
  if (has_socketcall()) {
    delete returning_.socketcall_;
    clear_has_returning();
  }
}
inline  const ::Response_Socket& Response::socketcall() const {
  // @@protoc_insertion_point(field_get:Response.socketCall)
  return has_socketcall()
      ? *returning_.socketcall_
      : ::Response_Socket::default_instance();
}
inline ::Response_Socket* Response::mutable_socketcall() {
  if (!has_socketcall()) {
    clear_returning();
    set_has_socketcall();
    returning_.socketcall_ = new ::Response_Socket;
  }
  // @@protoc_insertion_point(field_mutable:Response.socketCall)
  return returning_.socketcall_;
}
inline ::Response_Socket* Response::release_socketcall() {
  // @@protoc_insertion_point(field_release:Response.socketCall)
  if (has_socketcall()) {
    clear_has_returning();
    ::Response_Socket* temp = returning_.socketcall_;
    returning_.socketcall_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void Response::set_allocated_socketcall(::Response_Socket* socketcall) {
  clear_returning();
  if (socketcall) {
    set_has_socketcall();
    returning_.socketcall_ = socketcall;
  }
  // @@protoc_insertion_point(field_set_allocated:Response.socketCall)
}

// optional .Response.Connect connectCall = 2;
inline bool Response::has_connectcall() const {
  return returning_case() == kConnectCall;
}
inline void Response::set_has_connectcall() {
  _oneof_case_[0] = kConnectCall;
}
inline void Response::clear_connectcall() {
  if (has_connectcall()) {
    delete returning_.connectcall_;
    clear_has_returning();
  }
}
inline  const ::Response_Connect& Response::connectcall() const {
  // @@protoc_insertion_point(field_get:Response.connectCall)
  return has_connectcall()
      ? *returning_.connectcall_
      : ::Response_Connect::default_instance();
}
inline ::Response_Connect* Response::mutable_connectcall() {
  if (!has_connectcall()) {
    clear_returning();
    set_has_connectcall();
    returning_.connectcall_ = new ::Response_Connect;
  }
  // @@protoc_insertion_point(field_mutable:Response.connectCall)
  return returning_.connectcall_;
}
inline ::Response_Connect* Response::release_connectcall() {
  // @@protoc_insertion_point(field_release:Response.connectCall)
  if (has_connectcall()) {
    clear_has_returning();
    ::Response_Connect* temp = returning_.connectcall_;
    returning_.connectcall_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void Response::set_allocated_connectcall(::Response_Connect* connectcall) {
  clear_returning();
  if (connectcall) {
    set_has_connectcall();
    returning_.connectcall_ = connectcall;
  }
  // @@protoc_insertion_point(field_set_allocated:Response.connectCall)
}

// optional .Response.Close closeCall = 3;
inline bool Response::has_closecall() const {
  return returning_case() == kCloseCall;
}
inline void Response::set_has_closecall() {
  _oneof_case_[0] = kCloseCall;
}
inline void Response::clear_closecall() {
  if (has_closecall()) {
    delete returning_.closecall_;
    clear_has_returning();
  }
}
inline  const ::Response_Close& Response::closecall() const {
  // @@protoc_insertion_point(field_get:Response.closeCall)
  return has_closecall()
      ? *returning_.closecall_
      : ::Response_Close::default_instance();
}
inline ::Response_Close* Response::mutable_closecall() {
  if (!has_closecall()) {
    clear_returning();
    set_has_closecall();
    returning_.closecall_ = new ::Response_Close;
  }
  // @@protoc_insertion_point(field_mutable:Response.closeCall)
  return returning_.closecall_;
}
inline ::Response_Close* Response::release_closecall() {
  // @@protoc_insertion_point(field_release:Response.closeCall)
  if (has_closecall()) {
    clear_has_returning();
    ::Response_Close* temp = returning_.closecall_;
    returning_.closecall_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void Response::set_allocated_closecall(::Response_Close* closecall) {
  clear_returning();
  if (closecall) {
    set_has_closecall();
    returning_.closecall_ = closecall;
  }
  // @@protoc_insertion_point(field_set_allocated:Response.closeCall)
}

// optional .Response.Recvfrom recvfromCall = 4;
inline bool Response::has_recvfromcall() const {
  return returning_case() == kRecvfromCall;
}
inline void Response::set_has_recvfromcall() {
  _oneof_case_[0] = kRecvfromCall;
}
inline void Response::clear_recvfromcall() {
  if (has_recvfromcall()) {
    delete returning_.recvfromcall_;
    clear_has_returning();
  }
}
inline  const ::Response_Recvfrom& Response::recvfromcall() const {
  // @@protoc_insertion_point(field_get:Response.recvfromCall)
  return has_recvfromcall()
      ? *returning_.recvfromcall_
      : ::Response_Recvfrom::default_instance();
}
inline ::Response_Recvfrom* Response::mutable_recvfromcall() {
  if (!has_recvfromcall()) {
    clear_returning();
    set_has_recvfromcall();
    returning_.recvfromcall_ = new ::Response_Recvfrom;
  }
  // @@protoc_insertion_point(field_mutable:Response.recvfromCall)
  return returning_.recvfromcall_;
}
inline ::Response_Recvfrom* Response::release_recvfromcall() {
  // @@protoc_insertion_point(field_release:Response.recvfromCall)
  if (has_recvfromcall()) {
    clear_has_returning();
    ::Response_Recvfrom* temp = returning_.recvfromcall_;
    returning_.recvfromcall_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void Response::set_allocated_recvfromcall(::Response_Recvfrom* recvfromcall) {
  clear_returning();
  if (recvfromcall) {
    set_has_recvfromcall();
    returning_.recvfromcall_ = recvfromcall;
  }
  // @@protoc_insertion_point(field_set_allocated:Response.recvfromCall)
}

// optional .Response.Sendto sendtoCall = 5;
inline bool Response::has_sendtocall() const {
  return returning_case() == kSendtoCall;
}
inline void Response::set_has_sendtocall() {
  _oneof_case_[0] = kSendtoCall;
}
inline void Response::clear_sendtocall() {
  if (has_sendtocall()) {
    delete returning_.sendtocall_;
    clear_has_returning();
  }
}
inline  const ::Response_Sendto& Response::sendtocall() const {
  // @@protoc_insertion_point(field_get:Response.sendtoCall)
  return has_sendtocall()
      ? *returning_.sendtocall_
      : ::Response_Sendto::default_instance();
}
inline ::Response_Sendto* Response::mutable_sendtocall() {
  if (!has_sendtocall()) {
    clear_returning();
    set_has_sendtocall();
    returning_.sendtocall_ = new ::Response_Sendto;
  }
  // @@protoc_insertion_point(field_mutable:Response.sendtoCall)
  return returning_.sendtocall_;
}
inline ::Response_Sendto* Response::release_sendtocall() {
  // @@protoc_insertion_point(field_release:Response.sendtoCall)
  if (has_sendtocall()) {
    clear_has_returning();
    ::Response_Sendto* temp = returning_.sendtocall_;
    returning_.sendtocall_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void Response::set_allocated_sendtocall(::Response_Sendto* sendtocall) {
  clear_returning();
  if (sendtocall) {
    set_has_sendtocall();
    returning_.sendtocall_ = sendtocall;
  }
  // @@protoc_insertion_point(field_set_allocated:Response.sendtoCall)
}

// optional .Response.Poll pollCall = 6;
inline bool Response::has_pollcall() const {
  return returning_case() == kPollCall;
}
inline void Response::set_has_pollcall() {
  _oneof_case_[0] = kPollCall;
}
inline void Response::clear_pollcall() {
  if (has_pollcall()) {
    delete returning_.pollcall_;
    clear_has_returning();
  }
}
inline  const ::Response_Poll& Response::pollcall() const {
  // @@protoc_insertion_point(field_get:Response.pollCall)
  return has_pollcall()
      ? *returning_.pollcall_
      : ::Response_Poll::default_instance();
}
inline ::Response_Poll* Response::mutable_pollcall() {
  if (!has_pollcall()) {
    clear_returning();
    set_has_pollcall();
    returning_.pollcall_ = new ::Response_Poll;
  }
  // @@protoc_insertion_point(field_mutable:Response.pollCall)
  return returning_.pollcall_;
}
inline ::Response_Poll* Response::release_pollcall() {
  // @@protoc_insertion_point(field_release:Response.pollCall)
  if (has_pollcall()) {
    clear_has_returning();
    ::Response_Poll* temp = returning_.pollcall_;
    returning_.pollcall_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void Response::set_allocated_pollcall(::Response_Poll* pollcall) {
  clear_returning();
  if (pollcall) {
    set_has_pollcall();
    returning_.pollcall_ = pollcall;
  }
  // @@protoc_insertion_point(field_set_allocated:Response.pollCall)
}

// optional .Response.Select selectCall = 7;
inline bool Response::has_selectcall() const {
  return returning_case() == kSelectCall;
}
inline void Response::set_has_selectcall() {
  _oneof_case_[0] = kSelectCall;
}
inline void Response::clear_selectcall() {
  if (has_selectcall()) {
    delete returning_.selectcall_;
    clear_has_returning();
  }
}
inline  const ::Response_Select& Response::selectcall() const {
  // @@protoc_insertion_point(field_get:Response.selectCall)
  return has_selectcall()
      ? *returning_.selectcall_
      : ::Response_Select::default_instance();
}
inline ::Response_Select* Response::mutable_selectcall() {
  if (!has_selectcall()) {
    clear_returning();
    set_has_selectcall();
    returning_.selectcall_ = new ::Response_Select;
  }
  // @@protoc_insertion_point(field_mutable:Response.selectCall)
  return returning_.selectcall_;
}
inline ::Response_Select* Response::release_selectcall() {
  // @@protoc_insertion_point(field_release:Response.selectCall)
  if (has_selectcall()) {
    clear_has_returning();
    ::Response_Select* temp = returning_.selectcall_;
    returning_.selectcall_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void Response::set_allocated_selectcall(::Response_Select* selectcall) {
  clear_returning();
  if (selectcall) {
    set_has_selectcall();
    returning_.selectcall_ = selectcall;
  }
  // @@protoc_insertion_point(field_set_allocated:Response.selectCall)
}

// optional .Response.Getpeername getpeernameCall = 8;
inline bool Response::has_getpeernamecall() const {
  return returning_case() == kGetpeernameCall;
}
inline void Response::set_has_getpeernamecall() {
  _oneof_case_[0] = kGetpeernameCall;
}
inline void Response::clear_getpeernamecall() {
  if (has_getpeernamecall()) {
    delete returning_.getpeernamecall_;
    clear_has_returning();
  }
}
inline  const ::Response_Getpeername& Response::getpeernamecall() const {
  // @@protoc_insertion_point(field_get:Response.getpeernameCall)
  return has_getpeernamecall()
      ? *returning_.getpeernamecall_
      : ::Response_Getpeername::default_instance();
}
inline ::Response_Getpeername* Response::mutable_getpeernamecall() {
  if (!has_getpeernamecall()) {
    clear_returning();
    set_has_getpeernamecall();
    returning_.getpeernamecall_ = new ::Response_Getpeername;
  }
  // @@protoc_insertion_point(field_mutable:Response.getpeernameCall)
  return returning_.getpeernamecall_;
}
inline ::Response_Getpeername* Response::release_getpeernamecall() {
  // @@protoc_insertion_point(field_release:Response.getpeernameCall)
  if (has_getpeernamecall()) {
    clear_has_returning();
    ::Response_Getpeername* temp = returning_.getpeernamecall_;
    returning_.getpeernamecall_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void Response::set_allocated_getpeernamecall(::Response_Getpeername* getpeernamecall) {
  clear_returning();
  if (getpeernamecall) {
    set_has_getpeernamecall();
    returning_.getpeernamecall_ = getpeernamecall;
  }
  // @@protoc_insertion_point(field_set_allocated:Response.getpeernameCall)
}

// optional .Response.Getsockname getsocknameCall = 9;
inline bool Response::has_getsocknamecall() const {
  return returning_case() == kGetsocknameCall;
}
inline void Response::set_has_getsocknamecall() {
  _oneof_case_[0] = kGetsocknameCall;
}
inline void Response::clear_getsocknamecall() {
  if (has_getsocknamecall()) {
    delete returning_.getsocknamecall_;
    clear_has_returning();
  }
}
inline  const ::Response_Getsockname& Response::getsocknamecall() const {
  // @@protoc_insertion_point(field_get:Response.getsocknameCall)
  return has_getsocknamecall()
      ? *returning_.getsocknamecall_
      : ::Response_Getsockname::default_instance();
}
inline ::Response_Getsockname* Response::mutable_getsocknamecall() {
  if (!has_getsocknamecall()) {
    clear_returning();
    set_has_getsocknamecall();
    returning_.getsocknamecall_ = new ::Response_Getsockname;
  }
  // @@protoc_insertion_point(field_mutable:Response.getsocknameCall)
  return returning_.getsocknamecall_;
}
inline ::Response_Getsockname* Response::release_getsocknamecall() {
  // @@protoc_insertion_point(field_release:Response.getsocknameCall)
  if (has_getsocknamecall()) {
    clear_has_returning();
    ::Response_Getsockname* temp = returning_.getsocknamecall_;
    returning_.getsocknamecall_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void Response::set_allocated_getsocknamecall(::Response_Getsockname* getsocknamecall) {
  clear_returning();
  if (getsocknamecall) {
    set_has_getsocknamecall();
    returning_.getsocknamecall_ = getsocknamecall;
  }
  // @@protoc_insertion_point(field_set_allocated:Response.getsocknameCall)
}

// optional .Response.Getsockopt getsockoptCall = 10;
inline bool Response::has_getsockoptcall() const {
  return returning_case() == kGetsockoptCall;
}
inline void Response::set_has_getsockoptcall() {
  _oneof_case_[0] = kGetsockoptCall;
}
inline void Response::clear_getsockoptcall() {
  if (has_getsockoptcall()) {
    delete returning_.getsockoptcall_;
    clear_has_returning();
  }
}
inline  const ::Response_Getsockopt& Response::getsockoptcall() const {
  // @@protoc_insertion_point(field_get:Response.getsockoptCall)
  return has_getsockoptcall()
      ? *returning_.getsockoptcall_
      : ::Response_Getsockopt::default_instance();
}
inline ::Response_Getsockopt* Response::mutable_getsockoptcall() {
  if (!has_getsockoptcall()) {
    clear_returning();
    set_has_getsockoptcall();
    returning_.getsockoptcall_ = new ::Response_Getsockopt;
  }
  // @@protoc_insertion_point(field_mutable:Response.getsockoptCall)
  return returning_.getsockoptcall_;
}
inline ::Response_Getsockopt* Response::release_getsockoptcall() {
  // @@protoc_insertion_point(field_release:Response.getsockoptCall)
  if (has_getsockoptcall()) {
    clear_has_returning();
    ::Response_Getsockopt* temp = returning_.getsockoptcall_;
    returning_.getsockoptcall_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void Response::set_allocated_getsockoptcall(::Response_Getsockopt* getsockoptcall) {
  clear_returning();
  if (getsockoptcall) {
    set_has_getsockoptcall();
    returning_.getsockoptcall_ = getsockoptcall;
  }
  // @@protoc_insertion_point(field_set_allocated:Response.getsockoptCall)
}

// optional .Response.Setsockopt setsockoptCall = 11;
inline bool Response::has_setsockoptcall() const {
  return returning_case() == kSetsockoptCall;
}
inline void Response::set_has_setsockoptcall() {
  _oneof_case_[0] = kSetsockoptCall;
}
inline void Response::clear_setsockoptcall() {
  if (has_setsockoptcall()) {
    delete returning_.setsockoptcall_;
    clear_has_returning();
  }
}
inline  const ::Response_Setsockopt& Response::setsockoptcall() const {
  // @@protoc_insertion_point(field_get:Response.setsockoptCall)
  return has_setsockoptcall()
      ? *returning_.setsockoptcall_
      : ::Response_Setsockopt::default_instance();
}
inline ::Response_Setsockopt* Response::mutable_setsockoptcall() {
  if (!has_setsockoptcall()) {
    clear_returning();
    set_has_setsockoptcall();
    returning_.setsockoptcall_ = new ::Response_Setsockopt;
  }
  // @@protoc_insertion_point(field_mutable:Response.setsockoptCall)
  return returning_.setsockoptcall_;
}
inline ::Response_Setsockopt* Response::release_setsockoptcall() {
  // @@protoc_insertion_point(field_release:Response.setsockoptCall)
  if (has_setsockoptcall()) {
    clear_has_returning();
    ::Response_Setsockopt* temp = returning_.setsockoptcall_;
    returning_.setsockoptcall_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void Response::set_allocated_setsockoptcall(::Response_Setsockopt* setsockoptcall) {
  clear_returning();
  if (setsockoptcall) {
    set_has_setsockoptcall();
    returning_.setsockoptcall_ = setsockoptcall;
  }
  // @@protoc_insertion_point(field_set_allocated:Response.setsockoptCall)
}

// optional .Response.Fcntl fcntlCall = 12;
inline bool Response::has_fcntlcall() const {
  return returning_case() == kFcntlCall;
}
inline void Response::set_has_fcntlcall() {
  _oneof_case_[0] = kFcntlCall;
}
inline void Response::clear_fcntlcall() {
  if (has_fcntlcall()) {
    delete returning_.fcntlcall_;
    clear_has_returning();
  }
}
inline  const ::Response_Fcntl& Response::fcntlcall() const {
  // @@protoc_insertion_point(field_get:Response.fcntlCall)
  return has_fcntlcall()
      ? *returning_.fcntlcall_
      : ::Response_Fcntl::default_instance();
}
inline ::Response_Fcntl* Response::mutable_fcntlcall() {
  if (!has_fcntlcall()) {
    clear_returning();
    set_has_fcntlcall();
    returning_.fcntlcall_ = new ::Response_Fcntl;
  }
  // @@protoc_insertion_point(field_mutable:Response.fcntlCall)
  return returning_.fcntlcall_;
}
inline ::Response_Fcntl* Response::release_fcntlcall() {
  // @@protoc_insertion_point(field_release:Response.fcntlCall)
  if (has_fcntlcall()) {
    clear_has_returning();
    ::Response_Fcntl* temp = returning_.fcntlcall_;
    returning_.fcntlcall_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void Response::set_allocated_fcntlcall(::Response_Fcntl* fcntlcall) {
  clear_returning();
  if (fcntlcall) {
    set_has_fcntlcall();
    returning_.fcntlcall_ = fcntlcall;
  }
  // @@protoc_insertion_point(field_set_allocated:Response.fcntlCall)
}

// optional .Response.Atstart atstartAction = 16;
inline bool Response::has_atstartaction() const {
  return returning_case() == kAtstartAction;
}
inline void Response::set_has_atstartaction() {
  _oneof_case_[0] = kAtstartAction;
}
inline void Response::clear_atstartaction() {
  if (has_atstartaction()) {
    delete returning_.atstartaction_;
    clear_has_returning();
  }
}
inline  const ::Response_Atstart& Response::atstartaction() const {
  // @@protoc_insertion_point(field_get:Response.atstartAction)
  return has_atstartaction()
      ? *returning_.atstartaction_
      : ::Response_Atstart::default_instance();
}
inline ::Response_Atstart* Response::mutable_atstartaction() {
  if (!has_atstartaction()) {
    clear_returning();
    set_has_atstartaction();
    returning_.atstartaction_ = new ::Response_Atstart;
  }
  // @@protoc_insertion_point(field_mutable:Response.atstartAction)
  return returning_.atstartaction_;
}
inline ::Response_Atstart* Response::release_atstartaction() {
  // @@protoc_insertion_point(field_release:Response.atstartAction)
  if (has_atstartaction()) {
    clear_has_returning();
    ::Response_Atstart* temp = returning_.atstartaction_;
    returning_.atstartaction_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void Response::set_allocated_atstartaction(::Response_Atstart* atstartaction) {
  clear_returning();
  if (atstartaction) {
    set_has_atstartaction();
    returning_.atstartaction_ = atstartaction;
  }
  // @@protoc_insertion_point(field_set_allocated:Response.atstartAction)
}

// required .Response.RetCode retCode = 15;
inline bool Response::has_retcode() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void Response::set_has_retcode() {
  _has_bits_[0] |= 0x00002000u;
}
inline void Response::clear_has_retcode() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void Response::clear_retcode() {
  retcode_ = 0;
  clear_has_retcode();
}
inline ::Response_RetCode Response::retcode() const {
  // @@protoc_insertion_point(field_get:Response.retCode)
  return static_cast< ::Response_RetCode >(retcode_);
}
inline void Response::set_retcode(::Response_RetCode value) {
  assert(::Response_RetCode_IsValid(value));
  set_has_retcode();
  retcode_ = value;
  // @@protoc_insertion_point(field_set:Response.retCode)
}

inline bool Response::has_returning() const {
  return returning_case() != RETURNING_NOT_SET;
}
inline void Response::clear_has_returning() {
  _oneof_case_[0] = RETURNING_NOT_SET;
}
inline Response::ReturningCase Response::returning_case() const {
  return Response::ReturningCase(_oneof_case_[0]);
}
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::Response_RetCode> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Response_RetCode>() {
  return ::Response_RetCode_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_response_2eproto__INCLUDED
