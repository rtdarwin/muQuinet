// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: request.proto

#ifndef PROTOBUF_request_2eproto__INCLUDED
#define PROTOBUF_request_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_request_2eproto();
void protobuf_AssignDesc_request_2eproto();
void protobuf_ShutdownFile_request_2eproto();

class Request;
class Request_Atexit;
class Request_Atfork;
class Request_Atstart;
class Request_Close;
class Request_Connect;
class Request_Fcntl;
class Request_Getpeername;
class Request_Getsockname;
class Request_Getsockopt;
class Request_Poll;
class Request_Recvfrom;
class Request_Select;
class Request_Sendto;
class Request_Setsockopt;
class Request_Socket;

// ===================================================================

class Request_Socket : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Request.Socket) */ {
 public:
  Request_Socket();
  virtual ~Request_Socket();

  Request_Socket(const Request_Socket& from);

  inline Request_Socket& operator=(const Request_Socket& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Request_Socket& default_instance();

  void Swap(Request_Socket* other);

  // implements Message ----------------------------------------------

  inline Request_Socket* New() const { return New(NULL); }

  Request_Socket* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Request_Socket& from);
  void MergeFrom(const Request_Socket& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Request_Socket* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 domain = 1;
  bool has_domain() const;
  void clear_domain();
  static const int kDomainFieldNumber = 1;
  ::google::protobuf::int32 domain() const;
  void set_domain(::google::protobuf::int32 value);

  // required int32 type = 2;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 2;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // required int32 protocol = 3;
  bool has_protocol() const;
  void clear_protocol();
  static const int kProtocolFieldNumber = 3;
  ::google::protobuf::int32 protocol() const;
  void set_protocol(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Request.Socket)
 private:
  inline void set_has_domain();
  inline void clear_has_domain();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_protocol();
  inline void clear_has_protocol();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 domain_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 protocol_;
  friend void  protobuf_AddDesc_request_2eproto();
  friend void protobuf_AssignDesc_request_2eproto();
  friend void protobuf_ShutdownFile_request_2eproto();

  void InitAsDefaultInstance();
  static Request_Socket* default_instance_;
};
// -------------------------------------------------------------------

class Request_Connect : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Request.Connect) */ {
 public:
  Request_Connect();
  virtual ~Request_Connect();

  Request_Connect(const Request_Connect& from);

  inline Request_Connect& operator=(const Request_Connect& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Request_Connect& default_instance();

  void Swap(Request_Connect* other);

  // implements Message ----------------------------------------------

  inline Request_Connect* New() const { return New(NULL); }

  Request_Connect* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Request_Connect& from);
  void MergeFrom(const Request_Connect& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Request_Connect* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes addr = 1;
  bool has_addr() const;
  void clear_addr();
  static const int kAddrFieldNumber = 1;
  const ::std::string& addr() const;
  void set_addr(const ::std::string& value);
  void set_addr(const char* value);
  void set_addr(const void* value, size_t size);
  ::std::string* mutable_addr();
  ::std::string* release_addr();
  void set_allocated_addr(::std::string* addr);

  // @@protoc_insertion_point(class_scope:Request.Connect)
 private:
  inline void set_has_addr();
  inline void clear_has_addr();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr addr_;
  friend void  protobuf_AddDesc_request_2eproto();
  friend void protobuf_AssignDesc_request_2eproto();
  friend void protobuf_ShutdownFile_request_2eproto();

  void InitAsDefaultInstance();
  static Request_Connect* default_instance_;
};
// -------------------------------------------------------------------

class Request_Close : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Request.Close) */ {
 public:
  Request_Close();
  virtual ~Request_Close();

  Request_Close(const Request_Close& from);

  inline Request_Close& operator=(const Request_Close& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Request_Close& default_instance();

  void Swap(Request_Close* other);

  // implements Message ----------------------------------------------

  inline Request_Close* New() const { return New(NULL); }

  Request_Close* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Request_Close& from);
  void MergeFrom(const Request_Close& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Request_Close* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:Request.Close)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_request_2eproto();
  friend void protobuf_AssignDesc_request_2eproto();
  friend void protobuf_ShutdownFile_request_2eproto();

  void InitAsDefaultInstance();
  static Request_Close* default_instance_;
};
// -------------------------------------------------------------------

class Request_Recvfrom : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Request.Recvfrom) */ {
 public:
  Request_Recvfrom();
  virtual ~Request_Recvfrom();

  Request_Recvfrom(const Request_Recvfrom& from);

  inline Request_Recvfrom& operator=(const Request_Recvfrom& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Request_Recvfrom& default_instance();

  void Swap(Request_Recvfrom* other);

  // implements Message ----------------------------------------------

  inline Request_Recvfrom* New() const { return New(NULL); }

  Request_Recvfrom* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Request_Recvfrom& from);
  void MergeFrom(const Request_Recvfrom& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Request_Recvfrom* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 len = 1;
  bool has_len() const;
  void clear_len();
  static const int kLenFieldNumber = 1;
  ::google::protobuf::int32 len() const;
  void set_len(::google::protobuf::int32 value);

  // required int32 flags = 2;
  bool has_flags() const;
  void clear_flags();
  static const int kFlagsFieldNumber = 2;
  ::google::protobuf::int32 flags() const;
  void set_flags(::google::protobuf::int32 value);

  // required bool requireAddr = 3;
  bool has_requireaddr() const;
  void clear_requireaddr();
  static const int kRequireAddrFieldNumber = 3;
  bool requireaddr() const;
  void set_requireaddr(bool value);

  // @@protoc_insertion_point(class_scope:Request.Recvfrom)
 private:
  inline void set_has_len();
  inline void clear_has_len();
  inline void set_has_flags();
  inline void clear_has_flags();
  inline void set_has_requireaddr();
  inline void clear_has_requireaddr();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 len_;
  ::google::protobuf::int32 flags_;
  bool requireaddr_;
  friend void  protobuf_AddDesc_request_2eproto();
  friend void protobuf_AssignDesc_request_2eproto();
  friend void protobuf_ShutdownFile_request_2eproto();

  void InitAsDefaultInstance();
  static Request_Recvfrom* default_instance_;
};
// -------------------------------------------------------------------

class Request_Sendto : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Request.Sendto) */ {
 public:
  Request_Sendto();
  virtual ~Request_Sendto();

  Request_Sendto(const Request_Sendto& from);

  inline Request_Sendto& operator=(const Request_Sendto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Request_Sendto& default_instance();

  void Swap(Request_Sendto* other);

  // implements Message ----------------------------------------------

  inline Request_Sendto* New() const { return New(NULL); }

  Request_Sendto* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Request_Sendto& from);
  void MergeFrom(const Request_Sendto& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Request_Sendto* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes buf = 1;
  bool has_buf() const;
  void clear_buf();
  static const int kBufFieldNumber = 1;
  const ::std::string& buf() const;
  void set_buf(const ::std::string& value);
  void set_buf(const char* value);
  void set_buf(const void* value, size_t size);
  ::std::string* mutable_buf();
  ::std::string* release_buf();
  void set_allocated_buf(::std::string* buf);

  // required int32 flags = 2;
  bool has_flags() const;
  void clear_flags();
  static const int kFlagsFieldNumber = 2;
  ::google::protobuf::int32 flags() const;
  void set_flags(::google::protobuf::int32 value);

  // optional bytes addr = 3;
  bool has_addr() const;
  void clear_addr();
  static const int kAddrFieldNumber = 3;
  const ::std::string& addr() const;
  void set_addr(const ::std::string& value);
  void set_addr(const char* value);
  void set_addr(const void* value, size_t size);
  ::std::string* mutable_addr();
  ::std::string* release_addr();
  void set_allocated_addr(::std::string* addr);

  // @@protoc_insertion_point(class_scope:Request.Sendto)
 private:
  inline void set_has_buf();
  inline void clear_has_buf();
  inline void set_has_flags();
  inline void clear_has_flags();
  inline void set_has_addr();
  inline void clear_has_addr();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr buf_;
  ::google::protobuf::internal::ArenaStringPtr addr_;
  ::google::protobuf::int32 flags_;
  friend void  protobuf_AddDesc_request_2eproto();
  friend void protobuf_AssignDesc_request_2eproto();
  friend void protobuf_ShutdownFile_request_2eproto();

  void InitAsDefaultInstance();
  static Request_Sendto* default_instance_;
};
// -------------------------------------------------------------------

class Request_Poll : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Request.Poll) */ {
 public:
  Request_Poll();
  virtual ~Request_Poll();

  Request_Poll(const Request_Poll& from);

  inline Request_Poll& operator=(const Request_Poll& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Request_Poll& default_instance();

  void Swap(Request_Poll* other);

  // implements Message ----------------------------------------------

  inline Request_Poll* New() const { return New(NULL); }

  Request_Poll* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Request_Poll& from);
  void MergeFrom(const Request_Poll& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Request_Poll* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:Request.Poll)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_request_2eproto();
  friend void protobuf_AssignDesc_request_2eproto();
  friend void protobuf_ShutdownFile_request_2eproto();

  void InitAsDefaultInstance();
  static Request_Poll* default_instance_;
};
// -------------------------------------------------------------------

class Request_Select : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Request.Select) */ {
 public:
  Request_Select();
  virtual ~Request_Select();

  Request_Select(const Request_Select& from);

  inline Request_Select& operator=(const Request_Select& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Request_Select& default_instance();

  void Swap(Request_Select* other);

  // implements Message ----------------------------------------------

  inline Request_Select* New() const { return New(NULL); }

  Request_Select* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Request_Select& from);
  void MergeFrom(const Request_Select& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Request_Select* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:Request.Select)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_request_2eproto();
  friend void protobuf_AssignDesc_request_2eproto();
  friend void protobuf_ShutdownFile_request_2eproto();

  void InitAsDefaultInstance();
  static Request_Select* default_instance_;
};
// -------------------------------------------------------------------

class Request_Getpeername : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Request.Getpeername) */ {
 public:
  Request_Getpeername();
  virtual ~Request_Getpeername();

  Request_Getpeername(const Request_Getpeername& from);

  inline Request_Getpeername& operator=(const Request_Getpeername& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Request_Getpeername& default_instance();

  void Swap(Request_Getpeername* other);

  // implements Message ----------------------------------------------

  inline Request_Getpeername* New() const { return New(NULL); }

  Request_Getpeername* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Request_Getpeername& from);
  void MergeFrom(const Request_Getpeername& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Request_Getpeername* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:Request.Getpeername)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_request_2eproto();
  friend void protobuf_AssignDesc_request_2eproto();
  friend void protobuf_ShutdownFile_request_2eproto();

  void InitAsDefaultInstance();
  static Request_Getpeername* default_instance_;
};
// -------------------------------------------------------------------

class Request_Getsockname : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Request.Getsockname) */ {
 public:
  Request_Getsockname();
  virtual ~Request_Getsockname();

  Request_Getsockname(const Request_Getsockname& from);

  inline Request_Getsockname& operator=(const Request_Getsockname& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Request_Getsockname& default_instance();

  void Swap(Request_Getsockname* other);

  // implements Message ----------------------------------------------

  inline Request_Getsockname* New() const { return New(NULL); }

  Request_Getsockname* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Request_Getsockname& from);
  void MergeFrom(const Request_Getsockname& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Request_Getsockname* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:Request.Getsockname)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_request_2eproto();
  friend void protobuf_AssignDesc_request_2eproto();
  friend void protobuf_ShutdownFile_request_2eproto();

  void InitAsDefaultInstance();
  static Request_Getsockname* default_instance_;
};
// -------------------------------------------------------------------

class Request_Getsockopt : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Request.Getsockopt) */ {
 public:
  Request_Getsockopt();
  virtual ~Request_Getsockopt();

  Request_Getsockopt(const Request_Getsockopt& from);

  inline Request_Getsockopt& operator=(const Request_Getsockopt& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Request_Getsockopt& default_instance();

  void Swap(Request_Getsockopt* other);

  // implements Message ----------------------------------------------

  inline Request_Getsockopt* New() const { return New(NULL); }

  Request_Getsockopt* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Request_Getsockopt& from);
  void MergeFrom(const Request_Getsockopt& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Request_Getsockopt* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:Request.Getsockopt)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_request_2eproto();
  friend void protobuf_AssignDesc_request_2eproto();
  friend void protobuf_ShutdownFile_request_2eproto();

  void InitAsDefaultInstance();
  static Request_Getsockopt* default_instance_;
};
// -------------------------------------------------------------------

class Request_Setsockopt : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Request.Setsockopt) */ {
 public:
  Request_Setsockopt();
  virtual ~Request_Setsockopt();

  Request_Setsockopt(const Request_Setsockopt& from);

  inline Request_Setsockopt& operator=(const Request_Setsockopt& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Request_Setsockopt& default_instance();

  void Swap(Request_Setsockopt* other);

  // implements Message ----------------------------------------------

  inline Request_Setsockopt* New() const { return New(NULL); }

  Request_Setsockopt* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Request_Setsockopt& from);
  void MergeFrom(const Request_Setsockopt& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Request_Setsockopt* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:Request.Setsockopt)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_request_2eproto();
  friend void protobuf_AssignDesc_request_2eproto();
  friend void protobuf_ShutdownFile_request_2eproto();

  void InitAsDefaultInstance();
  static Request_Setsockopt* default_instance_;
};
// -------------------------------------------------------------------

class Request_Fcntl : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Request.Fcntl) */ {
 public:
  Request_Fcntl();
  virtual ~Request_Fcntl();

  Request_Fcntl(const Request_Fcntl& from);

  inline Request_Fcntl& operator=(const Request_Fcntl& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Request_Fcntl& default_instance();

  void Swap(Request_Fcntl* other);

  // implements Message ----------------------------------------------

  inline Request_Fcntl* New() const { return New(NULL); }

  Request_Fcntl* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Request_Fcntl& from);
  void MergeFrom(const Request_Fcntl& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Request_Fcntl* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:Request.Fcntl)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_request_2eproto();
  friend void protobuf_AssignDesc_request_2eproto();
  friend void protobuf_ShutdownFile_request_2eproto();

  void InitAsDefaultInstance();
  static Request_Fcntl* default_instance_;
};
// -------------------------------------------------------------------

class Request_Atstart : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Request.Atstart) */ {
 public:
  Request_Atstart();
  virtual ~Request_Atstart();

  Request_Atstart(const Request_Atstart& from);

  inline Request_Atstart& operator=(const Request_Atstart& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Request_Atstart& default_instance();

  void Swap(Request_Atstart* other);

  // implements Message ----------------------------------------------

  inline Request_Atstart* New() const { return New(NULL); }

  Request_Atstart* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Request_Atstart& from);
  void MergeFrom(const Request_Atstart& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Request_Atstart* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string progname = 1;
  bool has_progname() const;
  void clear_progname();
  static const int kPrognameFieldNumber = 1;
  const ::std::string& progname() const;
  void set_progname(const ::std::string& value);
  void set_progname(const char* value);
  void set_progname(const char* value, size_t size);
  ::std::string* mutable_progname();
  ::std::string* release_progname();
  void set_allocated_progname(::std::string* progname);

  // @@protoc_insertion_point(class_scope:Request.Atstart)
 private:
  inline void set_has_progname();
  inline void clear_has_progname();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr progname_;
  friend void  protobuf_AddDesc_request_2eproto();
  friend void protobuf_AssignDesc_request_2eproto();
  friend void protobuf_ShutdownFile_request_2eproto();

  void InitAsDefaultInstance();
  static Request_Atstart* default_instance_;
};
// -------------------------------------------------------------------

class Request_Atfork : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Request.Atfork) */ {
 public:
  Request_Atfork();
  virtual ~Request_Atfork();

  Request_Atfork(const Request_Atfork& from);

  inline Request_Atfork& operator=(const Request_Atfork& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Request_Atfork& default_instance();

  void Swap(Request_Atfork* other);

  // implements Message ----------------------------------------------

  inline Request_Atfork* New() const { return New(NULL); }

  Request_Atfork* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Request_Atfork& from);
  void MergeFrom(const Request_Atfork& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Request_Atfork* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:Request.Atfork)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_request_2eproto();
  friend void protobuf_AssignDesc_request_2eproto();
  friend void protobuf_ShutdownFile_request_2eproto();

  void InitAsDefaultInstance();
  static Request_Atfork* default_instance_;
};
// -------------------------------------------------------------------

class Request_Atexit : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Request.Atexit) */ {
 public:
  Request_Atexit();
  virtual ~Request_Atexit();

  Request_Atexit(const Request_Atexit& from);

  inline Request_Atexit& operator=(const Request_Atexit& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Request_Atexit& default_instance();

  void Swap(Request_Atexit* other);

  // implements Message ----------------------------------------------

  inline Request_Atexit* New() const { return New(NULL); }

  Request_Atexit* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Request_Atexit& from);
  void MergeFrom(const Request_Atexit& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Request_Atexit* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:Request.Atexit)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_request_2eproto();
  friend void protobuf_AssignDesc_request_2eproto();
  friend void protobuf_ShutdownFile_request_2eproto();

  void InitAsDefaultInstance();
  static Request_Atexit* default_instance_;
};
// -------------------------------------------------------------------

class Request : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Request) */ {
 public:
  Request();
  virtual ~Request();

  Request(const Request& from);

  inline Request& operator=(const Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Request& default_instance();

  enum CallingCase {
    kSocketCall = 1,
    kConnectCall = 2,
    kCloseCall = 3,
    kRecvfromCall = 4,
    kSendtoCall = 5,
    kPollCall = 6,
    kSelectCall = 7,
    kGetpeernameCall = 8,
    kGetsocknameCall = 9,
    kGetsockoptCall = 10,
    kSetsockoptCall = 11,
    kFcntlCall = 12,
    kAtstartAction = 16,
    kAtforkAction = 17,
    kAtexitAction = 18,
    CALLING_NOT_SET = 0,
  };

  void Swap(Request* other);

  // implements Message ----------------------------------------------

  inline Request* New() const { return New(NULL); }

  Request* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Request& from);
  void MergeFrom(const Request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Request* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef Request_Socket Socket;
  typedef Request_Connect Connect;
  typedef Request_Close Close;
  typedef Request_Recvfrom Recvfrom;
  typedef Request_Sendto Sendto;
  typedef Request_Poll Poll;
  typedef Request_Select Select;
  typedef Request_Getpeername Getpeername;
  typedef Request_Getsockname Getsockname;
  typedef Request_Getsockopt Getsockopt;
  typedef Request_Setsockopt Setsockopt;
  typedef Request_Fcntl Fcntl;
  typedef Request_Atstart Atstart;
  typedef Request_Atfork Atfork;
  typedef Request_Atexit Atexit;

  // accessors -------------------------------------------------------

  // optional .Request.Socket socketCall = 1;
  bool has_socketcall() const;
  void clear_socketcall();
  static const int kSocketCallFieldNumber = 1;
  const ::Request_Socket& socketcall() const;
  ::Request_Socket* mutable_socketcall();
  ::Request_Socket* release_socketcall();
  void set_allocated_socketcall(::Request_Socket* socketcall);

  // optional .Request.Connect connectCall = 2;
  bool has_connectcall() const;
  void clear_connectcall();
  static const int kConnectCallFieldNumber = 2;
  const ::Request_Connect& connectcall() const;
  ::Request_Connect* mutable_connectcall();
  ::Request_Connect* release_connectcall();
  void set_allocated_connectcall(::Request_Connect* connectcall);

  // optional .Request.Close closeCall = 3;
  bool has_closecall() const;
  void clear_closecall();
  static const int kCloseCallFieldNumber = 3;
  const ::Request_Close& closecall() const;
  ::Request_Close* mutable_closecall();
  ::Request_Close* release_closecall();
  void set_allocated_closecall(::Request_Close* closecall);

  // optional .Request.Recvfrom recvfromCall = 4;
  bool has_recvfromcall() const;
  void clear_recvfromcall();
  static const int kRecvfromCallFieldNumber = 4;
  const ::Request_Recvfrom& recvfromcall() const;
  ::Request_Recvfrom* mutable_recvfromcall();
  ::Request_Recvfrom* release_recvfromcall();
  void set_allocated_recvfromcall(::Request_Recvfrom* recvfromcall);

  // optional .Request.Sendto sendtoCall = 5;
  bool has_sendtocall() const;
  void clear_sendtocall();
  static const int kSendtoCallFieldNumber = 5;
  const ::Request_Sendto& sendtocall() const;
  ::Request_Sendto* mutable_sendtocall();
  ::Request_Sendto* release_sendtocall();
  void set_allocated_sendtocall(::Request_Sendto* sendtocall);

  // optional .Request.Poll pollCall = 6;
  bool has_pollcall() const;
  void clear_pollcall();
  static const int kPollCallFieldNumber = 6;
  const ::Request_Poll& pollcall() const;
  ::Request_Poll* mutable_pollcall();
  ::Request_Poll* release_pollcall();
  void set_allocated_pollcall(::Request_Poll* pollcall);

  // optional .Request.Select selectCall = 7;
  bool has_selectcall() const;
  void clear_selectcall();
  static const int kSelectCallFieldNumber = 7;
  const ::Request_Select& selectcall() const;
  ::Request_Select* mutable_selectcall();
  ::Request_Select* release_selectcall();
  void set_allocated_selectcall(::Request_Select* selectcall);

  // optional .Request.Getpeername getpeernameCall = 8;
  bool has_getpeernamecall() const;
  void clear_getpeernamecall();
  static const int kGetpeernameCallFieldNumber = 8;
  const ::Request_Getpeername& getpeernamecall() const;
  ::Request_Getpeername* mutable_getpeernamecall();
  ::Request_Getpeername* release_getpeernamecall();
  void set_allocated_getpeernamecall(::Request_Getpeername* getpeernamecall);

  // optional .Request.Getsockname getsocknameCall = 9;
  bool has_getsocknamecall() const;
  void clear_getsocknamecall();
  static const int kGetsocknameCallFieldNumber = 9;
  const ::Request_Getsockname& getsocknamecall() const;
  ::Request_Getsockname* mutable_getsocknamecall();
  ::Request_Getsockname* release_getsocknamecall();
  void set_allocated_getsocknamecall(::Request_Getsockname* getsocknamecall);

  // optional .Request.Getsockopt getsockoptCall = 10;
  bool has_getsockoptcall() const;
  void clear_getsockoptcall();
  static const int kGetsockoptCallFieldNumber = 10;
  const ::Request_Getsockopt& getsockoptcall() const;
  ::Request_Getsockopt* mutable_getsockoptcall();
  ::Request_Getsockopt* release_getsockoptcall();
  void set_allocated_getsockoptcall(::Request_Getsockopt* getsockoptcall);

  // optional .Request.Setsockopt setsockoptCall = 11;
  bool has_setsockoptcall() const;
  void clear_setsockoptcall();
  static const int kSetsockoptCallFieldNumber = 11;
  const ::Request_Setsockopt& setsockoptcall() const;
  ::Request_Setsockopt* mutable_setsockoptcall();
  ::Request_Setsockopt* release_setsockoptcall();
  void set_allocated_setsockoptcall(::Request_Setsockopt* setsockoptcall);

  // optional .Request.Fcntl fcntlCall = 12;
  bool has_fcntlcall() const;
  void clear_fcntlcall();
  static const int kFcntlCallFieldNumber = 12;
  const ::Request_Fcntl& fcntlcall() const;
  ::Request_Fcntl* mutable_fcntlcall();
  ::Request_Fcntl* release_fcntlcall();
  void set_allocated_fcntlcall(::Request_Fcntl* fcntlcall);

  // optional .Request.Atstart atstartAction = 16;
  bool has_atstartaction() const;
  void clear_atstartaction();
  static const int kAtstartActionFieldNumber = 16;
  const ::Request_Atstart& atstartaction() const;
  ::Request_Atstart* mutable_atstartaction();
  ::Request_Atstart* release_atstartaction();
  void set_allocated_atstartaction(::Request_Atstart* atstartaction);

  // optional .Request.Atfork atforkAction = 17;
  bool has_atforkaction() const;
  void clear_atforkaction();
  static const int kAtforkActionFieldNumber = 17;
  const ::Request_Atfork& atforkaction() const;
  ::Request_Atfork* mutable_atforkaction();
  ::Request_Atfork* release_atforkaction();
  void set_allocated_atforkaction(::Request_Atfork* atforkaction);

  // optional .Request.Atexit atexitAction = 18;
  bool has_atexitaction() const;
  void clear_atexitaction();
  static const int kAtexitActionFieldNumber = 18;
  const ::Request_Atexit& atexitaction() const;
  ::Request_Atexit* mutable_atexitaction();
  ::Request_Atexit* release_atexitaction();
  void set_allocated_atexitaction(::Request_Atexit* atexitaction);

  // required uint64 pid = 15;
  bool has_pid() const;
  void clear_pid();
  static const int kPidFieldNumber = 15;
  ::google::protobuf::uint64 pid() const;
  void set_pid(::google::protobuf::uint64 value);

  CallingCase calling_case() const;
  // @@protoc_insertion_point(class_scope:Request)
 private:
  inline void set_has_socketcall();
  inline void set_has_connectcall();
  inline void set_has_closecall();
  inline void set_has_recvfromcall();
  inline void set_has_sendtocall();
  inline void set_has_pollcall();
  inline void set_has_selectcall();
  inline void set_has_getpeernamecall();
  inline void set_has_getsocknamecall();
  inline void set_has_getsockoptcall();
  inline void set_has_setsockoptcall();
  inline void set_has_fcntlcall();
  inline void set_has_atstartaction();
  inline void set_has_atforkaction();
  inline void set_has_atexitaction();
  inline void set_has_pid();
  inline void clear_has_pid();

  inline bool has_calling() const;
  void clear_calling();
  inline void clear_has_calling();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 pid_;
  union CallingUnion {
    CallingUnion() {}
    ::Request_Socket* socketcall_;
    ::Request_Connect* connectcall_;
    ::Request_Close* closecall_;
    ::Request_Recvfrom* recvfromcall_;
    ::Request_Sendto* sendtocall_;
    ::Request_Poll* pollcall_;
    ::Request_Select* selectcall_;
    ::Request_Getpeername* getpeernamecall_;
    ::Request_Getsockname* getsocknamecall_;
    ::Request_Getsockopt* getsockoptcall_;
    ::Request_Setsockopt* setsockoptcall_;
    ::Request_Fcntl* fcntlcall_;
    ::Request_Atstart* atstartaction_;
    ::Request_Atfork* atforkaction_;
    ::Request_Atexit* atexitaction_;
  } calling_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend void  protobuf_AddDesc_request_2eproto();
  friend void protobuf_AssignDesc_request_2eproto();
  friend void protobuf_ShutdownFile_request_2eproto();

  void InitAsDefaultInstance();
  static Request* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// Request_Socket

// required int32 domain = 1;
inline bool Request_Socket::has_domain() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Request_Socket::set_has_domain() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Request_Socket::clear_has_domain() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Request_Socket::clear_domain() {
  domain_ = 0;
  clear_has_domain();
}
inline ::google::protobuf::int32 Request_Socket::domain() const {
  // @@protoc_insertion_point(field_get:Request.Socket.domain)
  return domain_;
}
inline void Request_Socket::set_domain(::google::protobuf::int32 value) {
  set_has_domain();
  domain_ = value;
  // @@protoc_insertion_point(field_set:Request.Socket.domain)
}

// required int32 type = 2;
inline bool Request_Socket::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Request_Socket::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Request_Socket::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Request_Socket::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 Request_Socket::type() const {
  // @@protoc_insertion_point(field_get:Request.Socket.type)
  return type_;
}
inline void Request_Socket::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:Request.Socket.type)
}

// required int32 protocol = 3;
inline bool Request_Socket::has_protocol() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Request_Socket::set_has_protocol() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Request_Socket::clear_has_protocol() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Request_Socket::clear_protocol() {
  protocol_ = 0;
  clear_has_protocol();
}
inline ::google::protobuf::int32 Request_Socket::protocol() const {
  // @@protoc_insertion_point(field_get:Request.Socket.protocol)
  return protocol_;
}
inline void Request_Socket::set_protocol(::google::protobuf::int32 value) {
  set_has_protocol();
  protocol_ = value;
  // @@protoc_insertion_point(field_set:Request.Socket.protocol)
}

// -------------------------------------------------------------------

// Request_Connect

// required bytes addr = 1;
inline bool Request_Connect::has_addr() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Request_Connect::set_has_addr() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Request_Connect::clear_has_addr() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Request_Connect::clear_addr() {
  addr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_addr();
}
inline const ::std::string& Request_Connect::addr() const {
  // @@protoc_insertion_point(field_get:Request.Connect.addr)
  return addr_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Request_Connect::set_addr(const ::std::string& value) {
  set_has_addr();
  addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Request.Connect.addr)
}
inline void Request_Connect::set_addr(const char* value) {
  set_has_addr();
  addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Request.Connect.addr)
}
inline void Request_Connect::set_addr(const void* value, size_t size) {
  set_has_addr();
  addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Request.Connect.addr)
}
inline ::std::string* Request_Connect::mutable_addr() {
  set_has_addr();
  // @@protoc_insertion_point(field_mutable:Request.Connect.addr)
  return addr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Request_Connect::release_addr() {
  // @@protoc_insertion_point(field_release:Request.Connect.addr)
  clear_has_addr();
  return addr_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Request_Connect::set_allocated_addr(::std::string* addr) {
  if (addr != NULL) {
    set_has_addr();
  } else {
    clear_has_addr();
  }
  addr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), addr);
  // @@protoc_insertion_point(field_set_allocated:Request.Connect.addr)
}

// -------------------------------------------------------------------

// Request_Close

// -------------------------------------------------------------------

// Request_Recvfrom

// required int32 len = 1;
inline bool Request_Recvfrom::has_len() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Request_Recvfrom::set_has_len() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Request_Recvfrom::clear_has_len() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Request_Recvfrom::clear_len() {
  len_ = 0;
  clear_has_len();
}
inline ::google::protobuf::int32 Request_Recvfrom::len() const {
  // @@protoc_insertion_point(field_get:Request.Recvfrom.len)
  return len_;
}
inline void Request_Recvfrom::set_len(::google::protobuf::int32 value) {
  set_has_len();
  len_ = value;
  // @@protoc_insertion_point(field_set:Request.Recvfrom.len)
}

// required int32 flags = 2;
inline bool Request_Recvfrom::has_flags() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Request_Recvfrom::set_has_flags() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Request_Recvfrom::clear_has_flags() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Request_Recvfrom::clear_flags() {
  flags_ = 0;
  clear_has_flags();
}
inline ::google::protobuf::int32 Request_Recvfrom::flags() const {
  // @@protoc_insertion_point(field_get:Request.Recvfrom.flags)
  return flags_;
}
inline void Request_Recvfrom::set_flags(::google::protobuf::int32 value) {
  set_has_flags();
  flags_ = value;
  // @@protoc_insertion_point(field_set:Request.Recvfrom.flags)
}

// required bool requireAddr = 3;
inline bool Request_Recvfrom::has_requireaddr() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Request_Recvfrom::set_has_requireaddr() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Request_Recvfrom::clear_has_requireaddr() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Request_Recvfrom::clear_requireaddr() {
  requireaddr_ = false;
  clear_has_requireaddr();
}
inline bool Request_Recvfrom::requireaddr() const {
  // @@protoc_insertion_point(field_get:Request.Recvfrom.requireAddr)
  return requireaddr_;
}
inline void Request_Recvfrom::set_requireaddr(bool value) {
  set_has_requireaddr();
  requireaddr_ = value;
  // @@protoc_insertion_point(field_set:Request.Recvfrom.requireAddr)
}

// -------------------------------------------------------------------

// Request_Sendto

// required bytes buf = 1;
inline bool Request_Sendto::has_buf() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Request_Sendto::set_has_buf() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Request_Sendto::clear_has_buf() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Request_Sendto::clear_buf() {
  buf_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_buf();
}
inline const ::std::string& Request_Sendto::buf() const {
  // @@protoc_insertion_point(field_get:Request.Sendto.buf)
  return buf_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Request_Sendto::set_buf(const ::std::string& value) {
  set_has_buf();
  buf_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Request.Sendto.buf)
}
inline void Request_Sendto::set_buf(const char* value) {
  set_has_buf();
  buf_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Request.Sendto.buf)
}
inline void Request_Sendto::set_buf(const void* value, size_t size) {
  set_has_buf();
  buf_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Request.Sendto.buf)
}
inline ::std::string* Request_Sendto::mutable_buf() {
  set_has_buf();
  // @@protoc_insertion_point(field_mutable:Request.Sendto.buf)
  return buf_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Request_Sendto::release_buf() {
  // @@protoc_insertion_point(field_release:Request.Sendto.buf)
  clear_has_buf();
  return buf_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Request_Sendto::set_allocated_buf(::std::string* buf) {
  if (buf != NULL) {
    set_has_buf();
  } else {
    clear_has_buf();
  }
  buf_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), buf);
  // @@protoc_insertion_point(field_set_allocated:Request.Sendto.buf)
}

// required int32 flags = 2;
inline bool Request_Sendto::has_flags() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Request_Sendto::set_has_flags() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Request_Sendto::clear_has_flags() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Request_Sendto::clear_flags() {
  flags_ = 0;
  clear_has_flags();
}
inline ::google::protobuf::int32 Request_Sendto::flags() const {
  // @@protoc_insertion_point(field_get:Request.Sendto.flags)
  return flags_;
}
inline void Request_Sendto::set_flags(::google::protobuf::int32 value) {
  set_has_flags();
  flags_ = value;
  // @@protoc_insertion_point(field_set:Request.Sendto.flags)
}

// optional bytes addr = 3;
inline bool Request_Sendto::has_addr() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Request_Sendto::set_has_addr() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Request_Sendto::clear_has_addr() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Request_Sendto::clear_addr() {
  addr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_addr();
}
inline const ::std::string& Request_Sendto::addr() const {
  // @@protoc_insertion_point(field_get:Request.Sendto.addr)
  return addr_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Request_Sendto::set_addr(const ::std::string& value) {
  set_has_addr();
  addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Request.Sendto.addr)
}
inline void Request_Sendto::set_addr(const char* value) {
  set_has_addr();
  addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Request.Sendto.addr)
}
inline void Request_Sendto::set_addr(const void* value, size_t size) {
  set_has_addr();
  addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Request.Sendto.addr)
}
inline ::std::string* Request_Sendto::mutable_addr() {
  set_has_addr();
  // @@protoc_insertion_point(field_mutable:Request.Sendto.addr)
  return addr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Request_Sendto::release_addr() {
  // @@protoc_insertion_point(field_release:Request.Sendto.addr)
  clear_has_addr();
  return addr_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Request_Sendto::set_allocated_addr(::std::string* addr) {
  if (addr != NULL) {
    set_has_addr();
  } else {
    clear_has_addr();
  }
  addr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), addr);
  // @@protoc_insertion_point(field_set_allocated:Request.Sendto.addr)
}

// -------------------------------------------------------------------

// Request_Poll

// -------------------------------------------------------------------

// Request_Select

// -------------------------------------------------------------------

// Request_Getpeername

// -------------------------------------------------------------------

// Request_Getsockname

// -------------------------------------------------------------------

// Request_Getsockopt

// -------------------------------------------------------------------

// Request_Setsockopt

// -------------------------------------------------------------------

// Request_Fcntl

// -------------------------------------------------------------------

// Request_Atstart

// required string progname = 1;
inline bool Request_Atstart::has_progname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Request_Atstart::set_has_progname() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Request_Atstart::clear_has_progname() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Request_Atstart::clear_progname() {
  progname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_progname();
}
inline const ::std::string& Request_Atstart::progname() const {
  // @@protoc_insertion_point(field_get:Request.Atstart.progname)
  return progname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Request_Atstart::set_progname(const ::std::string& value) {
  set_has_progname();
  progname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Request.Atstart.progname)
}
inline void Request_Atstart::set_progname(const char* value) {
  set_has_progname();
  progname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Request.Atstart.progname)
}
inline void Request_Atstart::set_progname(const char* value, size_t size) {
  set_has_progname();
  progname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Request.Atstart.progname)
}
inline ::std::string* Request_Atstart::mutable_progname() {
  set_has_progname();
  // @@protoc_insertion_point(field_mutable:Request.Atstart.progname)
  return progname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Request_Atstart::release_progname() {
  // @@protoc_insertion_point(field_release:Request.Atstart.progname)
  clear_has_progname();
  return progname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Request_Atstart::set_allocated_progname(::std::string* progname) {
  if (progname != NULL) {
    set_has_progname();
  } else {
    clear_has_progname();
  }
  progname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), progname);
  // @@protoc_insertion_point(field_set_allocated:Request.Atstart.progname)
}

// -------------------------------------------------------------------

// Request_Atfork

// -------------------------------------------------------------------

// Request_Atexit

// -------------------------------------------------------------------

// Request

// optional .Request.Socket socketCall = 1;
inline bool Request::has_socketcall() const {
  return calling_case() == kSocketCall;
}
inline void Request::set_has_socketcall() {
  _oneof_case_[0] = kSocketCall;
}
inline void Request::clear_socketcall() {
  if (has_socketcall()) {
    delete calling_.socketcall_;
    clear_has_calling();
  }
}
inline  const ::Request_Socket& Request::socketcall() const {
  // @@protoc_insertion_point(field_get:Request.socketCall)
  return has_socketcall()
      ? *calling_.socketcall_
      : ::Request_Socket::default_instance();
}
inline ::Request_Socket* Request::mutable_socketcall() {
  if (!has_socketcall()) {
    clear_calling();
    set_has_socketcall();
    calling_.socketcall_ = new ::Request_Socket;
  }
  // @@protoc_insertion_point(field_mutable:Request.socketCall)
  return calling_.socketcall_;
}
inline ::Request_Socket* Request::release_socketcall() {
  // @@protoc_insertion_point(field_release:Request.socketCall)
  if (has_socketcall()) {
    clear_has_calling();
    ::Request_Socket* temp = calling_.socketcall_;
    calling_.socketcall_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void Request::set_allocated_socketcall(::Request_Socket* socketcall) {
  clear_calling();
  if (socketcall) {
    set_has_socketcall();
    calling_.socketcall_ = socketcall;
  }
  // @@protoc_insertion_point(field_set_allocated:Request.socketCall)
}

// optional .Request.Connect connectCall = 2;
inline bool Request::has_connectcall() const {
  return calling_case() == kConnectCall;
}
inline void Request::set_has_connectcall() {
  _oneof_case_[0] = kConnectCall;
}
inline void Request::clear_connectcall() {
  if (has_connectcall()) {
    delete calling_.connectcall_;
    clear_has_calling();
  }
}
inline  const ::Request_Connect& Request::connectcall() const {
  // @@protoc_insertion_point(field_get:Request.connectCall)
  return has_connectcall()
      ? *calling_.connectcall_
      : ::Request_Connect::default_instance();
}
inline ::Request_Connect* Request::mutable_connectcall() {
  if (!has_connectcall()) {
    clear_calling();
    set_has_connectcall();
    calling_.connectcall_ = new ::Request_Connect;
  }
  // @@protoc_insertion_point(field_mutable:Request.connectCall)
  return calling_.connectcall_;
}
inline ::Request_Connect* Request::release_connectcall() {
  // @@protoc_insertion_point(field_release:Request.connectCall)
  if (has_connectcall()) {
    clear_has_calling();
    ::Request_Connect* temp = calling_.connectcall_;
    calling_.connectcall_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void Request::set_allocated_connectcall(::Request_Connect* connectcall) {
  clear_calling();
  if (connectcall) {
    set_has_connectcall();
    calling_.connectcall_ = connectcall;
  }
  // @@protoc_insertion_point(field_set_allocated:Request.connectCall)
}

// optional .Request.Close closeCall = 3;
inline bool Request::has_closecall() const {
  return calling_case() == kCloseCall;
}
inline void Request::set_has_closecall() {
  _oneof_case_[0] = kCloseCall;
}
inline void Request::clear_closecall() {
  if (has_closecall()) {
    delete calling_.closecall_;
    clear_has_calling();
  }
}
inline  const ::Request_Close& Request::closecall() const {
  // @@protoc_insertion_point(field_get:Request.closeCall)
  return has_closecall()
      ? *calling_.closecall_
      : ::Request_Close::default_instance();
}
inline ::Request_Close* Request::mutable_closecall() {
  if (!has_closecall()) {
    clear_calling();
    set_has_closecall();
    calling_.closecall_ = new ::Request_Close;
  }
  // @@protoc_insertion_point(field_mutable:Request.closeCall)
  return calling_.closecall_;
}
inline ::Request_Close* Request::release_closecall() {
  // @@protoc_insertion_point(field_release:Request.closeCall)
  if (has_closecall()) {
    clear_has_calling();
    ::Request_Close* temp = calling_.closecall_;
    calling_.closecall_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void Request::set_allocated_closecall(::Request_Close* closecall) {
  clear_calling();
  if (closecall) {
    set_has_closecall();
    calling_.closecall_ = closecall;
  }
  // @@protoc_insertion_point(field_set_allocated:Request.closeCall)
}

// optional .Request.Recvfrom recvfromCall = 4;
inline bool Request::has_recvfromcall() const {
  return calling_case() == kRecvfromCall;
}
inline void Request::set_has_recvfromcall() {
  _oneof_case_[0] = kRecvfromCall;
}
inline void Request::clear_recvfromcall() {
  if (has_recvfromcall()) {
    delete calling_.recvfromcall_;
    clear_has_calling();
  }
}
inline  const ::Request_Recvfrom& Request::recvfromcall() const {
  // @@protoc_insertion_point(field_get:Request.recvfromCall)
  return has_recvfromcall()
      ? *calling_.recvfromcall_
      : ::Request_Recvfrom::default_instance();
}
inline ::Request_Recvfrom* Request::mutable_recvfromcall() {
  if (!has_recvfromcall()) {
    clear_calling();
    set_has_recvfromcall();
    calling_.recvfromcall_ = new ::Request_Recvfrom;
  }
  // @@protoc_insertion_point(field_mutable:Request.recvfromCall)
  return calling_.recvfromcall_;
}
inline ::Request_Recvfrom* Request::release_recvfromcall() {
  // @@protoc_insertion_point(field_release:Request.recvfromCall)
  if (has_recvfromcall()) {
    clear_has_calling();
    ::Request_Recvfrom* temp = calling_.recvfromcall_;
    calling_.recvfromcall_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void Request::set_allocated_recvfromcall(::Request_Recvfrom* recvfromcall) {
  clear_calling();
  if (recvfromcall) {
    set_has_recvfromcall();
    calling_.recvfromcall_ = recvfromcall;
  }
  // @@protoc_insertion_point(field_set_allocated:Request.recvfromCall)
}

// optional .Request.Sendto sendtoCall = 5;
inline bool Request::has_sendtocall() const {
  return calling_case() == kSendtoCall;
}
inline void Request::set_has_sendtocall() {
  _oneof_case_[0] = kSendtoCall;
}
inline void Request::clear_sendtocall() {
  if (has_sendtocall()) {
    delete calling_.sendtocall_;
    clear_has_calling();
  }
}
inline  const ::Request_Sendto& Request::sendtocall() const {
  // @@protoc_insertion_point(field_get:Request.sendtoCall)
  return has_sendtocall()
      ? *calling_.sendtocall_
      : ::Request_Sendto::default_instance();
}
inline ::Request_Sendto* Request::mutable_sendtocall() {
  if (!has_sendtocall()) {
    clear_calling();
    set_has_sendtocall();
    calling_.sendtocall_ = new ::Request_Sendto;
  }
  // @@protoc_insertion_point(field_mutable:Request.sendtoCall)
  return calling_.sendtocall_;
}
inline ::Request_Sendto* Request::release_sendtocall() {
  // @@protoc_insertion_point(field_release:Request.sendtoCall)
  if (has_sendtocall()) {
    clear_has_calling();
    ::Request_Sendto* temp = calling_.sendtocall_;
    calling_.sendtocall_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void Request::set_allocated_sendtocall(::Request_Sendto* sendtocall) {
  clear_calling();
  if (sendtocall) {
    set_has_sendtocall();
    calling_.sendtocall_ = sendtocall;
  }
  // @@protoc_insertion_point(field_set_allocated:Request.sendtoCall)
}

// optional .Request.Poll pollCall = 6;
inline bool Request::has_pollcall() const {
  return calling_case() == kPollCall;
}
inline void Request::set_has_pollcall() {
  _oneof_case_[0] = kPollCall;
}
inline void Request::clear_pollcall() {
  if (has_pollcall()) {
    delete calling_.pollcall_;
    clear_has_calling();
  }
}
inline  const ::Request_Poll& Request::pollcall() const {
  // @@protoc_insertion_point(field_get:Request.pollCall)
  return has_pollcall()
      ? *calling_.pollcall_
      : ::Request_Poll::default_instance();
}
inline ::Request_Poll* Request::mutable_pollcall() {
  if (!has_pollcall()) {
    clear_calling();
    set_has_pollcall();
    calling_.pollcall_ = new ::Request_Poll;
  }
  // @@protoc_insertion_point(field_mutable:Request.pollCall)
  return calling_.pollcall_;
}
inline ::Request_Poll* Request::release_pollcall() {
  // @@protoc_insertion_point(field_release:Request.pollCall)
  if (has_pollcall()) {
    clear_has_calling();
    ::Request_Poll* temp = calling_.pollcall_;
    calling_.pollcall_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void Request::set_allocated_pollcall(::Request_Poll* pollcall) {
  clear_calling();
  if (pollcall) {
    set_has_pollcall();
    calling_.pollcall_ = pollcall;
  }
  // @@protoc_insertion_point(field_set_allocated:Request.pollCall)
}

// optional .Request.Select selectCall = 7;
inline bool Request::has_selectcall() const {
  return calling_case() == kSelectCall;
}
inline void Request::set_has_selectcall() {
  _oneof_case_[0] = kSelectCall;
}
inline void Request::clear_selectcall() {
  if (has_selectcall()) {
    delete calling_.selectcall_;
    clear_has_calling();
  }
}
inline  const ::Request_Select& Request::selectcall() const {
  // @@protoc_insertion_point(field_get:Request.selectCall)
  return has_selectcall()
      ? *calling_.selectcall_
      : ::Request_Select::default_instance();
}
inline ::Request_Select* Request::mutable_selectcall() {
  if (!has_selectcall()) {
    clear_calling();
    set_has_selectcall();
    calling_.selectcall_ = new ::Request_Select;
  }
  // @@protoc_insertion_point(field_mutable:Request.selectCall)
  return calling_.selectcall_;
}
inline ::Request_Select* Request::release_selectcall() {
  // @@protoc_insertion_point(field_release:Request.selectCall)
  if (has_selectcall()) {
    clear_has_calling();
    ::Request_Select* temp = calling_.selectcall_;
    calling_.selectcall_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void Request::set_allocated_selectcall(::Request_Select* selectcall) {
  clear_calling();
  if (selectcall) {
    set_has_selectcall();
    calling_.selectcall_ = selectcall;
  }
  // @@protoc_insertion_point(field_set_allocated:Request.selectCall)
}

// optional .Request.Getpeername getpeernameCall = 8;
inline bool Request::has_getpeernamecall() const {
  return calling_case() == kGetpeernameCall;
}
inline void Request::set_has_getpeernamecall() {
  _oneof_case_[0] = kGetpeernameCall;
}
inline void Request::clear_getpeernamecall() {
  if (has_getpeernamecall()) {
    delete calling_.getpeernamecall_;
    clear_has_calling();
  }
}
inline  const ::Request_Getpeername& Request::getpeernamecall() const {
  // @@protoc_insertion_point(field_get:Request.getpeernameCall)
  return has_getpeernamecall()
      ? *calling_.getpeernamecall_
      : ::Request_Getpeername::default_instance();
}
inline ::Request_Getpeername* Request::mutable_getpeernamecall() {
  if (!has_getpeernamecall()) {
    clear_calling();
    set_has_getpeernamecall();
    calling_.getpeernamecall_ = new ::Request_Getpeername;
  }
  // @@protoc_insertion_point(field_mutable:Request.getpeernameCall)
  return calling_.getpeernamecall_;
}
inline ::Request_Getpeername* Request::release_getpeernamecall() {
  // @@protoc_insertion_point(field_release:Request.getpeernameCall)
  if (has_getpeernamecall()) {
    clear_has_calling();
    ::Request_Getpeername* temp = calling_.getpeernamecall_;
    calling_.getpeernamecall_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void Request::set_allocated_getpeernamecall(::Request_Getpeername* getpeernamecall) {
  clear_calling();
  if (getpeernamecall) {
    set_has_getpeernamecall();
    calling_.getpeernamecall_ = getpeernamecall;
  }
  // @@protoc_insertion_point(field_set_allocated:Request.getpeernameCall)
}

// optional .Request.Getsockname getsocknameCall = 9;
inline bool Request::has_getsocknamecall() const {
  return calling_case() == kGetsocknameCall;
}
inline void Request::set_has_getsocknamecall() {
  _oneof_case_[0] = kGetsocknameCall;
}
inline void Request::clear_getsocknamecall() {
  if (has_getsocknamecall()) {
    delete calling_.getsocknamecall_;
    clear_has_calling();
  }
}
inline  const ::Request_Getsockname& Request::getsocknamecall() const {
  // @@protoc_insertion_point(field_get:Request.getsocknameCall)
  return has_getsocknamecall()
      ? *calling_.getsocknamecall_
      : ::Request_Getsockname::default_instance();
}
inline ::Request_Getsockname* Request::mutable_getsocknamecall() {
  if (!has_getsocknamecall()) {
    clear_calling();
    set_has_getsocknamecall();
    calling_.getsocknamecall_ = new ::Request_Getsockname;
  }
  // @@protoc_insertion_point(field_mutable:Request.getsocknameCall)
  return calling_.getsocknamecall_;
}
inline ::Request_Getsockname* Request::release_getsocknamecall() {
  // @@protoc_insertion_point(field_release:Request.getsocknameCall)
  if (has_getsocknamecall()) {
    clear_has_calling();
    ::Request_Getsockname* temp = calling_.getsocknamecall_;
    calling_.getsocknamecall_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void Request::set_allocated_getsocknamecall(::Request_Getsockname* getsocknamecall) {
  clear_calling();
  if (getsocknamecall) {
    set_has_getsocknamecall();
    calling_.getsocknamecall_ = getsocknamecall;
  }
  // @@protoc_insertion_point(field_set_allocated:Request.getsocknameCall)
}

// optional .Request.Getsockopt getsockoptCall = 10;
inline bool Request::has_getsockoptcall() const {
  return calling_case() == kGetsockoptCall;
}
inline void Request::set_has_getsockoptcall() {
  _oneof_case_[0] = kGetsockoptCall;
}
inline void Request::clear_getsockoptcall() {
  if (has_getsockoptcall()) {
    delete calling_.getsockoptcall_;
    clear_has_calling();
  }
}
inline  const ::Request_Getsockopt& Request::getsockoptcall() const {
  // @@protoc_insertion_point(field_get:Request.getsockoptCall)
  return has_getsockoptcall()
      ? *calling_.getsockoptcall_
      : ::Request_Getsockopt::default_instance();
}
inline ::Request_Getsockopt* Request::mutable_getsockoptcall() {
  if (!has_getsockoptcall()) {
    clear_calling();
    set_has_getsockoptcall();
    calling_.getsockoptcall_ = new ::Request_Getsockopt;
  }
  // @@protoc_insertion_point(field_mutable:Request.getsockoptCall)
  return calling_.getsockoptcall_;
}
inline ::Request_Getsockopt* Request::release_getsockoptcall() {
  // @@protoc_insertion_point(field_release:Request.getsockoptCall)
  if (has_getsockoptcall()) {
    clear_has_calling();
    ::Request_Getsockopt* temp = calling_.getsockoptcall_;
    calling_.getsockoptcall_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void Request::set_allocated_getsockoptcall(::Request_Getsockopt* getsockoptcall) {
  clear_calling();
  if (getsockoptcall) {
    set_has_getsockoptcall();
    calling_.getsockoptcall_ = getsockoptcall;
  }
  // @@protoc_insertion_point(field_set_allocated:Request.getsockoptCall)
}

// optional .Request.Setsockopt setsockoptCall = 11;
inline bool Request::has_setsockoptcall() const {
  return calling_case() == kSetsockoptCall;
}
inline void Request::set_has_setsockoptcall() {
  _oneof_case_[0] = kSetsockoptCall;
}
inline void Request::clear_setsockoptcall() {
  if (has_setsockoptcall()) {
    delete calling_.setsockoptcall_;
    clear_has_calling();
  }
}
inline  const ::Request_Setsockopt& Request::setsockoptcall() const {
  // @@protoc_insertion_point(field_get:Request.setsockoptCall)
  return has_setsockoptcall()
      ? *calling_.setsockoptcall_
      : ::Request_Setsockopt::default_instance();
}
inline ::Request_Setsockopt* Request::mutable_setsockoptcall() {
  if (!has_setsockoptcall()) {
    clear_calling();
    set_has_setsockoptcall();
    calling_.setsockoptcall_ = new ::Request_Setsockopt;
  }
  // @@protoc_insertion_point(field_mutable:Request.setsockoptCall)
  return calling_.setsockoptcall_;
}
inline ::Request_Setsockopt* Request::release_setsockoptcall() {
  // @@protoc_insertion_point(field_release:Request.setsockoptCall)
  if (has_setsockoptcall()) {
    clear_has_calling();
    ::Request_Setsockopt* temp = calling_.setsockoptcall_;
    calling_.setsockoptcall_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void Request::set_allocated_setsockoptcall(::Request_Setsockopt* setsockoptcall) {
  clear_calling();
  if (setsockoptcall) {
    set_has_setsockoptcall();
    calling_.setsockoptcall_ = setsockoptcall;
  }
  // @@protoc_insertion_point(field_set_allocated:Request.setsockoptCall)
}

// optional .Request.Fcntl fcntlCall = 12;
inline bool Request::has_fcntlcall() const {
  return calling_case() == kFcntlCall;
}
inline void Request::set_has_fcntlcall() {
  _oneof_case_[0] = kFcntlCall;
}
inline void Request::clear_fcntlcall() {
  if (has_fcntlcall()) {
    delete calling_.fcntlcall_;
    clear_has_calling();
  }
}
inline  const ::Request_Fcntl& Request::fcntlcall() const {
  // @@protoc_insertion_point(field_get:Request.fcntlCall)
  return has_fcntlcall()
      ? *calling_.fcntlcall_
      : ::Request_Fcntl::default_instance();
}
inline ::Request_Fcntl* Request::mutable_fcntlcall() {
  if (!has_fcntlcall()) {
    clear_calling();
    set_has_fcntlcall();
    calling_.fcntlcall_ = new ::Request_Fcntl;
  }
  // @@protoc_insertion_point(field_mutable:Request.fcntlCall)
  return calling_.fcntlcall_;
}
inline ::Request_Fcntl* Request::release_fcntlcall() {
  // @@protoc_insertion_point(field_release:Request.fcntlCall)
  if (has_fcntlcall()) {
    clear_has_calling();
    ::Request_Fcntl* temp = calling_.fcntlcall_;
    calling_.fcntlcall_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void Request::set_allocated_fcntlcall(::Request_Fcntl* fcntlcall) {
  clear_calling();
  if (fcntlcall) {
    set_has_fcntlcall();
    calling_.fcntlcall_ = fcntlcall;
  }
  // @@protoc_insertion_point(field_set_allocated:Request.fcntlCall)
}

// optional .Request.Atstart atstartAction = 16;
inline bool Request::has_atstartaction() const {
  return calling_case() == kAtstartAction;
}
inline void Request::set_has_atstartaction() {
  _oneof_case_[0] = kAtstartAction;
}
inline void Request::clear_atstartaction() {
  if (has_atstartaction()) {
    delete calling_.atstartaction_;
    clear_has_calling();
  }
}
inline  const ::Request_Atstart& Request::atstartaction() const {
  // @@protoc_insertion_point(field_get:Request.atstartAction)
  return has_atstartaction()
      ? *calling_.atstartaction_
      : ::Request_Atstart::default_instance();
}
inline ::Request_Atstart* Request::mutable_atstartaction() {
  if (!has_atstartaction()) {
    clear_calling();
    set_has_atstartaction();
    calling_.atstartaction_ = new ::Request_Atstart;
  }
  // @@protoc_insertion_point(field_mutable:Request.atstartAction)
  return calling_.atstartaction_;
}
inline ::Request_Atstart* Request::release_atstartaction() {
  // @@protoc_insertion_point(field_release:Request.atstartAction)
  if (has_atstartaction()) {
    clear_has_calling();
    ::Request_Atstart* temp = calling_.atstartaction_;
    calling_.atstartaction_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void Request::set_allocated_atstartaction(::Request_Atstart* atstartaction) {
  clear_calling();
  if (atstartaction) {
    set_has_atstartaction();
    calling_.atstartaction_ = atstartaction;
  }
  // @@protoc_insertion_point(field_set_allocated:Request.atstartAction)
}

// optional .Request.Atfork atforkAction = 17;
inline bool Request::has_atforkaction() const {
  return calling_case() == kAtforkAction;
}
inline void Request::set_has_atforkaction() {
  _oneof_case_[0] = kAtforkAction;
}
inline void Request::clear_atforkaction() {
  if (has_atforkaction()) {
    delete calling_.atforkaction_;
    clear_has_calling();
  }
}
inline  const ::Request_Atfork& Request::atforkaction() const {
  // @@protoc_insertion_point(field_get:Request.atforkAction)
  return has_atforkaction()
      ? *calling_.atforkaction_
      : ::Request_Atfork::default_instance();
}
inline ::Request_Atfork* Request::mutable_atforkaction() {
  if (!has_atforkaction()) {
    clear_calling();
    set_has_atforkaction();
    calling_.atforkaction_ = new ::Request_Atfork;
  }
  // @@protoc_insertion_point(field_mutable:Request.atforkAction)
  return calling_.atforkaction_;
}
inline ::Request_Atfork* Request::release_atforkaction() {
  // @@protoc_insertion_point(field_release:Request.atforkAction)
  if (has_atforkaction()) {
    clear_has_calling();
    ::Request_Atfork* temp = calling_.atforkaction_;
    calling_.atforkaction_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void Request::set_allocated_atforkaction(::Request_Atfork* atforkaction) {
  clear_calling();
  if (atforkaction) {
    set_has_atforkaction();
    calling_.atforkaction_ = atforkaction;
  }
  // @@protoc_insertion_point(field_set_allocated:Request.atforkAction)
}

// optional .Request.Atexit atexitAction = 18;
inline bool Request::has_atexitaction() const {
  return calling_case() == kAtexitAction;
}
inline void Request::set_has_atexitaction() {
  _oneof_case_[0] = kAtexitAction;
}
inline void Request::clear_atexitaction() {
  if (has_atexitaction()) {
    delete calling_.atexitaction_;
    clear_has_calling();
  }
}
inline  const ::Request_Atexit& Request::atexitaction() const {
  // @@protoc_insertion_point(field_get:Request.atexitAction)
  return has_atexitaction()
      ? *calling_.atexitaction_
      : ::Request_Atexit::default_instance();
}
inline ::Request_Atexit* Request::mutable_atexitaction() {
  if (!has_atexitaction()) {
    clear_calling();
    set_has_atexitaction();
    calling_.atexitaction_ = new ::Request_Atexit;
  }
  // @@protoc_insertion_point(field_mutable:Request.atexitAction)
  return calling_.atexitaction_;
}
inline ::Request_Atexit* Request::release_atexitaction() {
  // @@protoc_insertion_point(field_release:Request.atexitAction)
  if (has_atexitaction()) {
    clear_has_calling();
    ::Request_Atexit* temp = calling_.atexitaction_;
    calling_.atexitaction_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void Request::set_allocated_atexitaction(::Request_Atexit* atexitaction) {
  clear_calling();
  if (atexitaction) {
    set_has_atexitaction();
    calling_.atexitaction_ = atexitaction;
  }
  // @@protoc_insertion_point(field_set_allocated:Request.atexitAction)
}

// required uint64 pid = 15;
inline bool Request::has_pid() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void Request::set_has_pid() {
  _has_bits_[0] |= 0x00008000u;
}
inline void Request::clear_has_pid() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void Request::clear_pid() {
  pid_ = GOOGLE_ULONGLONG(0);
  clear_has_pid();
}
inline ::google::protobuf::uint64 Request::pid() const {
  // @@protoc_insertion_point(field_get:Request.pid)
  return pid_;
}
inline void Request::set_pid(::google::protobuf::uint64 value) {
  set_has_pid();
  pid_ = value;
  // @@protoc_insertion_point(field_set:Request.pid)
}

inline bool Request::has_calling() const {
  return calling_case() != CALLING_NOT_SET;
}
inline void Request::clear_has_calling() {
  _oneof_case_[0] = CALLING_NOT_SET;
}
inline Request::CallingCase Request::calling_case() const {
  return Request::CallingCase(_oneof_case_[0]);
}
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_request_2eproto__INCLUDED
