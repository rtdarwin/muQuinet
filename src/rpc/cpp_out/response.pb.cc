// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: response.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "response.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* Response_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Response_reflection_ = NULL;
struct ResponseOneofInstance {
  const ::Response_Socket* socketcall_;
  const ::Response_Connect* connectcall_;
  const ::Response_Close* closecall_;
  const ::Response_Recvfrom* recvfromcall_;
  const ::Response_Sendto* sendtocall_;
  const ::Response_Poll* pollcall_;
  const ::Response_Select* selectcall_;
  const ::Response_Getpeername* getpeernamecall_;
  const ::Response_Getsockname* getsocknamecall_;
  const ::Response_Getsockopt* getsockoptcall_;
  const ::Response_Setsockopt* setsockoptcall_;
  const ::Response_Fcntl* fcntlcall_;
  const ::Response_Atstart* atstartaction_;
  const ::Response_Atfork* atforkaction_;
  const ::Response_Atexit* atexitaction_;
}* Response_default_oneof_instance_ = NULL;
const ::google::protobuf::Descriptor* Response_Socket_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Response_Socket_reflection_ = NULL;
const ::google::protobuf::Descriptor* Response_Connect_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Response_Connect_reflection_ = NULL;
const ::google::protobuf::Descriptor* Response_Close_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Response_Close_reflection_ = NULL;
const ::google::protobuf::Descriptor* Response_Recvfrom_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Response_Recvfrom_reflection_ = NULL;
const ::google::protobuf::Descriptor* Response_Sendto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Response_Sendto_reflection_ = NULL;
const ::google::protobuf::Descriptor* Response_Poll_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Response_Poll_reflection_ = NULL;
const ::google::protobuf::Descriptor* Response_Select_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Response_Select_reflection_ = NULL;
const ::google::protobuf::Descriptor* Response_Getpeername_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Response_Getpeername_reflection_ = NULL;
const ::google::protobuf::Descriptor* Response_Getsockname_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Response_Getsockname_reflection_ = NULL;
const ::google::protobuf::Descriptor* Response_Getsockopt_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Response_Getsockopt_reflection_ = NULL;
const ::google::protobuf::Descriptor* Response_Setsockopt_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Response_Setsockopt_reflection_ = NULL;
const ::google::protobuf::Descriptor* Response_Fcntl_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Response_Fcntl_reflection_ = NULL;
const ::google::protobuf::Descriptor* Response_Atstart_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Response_Atstart_reflection_ = NULL;
const ::google::protobuf::Descriptor* Response_Atfork_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Response_Atfork_reflection_ = NULL;
const ::google::protobuf::Descriptor* Response_Atexit_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Response_Atexit_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* Response_RetCode_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_response_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_response_2eproto() {
  protobuf_AddDesc_response_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "response.proto");
  GOOGLE_CHECK(file != NULL);
  Response_descriptor_ = file->message_type(0);
  static const int Response_offsets_[17] = {
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(Response_default_oneof_instance_, socketcall_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(Response_default_oneof_instance_, connectcall_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(Response_default_oneof_instance_, closecall_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(Response_default_oneof_instance_, recvfromcall_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(Response_default_oneof_instance_, sendtocall_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(Response_default_oneof_instance_, pollcall_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(Response_default_oneof_instance_, selectcall_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(Response_default_oneof_instance_, getpeernamecall_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(Response_default_oneof_instance_, getsocknamecall_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(Response_default_oneof_instance_, getsockoptcall_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(Response_default_oneof_instance_, setsockoptcall_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(Response_default_oneof_instance_, fcntlcall_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(Response_default_oneof_instance_, atstartaction_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(Response_default_oneof_instance_, atforkaction_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(Response_default_oneof_instance_, atexitaction_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response, retcode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response, returning_),
  };
  Response_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Response_descriptor_,
      Response::default_instance_,
      Response_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response, _has_bits_[0]),
      -1,
      -1,
      Response_default_oneof_instance_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response, _oneof_case_[0]),
      sizeof(Response),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response, _internal_metadata_),
      -1);
  Response_Socket_descriptor_ = Response_descriptor_->nested_type(0);
  static const int Response_Socket_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response_Socket, ret_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response_Socket, errno__),
  };
  Response_Socket_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Response_Socket_descriptor_,
      Response_Socket::default_instance_,
      Response_Socket_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response_Socket, _has_bits_[0]),
      -1,
      -1,
      sizeof(Response_Socket),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response_Socket, _internal_metadata_),
      -1);
  Response_Connect_descriptor_ = Response_descriptor_->nested_type(1);
  static const int Response_Connect_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response_Connect, ret_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response_Connect, errno__),
  };
  Response_Connect_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Response_Connect_descriptor_,
      Response_Connect::default_instance_,
      Response_Connect_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response_Connect, _has_bits_[0]),
      -1,
      -1,
      sizeof(Response_Connect),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response_Connect, _internal_metadata_),
      -1);
  Response_Close_descriptor_ = Response_descriptor_->nested_type(2);
  static const int Response_Close_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response_Close, ret_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response_Close, errno__),
  };
  Response_Close_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Response_Close_descriptor_,
      Response_Close::default_instance_,
      Response_Close_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response_Close, _has_bits_[0]),
      -1,
      -1,
      sizeof(Response_Close),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response_Close, _internal_metadata_),
      -1);
  Response_Recvfrom_descriptor_ = Response_descriptor_->nested_type(3);
  static const int Response_Recvfrom_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response_Recvfrom, ret_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response_Recvfrom, errno__),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response_Recvfrom, buf_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response_Recvfrom, addr_),
  };
  Response_Recvfrom_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Response_Recvfrom_descriptor_,
      Response_Recvfrom::default_instance_,
      Response_Recvfrom_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response_Recvfrom, _has_bits_[0]),
      -1,
      -1,
      sizeof(Response_Recvfrom),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response_Recvfrom, _internal_metadata_),
      -1);
  Response_Sendto_descriptor_ = Response_descriptor_->nested_type(4);
  static const int Response_Sendto_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response_Sendto, ret_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response_Sendto, errno__),
  };
  Response_Sendto_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Response_Sendto_descriptor_,
      Response_Sendto::default_instance_,
      Response_Sendto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response_Sendto, _has_bits_[0]),
      -1,
      -1,
      sizeof(Response_Sendto),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response_Sendto, _internal_metadata_),
      -1);
  Response_Poll_descriptor_ = Response_descriptor_->nested_type(5);
  static const int Response_Poll_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response_Poll, ret_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response_Poll, errno__),
  };
  Response_Poll_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Response_Poll_descriptor_,
      Response_Poll::default_instance_,
      Response_Poll_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response_Poll, _has_bits_[0]),
      -1,
      -1,
      sizeof(Response_Poll),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response_Poll, _internal_metadata_),
      -1);
  Response_Select_descriptor_ = Response_descriptor_->nested_type(6);
  static const int Response_Select_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response_Select, ret_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response_Select, errno__),
  };
  Response_Select_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Response_Select_descriptor_,
      Response_Select::default_instance_,
      Response_Select_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response_Select, _has_bits_[0]),
      -1,
      -1,
      sizeof(Response_Select),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response_Select, _internal_metadata_),
      -1);
  Response_Getpeername_descriptor_ = Response_descriptor_->nested_type(7);
  static const int Response_Getpeername_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response_Getpeername, ret_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response_Getpeername, errno__),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response_Getpeername, peername_),
  };
  Response_Getpeername_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Response_Getpeername_descriptor_,
      Response_Getpeername::default_instance_,
      Response_Getpeername_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response_Getpeername, _has_bits_[0]),
      -1,
      -1,
      sizeof(Response_Getpeername),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response_Getpeername, _internal_metadata_),
      -1);
  Response_Getsockname_descriptor_ = Response_descriptor_->nested_type(8);
  static const int Response_Getsockname_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response_Getsockname, ret_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response_Getsockname, errno__),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response_Getsockname, sockanme_),
  };
  Response_Getsockname_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Response_Getsockname_descriptor_,
      Response_Getsockname::default_instance_,
      Response_Getsockname_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response_Getsockname, _has_bits_[0]),
      -1,
      -1,
      sizeof(Response_Getsockname),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response_Getsockname, _internal_metadata_),
      -1);
  Response_Getsockopt_descriptor_ = Response_descriptor_->nested_type(9);
  static const int Response_Getsockopt_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response_Getsockopt, ret_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response_Getsockopt, errno__),
  };
  Response_Getsockopt_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Response_Getsockopt_descriptor_,
      Response_Getsockopt::default_instance_,
      Response_Getsockopt_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response_Getsockopt, _has_bits_[0]),
      -1,
      -1,
      sizeof(Response_Getsockopt),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response_Getsockopt, _internal_metadata_),
      -1);
  Response_Setsockopt_descriptor_ = Response_descriptor_->nested_type(10);
  static const int Response_Setsockopt_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response_Setsockopt, ret_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response_Setsockopt, errno__),
  };
  Response_Setsockopt_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Response_Setsockopt_descriptor_,
      Response_Setsockopt::default_instance_,
      Response_Setsockopt_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response_Setsockopt, _has_bits_[0]),
      -1,
      -1,
      sizeof(Response_Setsockopt),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response_Setsockopt, _internal_metadata_),
      -1);
  Response_Fcntl_descriptor_ = Response_descriptor_->nested_type(11);
  static const int Response_Fcntl_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response_Fcntl, ret_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response_Fcntl, errno__),
  };
  Response_Fcntl_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Response_Fcntl_descriptor_,
      Response_Fcntl::default_instance_,
      Response_Fcntl_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response_Fcntl, _has_bits_[0]),
      -1,
      -1,
      sizeof(Response_Fcntl),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response_Fcntl, _internal_metadata_),
      -1);
  Response_Atstart_descriptor_ = Response_descriptor_->nested_type(12);
  static const int Response_Atstart_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response_Atstart, startfd_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response_Atstart, count_),
  };
  Response_Atstart_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Response_Atstart_descriptor_,
      Response_Atstart::default_instance_,
      Response_Atstart_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response_Atstart, _has_bits_[0]),
      -1,
      -1,
      sizeof(Response_Atstart),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response_Atstart, _internal_metadata_),
      -1);
  Response_Atfork_descriptor_ = Response_descriptor_->nested_type(13);
  static const int Response_Atfork_offsets_[1] = {
  };
  Response_Atfork_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Response_Atfork_descriptor_,
      Response_Atfork::default_instance_,
      Response_Atfork_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response_Atfork, _has_bits_[0]),
      -1,
      -1,
      sizeof(Response_Atfork),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response_Atfork, _internal_metadata_),
      -1);
  Response_Atexit_descriptor_ = Response_descriptor_->nested_type(14);
  static const int Response_Atexit_offsets_[1] = {
  };
  Response_Atexit_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Response_Atexit_descriptor_,
      Response_Atexit::default_instance_,
      Response_Atexit_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response_Atexit, _has_bits_[0]),
      -1,
      -1,
      sizeof(Response_Atexit),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response_Atexit, _internal_metadata_),
      -1);
  Response_RetCode_descriptor_ = Response_descriptor_->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_response_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Response_descriptor_, &Response::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Response_Socket_descriptor_, &Response_Socket::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Response_Connect_descriptor_, &Response_Connect::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Response_Close_descriptor_, &Response_Close::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Response_Recvfrom_descriptor_, &Response_Recvfrom::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Response_Sendto_descriptor_, &Response_Sendto::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Response_Poll_descriptor_, &Response_Poll::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Response_Select_descriptor_, &Response_Select::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Response_Getpeername_descriptor_, &Response_Getpeername::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Response_Getsockname_descriptor_, &Response_Getsockname::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Response_Getsockopt_descriptor_, &Response_Getsockopt::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Response_Setsockopt_descriptor_, &Response_Setsockopt::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Response_Fcntl_descriptor_, &Response_Fcntl::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Response_Atstart_descriptor_, &Response_Atstart::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Response_Atfork_descriptor_, &Response_Atfork::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Response_Atexit_descriptor_, &Response_Atexit::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_response_2eproto() {
  delete Response::default_instance_;
  delete Response_default_oneof_instance_;
  delete Response_reflection_;
  delete Response_Socket::default_instance_;
  delete Response_Socket_reflection_;
  delete Response_Connect::default_instance_;
  delete Response_Connect_reflection_;
  delete Response_Close::default_instance_;
  delete Response_Close_reflection_;
  delete Response_Recvfrom::default_instance_;
  delete Response_Recvfrom_reflection_;
  delete Response_Sendto::default_instance_;
  delete Response_Sendto_reflection_;
  delete Response_Poll::default_instance_;
  delete Response_Poll_reflection_;
  delete Response_Select::default_instance_;
  delete Response_Select_reflection_;
  delete Response_Getpeername::default_instance_;
  delete Response_Getpeername_reflection_;
  delete Response_Getsockname::default_instance_;
  delete Response_Getsockname_reflection_;
  delete Response_Getsockopt::default_instance_;
  delete Response_Getsockopt_reflection_;
  delete Response_Setsockopt::default_instance_;
  delete Response_Setsockopt_reflection_;
  delete Response_Fcntl::default_instance_;
  delete Response_Fcntl_reflection_;
  delete Response_Atstart::default_instance_;
  delete Response_Atstart_reflection_;
  delete Response_Atfork::default_instance_;
  delete Response_Atfork_reflection_;
  delete Response_Atexit::default_instance_;
  delete Response_Atexit_reflection_;
}

void protobuf_AddDesc_response_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_response_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\016response.proto\"\315\n\n\010Response\022&\n\nsocketC"
    "all\030\001 \001(\0132\020.Response.SocketH\000\022(\n\013connect"
    "Call\030\002 \001(\0132\021.Response.ConnectH\000\022$\n\tclose"
    "Call\030\003 \001(\0132\017.Response.CloseH\000\022*\n\014recvfro"
    "mCall\030\004 \001(\0132\022.Response.RecvfromH\000\022&\n\nsen"
    "dtoCall\030\005 \001(\0132\020.Response.SendtoH\000\022\"\n\010pol"
    "lCall\030\006 \001(\0132\016.Response.PollH\000\022&\n\nselectC"
    "all\030\007 \001(\0132\020.Response.SelectH\000\0220\n\017getpeer"
    "nameCall\030\010 \001(\0132\025.Response.GetpeernameH\000\022"
    "0\n\017getsocknameCall\030\t \001(\0132\025.Response.Gets"
    "ocknameH\000\022.\n\016getsockoptCall\030\n \001(\0132\024.Resp"
    "onse.GetsockoptH\000\022.\n\016setsockoptCall\030\013 \001("
    "\0132\024.Response.SetsockoptH\000\022$\n\tfcntlCall\030\014"
    " \001(\0132\017.Response.FcntlH\000\022*\n\ratstartAction"
    "\030\020 \001(\0132\021.Response.AtstartH\000\022(\n\014atforkAct"
    "ion\030\021 \001(\0132\020.Response.AtforkH\000\022(\n\014atexitA"
    "ction\030\022 \001(\0132\020.Response.AtexitH\000\022\"\n\007retCo"
    "de\030\017 \002(\0162\021.Response.RetCode\032%\n\006Socket\022\013\n"
    "\003ret\030\001 \002(\005\022\016\n\006errno_\030\002 \001(\005\032&\n\007Connect\022\013\n"
    "\003ret\030\001 \002(\005\022\016\n\006errno_\030\002 \001(\005\032$\n\005Close\022\013\n\003r"
    "et\030\001 \002(\005\022\016\n\006errno_\030\002 \001(\005\032B\n\010Recvfrom\022\013\n\003"
    "ret\030\001 \002(\005\022\016\n\006errno_\030\002 \001(\005\022\013\n\003buf\030\003 \001(\014\022\014"
    "\n\004addr\030\004 \001(\014\032%\n\006Sendto\022\013\n\003ret\030\001 \002(\005\022\016\n\006e"
    "rrno_\030\002 \001(\005\032#\n\004Poll\022\013\n\003ret\030\001 \002(\005\022\016\n\006errn"
    "o_\030\002 \001(\005\032%\n\006Select\022\013\n\003ret\030\001 \002(\005\022\016\n\006errno"
    "_\030\002 \001(\005\032<\n\013Getpeername\022\013\n\003ret\030\001 \002(\005\022\016\n\006e"
    "rrno_\030\002 \001(\005\022\020\n\010peername\030\003 \001(\014\032<\n\013Getsock"
    "name\022\013\n\003ret\030\001 \002(\005\022\016\n\006errno_\030\002 \001(\005\022\020\n\010soc"
    "kanme\030\003 \001(\014\032)\n\nGetsockopt\022\013\n\003ret\030\001 \002(\005\022\016"
    "\n\006errno_\030\002 \001(\005\032)\n\nSetsockopt\022\013\n\003ret\030\001 \002("
    "\005\022\016\n\006errno_\030\002 \001(\005\032$\n\005Fcntl\022\013\n\003ret\030\001 \002(\005\022"
    "\016\n\006errno_\030\002 \001(\005\032)\n\007Atstart\022\017\n\007startfd\030\001 "
    "\002(\005\022\r\n\005count\030\002 \001(\005\032\010\n\006Atfork\032\010\n\006Atexit\"+"
    "\n\007RetCode\022\006\n\002OK\020\000\022\t\n\005ERROR\020\001\022\r\n\tWAIT_NEX"
    "T\020\002B\013\n\treturning", 1376);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "response.proto", &protobuf_RegisterTypes);
  Response::default_instance_ = new Response();
  Response_default_oneof_instance_ = new ResponseOneofInstance();
  Response_Socket::default_instance_ = new Response_Socket();
  Response_Connect::default_instance_ = new Response_Connect();
  Response_Close::default_instance_ = new Response_Close();
  Response_Recvfrom::default_instance_ = new Response_Recvfrom();
  Response_Sendto::default_instance_ = new Response_Sendto();
  Response_Poll::default_instance_ = new Response_Poll();
  Response_Select::default_instance_ = new Response_Select();
  Response_Getpeername::default_instance_ = new Response_Getpeername();
  Response_Getsockname::default_instance_ = new Response_Getsockname();
  Response_Getsockopt::default_instance_ = new Response_Getsockopt();
  Response_Setsockopt::default_instance_ = new Response_Setsockopt();
  Response_Fcntl::default_instance_ = new Response_Fcntl();
  Response_Atstart::default_instance_ = new Response_Atstart();
  Response_Atfork::default_instance_ = new Response_Atfork();
  Response_Atexit::default_instance_ = new Response_Atexit();
  Response::default_instance_->InitAsDefaultInstance();
  Response_Socket::default_instance_->InitAsDefaultInstance();
  Response_Connect::default_instance_->InitAsDefaultInstance();
  Response_Close::default_instance_->InitAsDefaultInstance();
  Response_Recvfrom::default_instance_->InitAsDefaultInstance();
  Response_Sendto::default_instance_->InitAsDefaultInstance();
  Response_Poll::default_instance_->InitAsDefaultInstance();
  Response_Select::default_instance_->InitAsDefaultInstance();
  Response_Getpeername::default_instance_->InitAsDefaultInstance();
  Response_Getsockname::default_instance_->InitAsDefaultInstance();
  Response_Getsockopt::default_instance_->InitAsDefaultInstance();
  Response_Setsockopt::default_instance_->InitAsDefaultInstance();
  Response_Fcntl::default_instance_->InitAsDefaultInstance();
  Response_Atstart::default_instance_->InitAsDefaultInstance();
  Response_Atfork::default_instance_->InitAsDefaultInstance();
  Response_Atexit::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_response_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_response_2eproto {
  StaticDescriptorInitializer_response_2eproto() {
    protobuf_AddDesc_response_2eproto();
  }
} static_descriptor_initializer_response_2eproto_;

// ===================================================================

const ::google::protobuf::EnumDescriptor* Response_RetCode_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Response_RetCode_descriptor_;
}
bool Response_RetCode_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Response_RetCode Response::OK;
const Response_RetCode Response::ERROR;
const Response_RetCode Response::WAIT_NEXT;
const Response_RetCode Response::RetCode_MIN;
const Response_RetCode Response::RetCode_MAX;
const int Response::RetCode_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Response_Socket::kRetFieldNumber;
const int Response_Socket::kErrnoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Response_Socket::Response_Socket()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Response.Socket)
}

void Response_Socket::InitAsDefaultInstance() {
}

Response_Socket::Response_Socket(const Response_Socket& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Response.Socket)
}

void Response_Socket::SharedCtor() {
  _cached_size_ = 0;
  ret_ = 0;
  errno__ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Response_Socket::~Response_Socket() {
  // @@protoc_insertion_point(destructor:Response.Socket)
  SharedDtor();
}

void Response_Socket::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Response_Socket::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Response_Socket::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Response_Socket_descriptor_;
}

const Response_Socket& Response_Socket::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_response_2eproto();
  return *default_instance_;
}

Response_Socket* Response_Socket::default_instance_ = NULL;

Response_Socket* Response_Socket::New(::google::protobuf::Arena* arena) const {
  Response_Socket* n = new Response_Socket;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Response_Socket::Clear() {
// @@protoc_insertion_point(message_clear_start:Response.Socket)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(Response_Socket, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<Response_Socket*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(ret_, errno__);

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Response_Socket::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Response.Socket)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 ret = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ret_)));
          set_has_ret();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_errno_;
        break;
      }

      // optional int32 errno_ = 2;
      case 2: {
        if (tag == 16) {
         parse_errno_:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &errno__)));
          set_has_errno_();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Response.Socket)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Response.Socket)
  return false;
#undef DO_
}

void Response_Socket::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Response.Socket)
  // required int32 ret = 1;
  if (has_ret()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->ret(), output);
  }

  // optional int32 errno_ = 2;
  if (has_errno_()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->errno_(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Response.Socket)
}

::google::protobuf::uint8* Response_Socket::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Response.Socket)
  // required int32 ret = 1;
  if (has_ret()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->ret(), target);
  }

  // optional int32 errno_ = 2;
  if (has_errno_()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->errno_(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Response.Socket)
  return target;
}

int Response_Socket::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:Response.Socket)
  int total_size = 0;

  // required int32 ret = 1;
  if (has_ret()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->ret());
  }
  // optional int32 errno_ = 2;
  if (has_errno_()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->errno_());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Response_Socket::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Response.Socket)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Response_Socket* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Response_Socket>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Response.Socket)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Response.Socket)
    MergeFrom(*source);
  }
}

void Response_Socket::MergeFrom(const Response_Socket& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Response.Socket)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_ret()) {
      set_ret(from.ret());
    }
    if (from.has_errno_()) {
      set_errno_(from.errno_());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Response_Socket::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Response.Socket)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Response_Socket::CopyFrom(const Response_Socket& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Response.Socket)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Response_Socket::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void Response_Socket::Swap(Response_Socket* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Response_Socket::InternalSwap(Response_Socket* other) {
  std::swap(ret_, other->ret_);
  std::swap(errno__, other->errno__);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Response_Socket::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Response_Socket_descriptor_;
  metadata.reflection = Response_Socket_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Response_Connect::kRetFieldNumber;
const int Response_Connect::kErrnoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Response_Connect::Response_Connect()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Response.Connect)
}

void Response_Connect::InitAsDefaultInstance() {
}

Response_Connect::Response_Connect(const Response_Connect& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Response.Connect)
}

void Response_Connect::SharedCtor() {
  _cached_size_ = 0;
  ret_ = 0;
  errno__ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Response_Connect::~Response_Connect() {
  // @@protoc_insertion_point(destructor:Response.Connect)
  SharedDtor();
}

void Response_Connect::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Response_Connect::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Response_Connect::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Response_Connect_descriptor_;
}

const Response_Connect& Response_Connect::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_response_2eproto();
  return *default_instance_;
}

Response_Connect* Response_Connect::default_instance_ = NULL;

Response_Connect* Response_Connect::New(::google::protobuf::Arena* arena) const {
  Response_Connect* n = new Response_Connect;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Response_Connect::Clear() {
// @@protoc_insertion_point(message_clear_start:Response.Connect)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(Response_Connect, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<Response_Connect*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(ret_, errno__);

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Response_Connect::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Response.Connect)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 ret = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ret_)));
          set_has_ret();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_errno_;
        break;
      }

      // optional int32 errno_ = 2;
      case 2: {
        if (tag == 16) {
         parse_errno_:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &errno__)));
          set_has_errno_();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Response.Connect)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Response.Connect)
  return false;
#undef DO_
}

void Response_Connect::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Response.Connect)
  // required int32 ret = 1;
  if (has_ret()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->ret(), output);
  }

  // optional int32 errno_ = 2;
  if (has_errno_()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->errno_(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Response.Connect)
}

::google::protobuf::uint8* Response_Connect::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Response.Connect)
  // required int32 ret = 1;
  if (has_ret()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->ret(), target);
  }

  // optional int32 errno_ = 2;
  if (has_errno_()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->errno_(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Response.Connect)
  return target;
}

int Response_Connect::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:Response.Connect)
  int total_size = 0;

  // required int32 ret = 1;
  if (has_ret()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->ret());
  }
  // optional int32 errno_ = 2;
  if (has_errno_()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->errno_());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Response_Connect::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Response.Connect)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Response_Connect* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Response_Connect>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Response.Connect)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Response.Connect)
    MergeFrom(*source);
  }
}

void Response_Connect::MergeFrom(const Response_Connect& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Response.Connect)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_ret()) {
      set_ret(from.ret());
    }
    if (from.has_errno_()) {
      set_errno_(from.errno_());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Response_Connect::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Response.Connect)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Response_Connect::CopyFrom(const Response_Connect& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Response.Connect)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Response_Connect::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void Response_Connect::Swap(Response_Connect* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Response_Connect::InternalSwap(Response_Connect* other) {
  std::swap(ret_, other->ret_);
  std::swap(errno__, other->errno__);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Response_Connect::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Response_Connect_descriptor_;
  metadata.reflection = Response_Connect_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Response_Close::kRetFieldNumber;
const int Response_Close::kErrnoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Response_Close::Response_Close()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Response.Close)
}

void Response_Close::InitAsDefaultInstance() {
}

Response_Close::Response_Close(const Response_Close& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Response.Close)
}

void Response_Close::SharedCtor() {
  _cached_size_ = 0;
  ret_ = 0;
  errno__ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Response_Close::~Response_Close() {
  // @@protoc_insertion_point(destructor:Response.Close)
  SharedDtor();
}

void Response_Close::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Response_Close::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Response_Close::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Response_Close_descriptor_;
}

const Response_Close& Response_Close::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_response_2eproto();
  return *default_instance_;
}

Response_Close* Response_Close::default_instance_ = NULL;

Response_Close* Response_Close::New(::google::protobuf::Arena* arena) const {
  Response_Close* n = new Response_Close;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Response_Close::Clear() {
// @@protoc_insertion_point(message_clear_start:Response.Close)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(Response_Close, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<Response_Close*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(ret_, errno__);

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Response_Close::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Response.Close)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 ret = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ret_)));
          set_has_ret();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_errno_;
        break;
      }

      // optional int32 errno_ = 2;
      case 2: {
        if (tag == 16) {
         parse_errno_:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &errno__)));
          set_has_errno_();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Response.Close)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Response.Close)
  return false;
#undef DO_
}

void Response_Close::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Response.Close)
  // required int32 ret = 1;
  if (has_ret()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->ret(), output);
  }

  // optional int32 errno_ = 2;
  if (has_errno_()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->errno_(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Response.Close)
}

::google::protobuf::uint8* Response_Close::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Response.Close)
  // required int32 ret = 1;
  if (has_ret()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->ret(), target);
  }

  // optional int32 errno_ = 2;
  if (has_errno_()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->errno_(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Response.Close)
  return target;
}

int Response_Close::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:Response.Close)
  int total_size = 0;

  // required int32 ret = 1;
  if (has_ret()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->ret());
  }
  // optional int32 errno_ = 2;
  if (has_errno_()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->errno_());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Response_Close::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Response.Close)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Response_Close* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Response_Close>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Response.Close)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Response.Close)
    MergeFrom(*source);
  }
}

void Response_Close::MergeFrom(const Response_Close& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Response.Close)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_ret()) {
      set_ret(from.ret());
    }
    if (from.has_errno_()) {
      set_errno_(from.errno_());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Response_Close::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Response.Close)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Response_Close::CopyFrom(const Response_Close& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Response.Close)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Response_Close::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void Response_Close::Swap(Response_Close* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Response_Close::InternalSwap(Response_Close* other) {
  std::swap(ret_, other->ret_);
  std::swap(errno__, other->errno__);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Response_Close::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Response_Close_descriptor_;
  metadata.reflection = Response_Close_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Response_Recvfrom::kRetFieldNumber;
const int Response_Recvfrom::kErrnoFieldNumber;
const int Response_Recvfrom::kBufFieldNumber;
const int Response_Recvfrom::kAddrFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Response_Recvfrom::Response_Recvfrom()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Response.Recvfrom)
}

void Response_Recvfrom::InitAsDefaultInstance() {
}

Response_Recvfrom::Response_Recvfrom(const Response_Recvfrom& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Response.Recvfrom)
}

void Response_Recvfrom::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  ret_ = 0;
  errno__ = 0;
  buf_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  addr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Response_Recvfrom::~Response_Recvfrom() {
  // @@protoc_insertion_point(destructor:Response.Recvfrom)
  SharedDtor();
}

void Response_Recvfrom::SharedDtor() {
  buf_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  addr_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Response_Recvfrom::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Response_Recvfrom::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Response_Recvfrom_descriptor_;
}

const Response_Recvfrom& Response_Recvfrom::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_response_2eproto();
  return *default_instance_;
}

Response_Recvfrom* Response_Recvfrom::default_instance_ = NULL;

Response_Recvfrom* Response_Recvfrom::New(::google::protobuf::Arena* arena) const {
  Response_Recvfrom* n = new Response_Recvfrom;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Response_Recvfrom::Clear() {
// @@protoc_insertion_point(message_clear_start:Response.Recvfrom)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(Response_Recvfrom, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<Response_Recvfrom*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 15u) {
    ZR_(ret_, errno__);
    if (has_buf()) {
      buf_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_addr()) {
      addr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Response_Recvfrom::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Response.Recvfrom)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 ret = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ret_)));
          set_has_ret();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_errno_;
        break;
      }

      // optional int32 errno_ = 2;
      case 2: {
        if (tag == 16) {
         parse_errno_:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &errno__)));
          set_has_errno_();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_buf;
        break;
      }

      // optional bytes buf = 3;
      case 3: {
        if (tag == 26) {
         parse_buf:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_buf()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_addr;
        break;
      }

      // optional bytes addr = 4;
      case 4: {
        if (tag == 34) {
         parse_addr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_addr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Response.Recvfrom)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Response.Recvfrom)
  return false;
#undef DO_
}

void Response_Recvfrom::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Response.Recvfrom)
  // required int32 ret = 1;
  if (has_ret()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->ret(), output);
  }

  // optional int32 errno_ = 2;
  if (has_errno_()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->errno_(), output);
  }

  // optional bytes buf = 3;
  if (has_buf()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->buf(), output);
  }

  // optional bytes addr = 4;
  if (has_addr()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->addr(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Response.Recvfrom)
}

::google::protobuf::uint8* Response_Recvfrom::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Response.Recvfrom)
  // required int32 ret = 1;
  if (has_ret()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->ret(), target);
  }

  // optional int32 errno_ = 2;
  if (has_errno_()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->errno_(), target);
  }

  // optional bytes buf = 3;
  if (has_buf()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->buf(), target);
  }

  // optional bytes addr = 4;
  if (has_addr()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->addr(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Response.Recvfrom)
  return target;
}

int Response_Recvfrom::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:Response.Recvfrom)
  int total_size = 0;

  // required int32 ret = 1;
  if (has_ret()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->ret());
  }
  if (_has_bits_[1 / 32] & 14u) {
    // optional int32 errno_ = 2;
    if (has_errno_()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->errno_());
    }

    // optional bytes buf = 3;
    if (has_buf()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->buf());
    }

    // optional bytes addr = 4;
    if (has_addr()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->addr());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Response_Recvfrom::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Response.Recvfrom)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Response_Recvfrom* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Response_Recvfrom>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Response.Recvfrom)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Response.Recvfrom)
    MergeFrom(*source);
  }
}

void Response_Recvfrom::MergeFrom(const Response_Recvfrom& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Response.Recvfrom)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_ret()) {
      set_ret(from.ret());
    }
    if (from.has_errno_()) {
      set_errno_(from.errno_());
    }
    if (from.has_buf()) {
      set_has_buf();
      buf_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.buf_);
    }
    if (from.has_addr()) {
      set_has_addr();
      addr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.addr_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Response_Recvfrom::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Response.Recvfrom)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Response_Recvfrom::CopyFrom(const Response_Recvfrom& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Response.Recvfrom)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Response_Recvfrom::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void Response_Recvfrom::Swap(Response_Recvfrom* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Response_Recvfrom::InternalSwap(Response_Recvfrom* other) {
  std::swap(ret_, other->ret_);
  std::swap(errno__, other->errno__);
  buf_.Swap(&other->buf_);
  addr_.Swap(&other->addr_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Response_Recvfrom::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Response_Recvfrom_descriptor_;
  metadata.reflection = Response_Recvfrom_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Response_Sendto::kRetFieldNumber;
const int Response_Sendto::kErrnoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Response_Sendto::Response_Sendto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Response.Sendto)
}

void Response_Sendto::InitAsDefaultInstance() {
}

Response_Sendto::Response_Sendto(const Response_Sendto& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Response.Sendto)
}

void Response_Sendto::SharedCtor() {
  _cached_size_ = 0;
  ret_ = 0;
  errno__ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Response_Sendto::~Response_Sendto() {
  // @@protoc_insertion_point(destructor:Response.Sendto)
  SharedDtor();
}

void Response_Sendto::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Response_Sendto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Response_Sendto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Response_Sendto_descriptor_;
}

const Response_Sendto& Response_Sendto::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_response_2eproto();
  return *default_instance_;
}

Response_Sendto* Response_Sendto::default_instance_ = NULL;

Response_Sendto* Response_Sendto::New(::google::protobuf::Arena* arena) const {
  Response_Sendto* n = new Response_Sendto;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Response_Sendto::Clear() {
// @@protoc_insertion_point(message_clear_start:Response.Sendto)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(Response_Sendto, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<Response_Sendto*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(ret_, errno__);

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Response_Sendto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Response.Sendto)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 ret = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ret_)));
          set_has_ret();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_errno_;
        break;
      }

      // optional int32 errno_ = 2;
      case 2: {
        if (tag == 16) {
         parse_errno_:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &errno__)));
          set_has_errno_();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Response.Sendto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Response.Sendto)
  return false;
#undef DO_
}

void Response_Sendto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Response.Sendto)
  // required int32 ret = 1;
  if (has_ret()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->ret(), output);
  }

  // optional int32 errno_ = 2;
  if (has_errno_()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->errno_(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Response.Sendto)
}

::google::protobuf::uint8* Response_Sendto::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Response.Sendto)
  // required int32 ret = 1;
  if (has_ret()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->ret(), target);
  }

  // optional int32 errno_ = 2;
  if (has_errno_()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->errno_(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Response.Sendto)
  return target;
}

int Response_Sendto::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:Response.Sendto)
  int total_size = 0;

  // required int32 ret = 1;
  if (has_ret()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->ret());
  }
  // optional int32 errno_ = 2;
  if (has_errno_()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->errno_());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Response_Sendto::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Response.Sendto)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Response_Sendto* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Response_Sendto>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Response.Sendto)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Response.Sendto)
    MergeFrom(*source);
  }
}

void Response_Sendto::MergeFrom(const Response_Sendto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Response.Sendto)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_ret()) {
      set_ret(from.ret());
    }
    if (from.has_errno_()) {
      set_errno_(from.errno_());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Response_Sendto::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Response.Sendto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Response_Sendto::CopyFrom(const Response_Sendto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Response.Sendto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Response_Sendto::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void Response_Sendto::Swap(Response_Sendto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Response_Sendto::InternalSwap(Response_Sendto* other) {
  std::swap(ret_, other->ret_);
  std::swap(errno__, other->errno__);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Response_Sendto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Response_Sendto_descriptor_;
  metadata.reflection = Response_Sendto_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Response_Poll::kRetFieldNumber;
const int Response_Poll::kErrnoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Response_Poll::Response_Poll()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Response.Poll)
}

void Response_Poll::InitAsDefaultInstance() {
}

Response_Poll::Response_Poll(const Response_Poll& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Response.Poll)
}

void Response_Poll::SharedCtor() {
  _cached_size_ = 0;
  ret_ = 0;
  errno__ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Response_Poll::~Response_Poll() {
  // @@protoc_insertion_point(destructor:Response.Poll)
  SharedDtor();
}

void Response_Poll::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Response_Poll::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Response_Poll::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Response_Poll_descriptor_;
}

const Response_Poll& Response_Poll::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_response_2eproto();
  return *default_instance_;
}

Response_Poll* Response_Poll::default_instance_ = NULL;

Response_Poll* Response_Poll::New(::google::protobuf::Arena* arena) const {
  Response_Poll* n = new Response_Poll;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Response_Poll::Clear() {
// @@protoc_insertion_point(message_clear_start:Response.Poll)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(Response_Poll, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<Response_Poll*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(ret_, errno__);

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Response_Poll::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Response.Poll)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 ret = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ret_)));
          set_has_ret();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_errno_;
        break;
      }

      // optional int32 errno_ = 2;
      case 2: {
        if (tag == 16) {
         parse_errno_:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &errno__)));
          set_has_errno_();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Response.Poll)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Response.Poll)
  return false;
#undef DO_
}

void Response_Poll::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Response.Poll)
  // required int32 ret = 1;
  if (has_ret()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->ret(), output);
  }

  // optional int32 errno_ = 2;
  if (has_errno_()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->errno_(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Response.Poll)
}

::google::protobuf::uint8* Response_Poll::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Response.Poll)
  // required int32 ret = 1;
  if (has_ret()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->ret(), target);
  }

  // optional int32 errno_ = 2;
  if (has_errno_()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->errno_(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Response.Poll)
  return target;
}

int Response_Poll::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:Response.Poll)
  int total_size = 0;

  // required int32 ret = 1;
  if (has_ret()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->ret());
  }
  // optional int32 errno_ = 2;
  if (has_errno_()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->errno_());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Response_Poll::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Response.Poll)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Response_Poll* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Response_Poll>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Response.Poll)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Response.Poll)
    MergeFrom(*source);
  }
}

void Response_Poll::MergeFrom(const Response_Poll& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Response.Poll)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_ret()) {
      set_ret(from.ret());
    }
    if (from.has_errno_()) {
      set_errno_(from.errno_());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Response_Poll::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Response.Poll)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Response_Poll::CopyFrom(const Response_Poll& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Response.Poll)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Response_Poll::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void Response_Poll::Swap(Response_Poll* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Response_Poll::InternalSwap(Response_Poll* other) {
  std::swap(ret_, other->ret_);
  std::swap(errno__, other->errno__);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Response_Poll::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Response_Poll_descriptor_;
  metadata.reflection = Response_Poll_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Response_Select::kRetFieldNumber;
const int Response_Select::kErrnoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Response_Select::Response_Select()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Response.Select)
}

void Response_Select::InitAsDefaultInstance() {
}

Response_Select::Response_Select(const Response_Select& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Response.Select)
}

void Response_Select::SharedCtor() {
  _cached_size_ = 0;
  ret_ = 0;
  errno__ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Response_Select::~Response_Select() {
  // @@protoc_insertion_point(destructor:Response.Select)
  SharedDtor();
}

void Response_Select::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Response_Select::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Response_Select::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Response_Select_descriptor_;
}

const Response_Select& Response_Select::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_response_2eproto();
  return *default_instance_;
}

Response_Select* Response_Select::default_instance_ = NULL;

Response_Select* Response_Select::New(::google::protobuf::Arena* arena) const {
  Response_Select* n = new Response_Select;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Response_Select::Clear() {
// @@protoc_insertion_point(message_clear_start:Response.Select)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(Response_Select, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<Response_Select*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(ret_, errno__);

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Response_Select::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Response.Select)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 ret = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ret_)));
          set_has_ret();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_errno_;
        break;
      }

      // optional int32 errno_ = 2;
      case 2: {
        if (tag == 16) {
         parse_errno_:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &errno__)));
          set_has_errno_();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Response.Select)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Response.Select)
  return false;
#undef DO_
}

void Response_Select::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Response.Select)
  // required int32 ret = 1;
  if (has_ret()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->ret(), output);
  }

  // optional int32 errno_ = 2;
  if (has_errno_()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->errno_(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Response.Select)
}

::google::protobuf::uint8* Response_Select::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Response.Select)
  // required int32 ret = 1;
  if (has_ret()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->ret(), target);
  }

  // optional int32 errno_ = 2;
  if (has_errno_()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->errno_(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Response.Select)
  return target;
}

int Response_Select::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:Response.Select)
  int total_size = 0;

  // required int32 ret = 1;
  if (has_ret()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->ret());
  }
  // optional int32 errno_ = 2;
  if (has_errno_()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->errno_());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Response_Select::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Response.Select)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Response_Select* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Response_Select>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Response.Select)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Response.Select)
    MergeFrom(*source);
  }
}

void Response_Select::MergeFrom(const Response_Select& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Response.Select)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_ret()) {
      set_ret(from.ret());
    }
    if (from.has_errno_()) {
      set_errno_(from.errno_());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Response_Select::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Response.Select)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Response_Select::CopyFrom(const Response_Select& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Response.Select)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Response_Select::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void Response_Select::Swap(Response_Select* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Response_Select::InternalSwap(Response_Select* other) {
  std::swap(ret_, other->ret_);
  std::swap(errno__, other->errno__);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Response_Select::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Response_Select_descriptor_;
  metadata.reflection = Response_Select_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Response_Getpeername::kRetFieldNumber;
const int Response_Getpeername::kErrnoFieldNumber;
const int Response_Getpeername::kPeernameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Response_Getpeername::Response_Getpeername()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Response.Getpeername)
}

void Response_Getpeername::InitAsDefaultInstance() {
}

Response_Getpeername::Response_Getpeername(const Response_Getpeername& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Response.Getpeername)
}

void Response_Getpeername::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  ret_ = 0;
  errno__ = 0;
  peername_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Response_Getpeername::~Response_Getpeername() {
  // @@protoc_insertion_point(destructor:Response.Getpeername)
  SharedDtor();
}

void Response_Getpeername::SharedDtor() {
  peername_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Response_Getpeername::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Response_Getpeername::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Response_Getpeername_descriptor_;
}

const Response_Getpeername& Response_Getpeername::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_response_2eproto();
  return *default_instance_;
}

Response_Getpeername* Response_Getpeername::default_instance_ = NULL;

Response_Getpeername* Response_Getpeername::New(::google::protobuf::Arena* arena) const {
  Response_Getpeername* n = new Response_Getpeername;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Response_Getpeername::Clear() {
// @@protoc_insertion_point(message_clear_start:Response.Getpeername)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(Response_Getpeername, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<Response_Getpeername*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 7u) {
    ZR_(ret_, errno__);
    if (has_peername()) {
      peername_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Response_Getpeername::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Response.Getpeername)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 ret = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ret_)));
          set_has_ret();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_errno_;
        break;
      }

      // optional int32 errno_ = 2;
      case 2: {
        if (tag == 16) {
         parse_errno_:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &errno__)));
          set_has_errno_();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_peername;
        break;
      }

      // optional bytes peername = 3;
      case 3: {
        if (tag == 26) {
         parse_peername:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_peername()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Response.Getpeername)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Response.Getpeername)
  return false;
#undef DO_
}

void Response_Getpeername::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Response.Getpeername)
  // required int32 ret = 1;
  if (has_ret()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->ret(), output);
  }

  // optional int32 errno_ = 2;
  if (has_errno_()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->errno_(), output);
  }

  // optional bytes peername = 3;
  if (has_peername()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->peername(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Response.Getpeername)
}

::google::protobuf::uint8* Response_Getpeername::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Response.Getpeername)
  // required int32 ret = 1;
  if (has_ret()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->ret(), target);
  }

  // optional int32 errno_ = 2;
  if (has_errno_()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->errno_(), target);
  }

  // optional bytes peername = 3;
  if (has_peername()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->peername(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Response.Getpeername)
  return target;
}

int Response_Getpeername::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:Response.Getpeername)
  int total_size = 0;

  // required int32 ret = 1;
  if (has_ret()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->ret());
  }
  if (_has_bits_[1 / 32] & 6u) {
    // optional int32 errno_ = 2;
    if (has_errno_()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->errno_());
    }

    // optional bytes peername = 3;
    if (has_peername()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->peername());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Response_Getpeername::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Response.Getpeername)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Response_Getpeername* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Response_Getpeername>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Response.Getpeername)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Response.Getpeername)
    MergeFrom(*source);
  }
}

void Response_Getpeername::MergeFrom(const Response_Getpeername& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Response.Getpeername)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_ret()) {
      set_ret(from.ret());
    }
    if (from.has_errno_()) {
      set_errno_(from.errno_());
    }
    if (from.has_peername()) {
      set_has_peername();
      peername_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.peername_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Response_Getpeername::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Response.Getpeername)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Response_Getpeername::CopyFrom(const Response_Getpeername& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Response.Getpeername)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Response_Getpeername::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void Response_Getpeername::Swap(Response_Getpeername* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Response_Getpeername::InternalSwap(Response_Getpeername* other) {
  std::swap(ret_, other->ret_);
  std::swap(errno__, other->errno__);
  peername_.Swap(&other->peername_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Response_Getpeername::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Response_Getpeername_descriptor_;
  metadata.reflection = Response_Getpeername_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Response_Getsockname::kRetFieldNumber;
const int Response_Getsockname::kErrnoFieldNumber;
const int Response_Getsockname::kSockanmeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Response_Getsockname::Response_Getsockname()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Response.Getsockname)
}

void Response_Getsockname::InitAsDefaultInstance() {
}

Response_Getsockname::Response_Getsockname(const Response_Getsockname& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Response.Getsockname)
}

void Response_Getsockname::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  ret_ = 0;
  errno__ = 0;
  sockanme_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Response_Getsockname::~Response_Getsockname() {
  // @@protoc_insertion_point(destructor:Response.Getsockname)
  SharedDtor();
}

void Response_Getsockname::SharedDtor() {
  sockanme_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Response_Getsockname::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Response_Getsockname::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Response_Getsockname_descriptor_;
}

const Response_Getsockname& Response_Getsockname::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_response_2eproto();
  return *default_instance_;
}

Response_Getsockname* Response_Getsockname::default_instance_ = NULL;

Response_Getsockname* Response_Getsockname::New(::google::protobuf::Arena* arena) const {
  Response_Getsockname* n = new Response_Getsockname;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Response_Getsockname::Clear() {
// @@protoc_insertion_point(message_clear_start:Response.Getsockname)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(Response_Getsockname, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<Response_Getsockname*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 7u) {
    ZR_(ret_, errno__);
    if (has_sockanme()) {
      sockanme_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Response_Getsockname::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Response.Getsockname)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 ret = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ret_)));
          set_has_ret();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_errno_;
        break;
      }

      // optional int32 errno_ = 2;
      case 2: {
        if (tag == 16) {
         parse_errno_:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &errno__)));
          set_has_errno_();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_sockanme;
        break;
      }

      // optional bytes sockanme = 3;
      case 3: {
        if (tag == 26) {
         parse_sockanme:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_sockanme()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Response.Getsockname)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Response.Getsockname)
  return false;
#undef DO_
}

void Response_Getsockname::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Response.Getsockname)
  // required int32 ret = 1;
  if (has_ret()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->ret(), output);
  }

  // optional int32 errno_ = 2;
  if (has_errno_()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->errno_(), output);
  }

  // optional bytes sockanme = 3;
  if (has_sockanme()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->sockanme(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Response.Getsockname)
}

::google::protobuf::uint8* Response_Getsockname::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Response.Getsockname)
  // required int32 ret = 1;
  if (has_ret()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->ret(), target);
  }

  // optional int32 errno_ = 2;
  if (has_errno_()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->errno_(), target);
  }

  // optional bytes sockanme = 3;
  if (has_sockanme()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->sockanme(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Response.Getsockname)
  return target;
}

int Response_Getsockname::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:Response.Getsockname)
  int total_size = 0;

  // required int32 ret = 1;
  if (has_ret()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->ret());
  }
  if (_has_bits_[1 / 32] & 6u) {
    // optional int32 errno_ = 2;
    if (has_errno_()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->errno_());
    }

    // optional bytes sockanme = 3;
    if (has_sockanme()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->sockanme());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Response_Getsockname::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Response.Getsockname)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Response_Getsockname* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Response_Getsockname>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Response.Getsockname)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Response.Getsockname)
    MergeFrom(*source);
  }
}

void Response_Getsockname::MergeFrom(const Response_Getsockname& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Response.Getsockname)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_ret()) {
      set_ret(from.ret());
    }
    if (from.has_errno_()) {
      set_errno_(from.errno_());
    }
    if (from.has_sockanme()) {
      set_has_sockanme();
      sockanme_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sockanme_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Response_Getsockname::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Response.Getsockname)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Response_Getsockname::CopyFrom(const Response_Getsockname& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Response.Getsockname)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Response_Getsockname::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void Response_Getsockname::Swap(Response_Getsockname* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Response_Getsockname::InternalSwap(Response_Getsockname* other) {
  std::swap(ret_, other->ret_);
  std::swap(errno__, other->errno__);
  sockanme_.Swap(&other->sockanme_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Response_Getsockname::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Response_Getsockname_descriptor_;
  metadata.reflection = Response_Getsockname_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Response_Getsockopt::kRetFieldNumber;
const int Response_Getsockopt::kErrnoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Response_Getsockopt::Response_Getsockopt()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Response.Getsockopt)
}

void Response_Getsockopt::InitAsDefaultInstance() {
}

Response_Getsockopt::Response_Getsockopt(const Response_Getsockopt& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Response.Getsockopt)
}

void Response_Getsockopt::SharedCtor() {
  _cached_size_ = 0;
  ret_ = 0;
  errno__ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Response_Getsockopt::~Response_Getsockopt() {
  // @@protoc_insertion_point(destructor:Response.Getsockopt)
  SharedDtor();
}

void Response_Getsockopt::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Response_Getsockopt::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Response_Getsockopt::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Response_Getsockopt_descriptor_;
}

const Response_Getsockopt& Response_Getsockopt::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_response_2eproto();
  return *default_instance_;
}

Response_Getsockopt* Response_Getsockopt::default_instance_ = NULL;

Response_Getsockopt* Response_Getsockopt::New(::google::protobuf::Arena* arena) const {
  Response_Getsockopt* n = new Response_Getsockopt;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Response_Getsockopt::Clear() {
// @@protoc_insertion_point(message_clear_start:Response.Getsockopt)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(Response_Getsockopt, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<Response_Getsockopt*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(ret_, errno__);

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Response_Getsockopt::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Response.Getsockopt)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 ret = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ret_)));
          set_has_ret();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_errno_;
        break;
      }

      // optional int32 errno_ = 2;
      case 2: {
        if (tag == 16) {
         parse_errno_:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &errno__)));
          set_has_errno_();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Response.Getsockopt)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Response.Getsockopt)
  return false;
#undef DO_
}

void Response_Getsockopt::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Response.Getsockopt)
  // required int32 ret = 1;
  if (has_ret()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->ret(), output);
  }

  // optional int32 errno_ = 2;
  if (has_errno_()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->errno_(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Response.Getsockopt)
}

::google::protobuf::uint8* Response_Getsockopt::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Response.Getsockopt)
  // required int32 ret = 1;
  if (has_ret()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->ret(), target);
  }

  // optional int32 errno_ = 2;
  if (has_errno_()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->errno_(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Response.Getsockopt)
  return target;
}

int Response_Getsockopt::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:Response.Getsockopt)
  int total_size = 0;

  // required int32 ret = 1;
  if (has_ret()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->ret());
  }
  // optional int32 errno_ = 2;
  if (has_errno_()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->errno_());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Response_Getsockopt::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Response.Getsockopt)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Response_Getsockopt* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Response_Getsockopt>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Response.Getsockopt)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Response.Getsockopt)
    MergeFrom(*source);
  }
}

void Response_Getsockopt::MergeFrom(const Response_Getsockopt& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Response.Getsockopt)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_ret()) {
      set_ret(from.ret());
    }
    if (from.has_errno_()) {
      set_errno_(from.errno_());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Response_Getsockopt::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Response.Getsockopt)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Response_Getsockopt::CopyFrom(const Response_Getsockopt& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Response.Getsockopt)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Response_Getsockopt::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void Response_Getsockopt::Swap(Response_Getsockopt* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Response_Getsockopt::InternalSwap(Response_Getsockopt* other) {
  std::swap(ret_, other->ret_);
  std::swap(errno__, other->errno__);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Response_Getsockopt::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Response_Getsockopt_descriptor_;
  metadata.reflection = Response_Getsockopt_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Response_Setsockopt::kRetFieldNumber;
const int Response_Setsockopt::kErrnoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Response_Setsockopt::Response_Setsockopt()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Response.Setsockopt)
}

void Response_Setsockopt::InitAsDefaultInstance() {
}

Response_Setsockopt::Response_Setsockopt(const Response_Setsockopt& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Response.Setsockopt)
}

void Response_Setsockopt::SharedCtor() {
  _cached_size_ = 0;
  ret_ = 0;
  errno__ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Response_Setsockopt::~Response_Setsockopt() {
  // @@protoc_insertion_point(destructor:Response.Setsockopt)
  SharedDtor();
}

void Response_Setsockopt::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Response_Setsockopt::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Response_Setsockopt::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Response_Setsockopt_descriptor_;
}

const Response_Setsockopt& Response_Setsockopt::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_response_2eproto();
  return *default_instance_;
}

Response_Setsockopt* Response_Setsockopt::default_instance_ = NULL;

Response_Setsockopt* Response_Setsockopt::New(::google::protobuf::Arena* arena) const {
  Response_Setsockopt* n = new Response_Setsockopt;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Response_Setsockopt::Clear() {
// @@protoc_insertion_point(message_clear_start:Response.Setsockopt)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(Response_Setsockopt, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<Response_Setsockopt*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(ret_, errno__);

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Response_Setsockopt::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Response.Setsockopt)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 ret = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ret_)));
          set_has_ret();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_errno_;
        break;
      }

      // optional int32 errno_ = 2;
      case 2: {
        if (tag == 16) {
         parse_errno_:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &errno__)));
          set_has_errno_();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Response.Setsockopt)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Response.Setsockopt)
  return false;
#undef DO_
}

void Response_Setsockopt::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Response.Setsockopt)
  // required int32 ret = 1;
  if (has_ret()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->ret(), output);
  }

  // optional int32 errno_ = 2;
  if (has_errno_()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->errno_(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Response.Setsockopt)
}

::google::protobuf::uint8* Response_Setsockopt::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Response.Setsockopt)
  // required int32 ret = 1;
  if (has_ret()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->ret(), target);
  }

  // optional int32 errno_ = 2;
  if (has_errno_()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->errno_(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Response.Setsockopt)
  return target;
}

int Response_Setsockopt::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:Response.Setsockopt)
  int total_size = 0;

  // required int32 ret = 1;
  if (has_ret()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->ret());
  }
  // optional int32 errno_ = 2;
  if (has_errno_()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->errno_());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Response_Setsockopt::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Response.Setsockopt)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Response_Setsockopt* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Response_Setsockopt>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Response.Setsockopt)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Response.Setsockopt)
    MergeFrom(*source);
  }
}

void Response_Setsockopt::MergeFrom(const Response_Setsockopt& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Response.Setsockopt)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_ret()) {
      set_ret(from.ret());
    }
    if (from.has_errno_()) {
      set_errno_(from.errno_());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Response_Setsockopt::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Response.Setsockopt)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Response_Setsockopt::CopyFrom(const Response_Setsockopt& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Response.Setsockopt)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Response_Setsockopt::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void Response_Setsockopt::Swap(Response_Setsockopt* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Response_Setsockopt::InternalSwap(Response_Setsockopt* other) {
  std::swap(ret_, other->ret_);
  std::swap(errno__, other->errno__);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Response_Setsockopt::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Response_Setsockopt_descriptor_;
  metadata.reflection = Response_Setsockopt_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Response_Fcntl::kRetFieldNumber;
const int Response_Fcntl::kErrnoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Response_Fcntl::Response_Fcntl()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Response.Fcntl)
}

void Response_Fcntl::InitAsDefaultInstance() {
}

Response_Fcntl::Response_Fcntl(const Response_Fcntl& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Response.Fcntl)
}

void Response_Fcntl::SharedCtor() {
  _cached_size_ = 0;
  ret_ = 0;
  errno__ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Response_Fcntl::~Response_Fcntl() {
  // @@protoc_insertion_point(destructor:Response.Fcntl)
  SharedDtor();
}

void Response_Fcntl::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Response_Fcntl::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Response_Fcntl::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Response_Fcntl_descriptor_;
}

const Response_Fcntl& Response_Fcntl::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_response_2eproto();
  return *default_instance_;
}

Response_Fcntl* Response_Fcntl::default_instance_ = NULL;

Response_Fcntl* Response_Fcntl::New(::google::protobuf::Arena* arena) const {
  Response_Fcntl* n = new Response_Fcntl;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Response_Fcntl::Clear() {
// @@protoc_insertion_point(message_clear_start:Response.Fcntl)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(Response_Fcntl, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<Response_Fcntl*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(ret_, errno__);

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Response_Fcntl::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Response.Fcntl)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 ret = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ret_)));
          set_has_ret();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_errno_;
        break;
      }

      // optional int32 errno_ = 2;
      case 2: {
        if (tag == 16) {
         parse_errno_:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &errno__)));
          set_has_errno_();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Response.Fcntl)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Response.Fcntl)
  return false;
#undef DO_
}

void Response_Fcntl::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Response.Fcntl)
  // required int32 ret = 1;
  if (has_ret()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->ret(), output);
  }

  // optional int32 errno_ = 2;
  if (has_errno_()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->errno_(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Response.Fcntl)
}

::google::protobuf::uint8* Response_Fcntl::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Response.Fcntl)
  // required int32 ret = 1;
  if (has_ret()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->ret(), target);
  }

  // optional int32 errno_ = 2;
  if (has_errno_()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->errno_(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Response.Fcntl)
  return target;
}

int Response_Fcntl::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:Response.Fcntl)
  int total_size = 0;

  // required int32 ret = 1;
  if (has_ret()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->ret());
  }
  // optional int32 errno_ = 2;
  if (has_errno_()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->errno_());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Response_Fcntl::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Response.Fcntl)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Response_Fcntl* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Response_Fcntl>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Response.Fcntl)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Response.Fcntl)
    MergeFrom(*source);
  }
}

void Response_Fcntl::MergeFrom(const Response_Fcntl& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Response.Fcntl)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_ret()) {
      set_ret(from.ret());
    }
    if (from.has_errno_()) {
      set_errno_(from.errno_());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Response_Fcntl::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Response.Fcntl)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Response_Fcntl::CopyFrom(const Response_Fcntl& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Response.Fcntl)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Response_Fcntl::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void Response_Fcntl::Swap(Response_Fcntl* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Response_Fcntl::InternalSwap(Response_Fcntl* other) {
  std::swap(ret_, other->ret_);
  std::swap(errno__, other->errno__);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Response_Fcntl::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Response_Fcntl_descriptor_;
  metadata.reflection = Response_Fcntl_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Response_Atstart::kStartfdFieldNumber;
const int Response_Atstart::kCountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Response_Atstart::Response_Atstart()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Response.Atstart)
}

void Response_Atstart::InitAsDefaultInstance() {
}

Response_Atstart::Response_Atstart(const Response_Atstart& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Response.Atstart)
}

void Response_Atstart::SharedCtor() {
  _cached_size_ = 0;
  startfd_ = 0;
  count_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Response_Atstart::~Response_Atstart() {
  // @@protoc_insertion_point(destructor:Response.Atstart)
  SharedDtor();
}

void Response_Atstart::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Response_Atstart::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Response_Atstart::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Response_Atstart_descriptor_;
}

const Response_Atstart& Response_Atstart::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_response_2eproto();
  return *default_instance_;
}

Response_Atstart* Response_Atstart::default_instance_ = NULL;

Response_Atstart* Response_Atstart::New(::google::protobuf::Arena* arena) const {
  Response_Atstart* n = new Response_Atstart;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Response_Atstart::Clear() {
// @@protoc_insertion_point(message_clear_start:Response.Atstart)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(Response_Atstart, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<Response_Atstart*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(startfd_, count_);

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Response_Atstart::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Response.Atstart)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 startfd = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &startfd_)));
          set_has_startfd();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_count;
        break;
      }

      // optional int32 count = 2;
      case 2: {
        if (tag == 16) {
         parse_count:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &count_)));
          set_has_count();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Response.Atstart)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Response.Atstart)
  return false;
#undef DO_
}

void Response_Atstart::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Response.Atstart)
  // required int32 startfd = 1;
  if (has_startfd()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->startfd(), output);
  }

  // optional int32 count = 2;
  if (has_count()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->count(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Response.Atstart)
}

::google::protobuf::uint8* Response_Atstart::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Response.Atstart)
  // required int32 startfd = 1;
  if (has_startfd()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->startfd(), target);
  }

  // optional int32 count = 2;
  if (has_count()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->count(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Response.Atstart)
  return target;
}

int Response_Atstart::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:Response.Atstart)
  int total_size = 0;

  // required int32 startfd = 1;
  if (has_startfd()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->startfd());
  }
  // optional int32 count = 2;
  if (has_count()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->count());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Response_Atstart::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Response.Atstart)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Response_Atstart* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Response_Atstart>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Response.Atstart)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Response.Atstart)
    MergeFrom(*source);
  }
}

void Response_Atstart::MergeFrom(const Response_Atstart& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Response.Atstart)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_startfd()) {
      set_startfd(from.startfd());
    }
    if (from.has_count()) {
      set_count(from.count());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Response_Atstart::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Response.Atstart)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Response_Atstart::CopyFrom(const Response_Atstart& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Response.Atstart)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Response_Atstart::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void Response_Atstart::Swap(Response_Atstart* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Response_Atstart::InternalSwap(Response_Atstart* other) {
  std::swap(startfd_, other->startfd_);
  std::swap(count_, other->count_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Response_Atstart::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Response_Atstart_descriptor_;
  metadata.reflection = Response_Atstart_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Response_Atfork::Response_Atfork()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Response.Atfork)
}

void Response_Atfork::InitAsDefaultInstance() {
}

Response_Atfork::Response_Atfork(const Response_Atfork& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Response.Atfork)
}

void Response_Atfork::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Response_Atfork::~Response_Atfork() {
  // @@protoc_insertion_point(destructor:Response.Atfork)
  SharedDtor();
}

void Response_Atfork::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Response_Atfork::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Response_Atfork::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Response_Atfork_descriptor_;
}

const Response_Atfork& Response_Atfork::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_response_2eproto();
  return *default_instance_;
}

Response_Atfork* Response_Atfork::default_instance_ = NULL;

Response_Atfork* Response_Atfork::New(::google::protobuf::Arena* arena) const {
  Response_Atfork* n = new Response_Atfork;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Response_Atfork::Clear() {
// @@protoc_insertion_point(message_clear_start:Response.Atfork)
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Response_Atfork::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Response.Atfork)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:Response.Atfork)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Response.Atfork)
  return false;
#undef DO_
}

void Response_Atfork::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Response.Atfork)
  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Response.Atfork)
}

::google::protobuf::uint8* Response_Atfork::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Response.Atfork)
  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Response.Atfork)
  return target;
}

int Response_Atfork::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:Response.Atfork)
  int total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Response_Atfork::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Response.Atfork)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Response_Atfork* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Response_Atfork>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Response.Atfork)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Response.Atfork)
    MergeFrom(*source);
  }
}

void Response_Atfork::MergeFrom(const Response_Atfork& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Response.Atfork)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Response_Atfork::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Response.Atfork)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Response_Atfork::CopyFrom(const Response_Atfork& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Response.Atfork)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Response_Atfork::IsInitialized() const {

  return true;
}

void Response_Atfork::Swap(Response_Atfork* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Response_Atfork::InternalSwap(Response_Atfork* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Response_Atfork::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Response_Atfork_descriptor_;
  metadata.reflection = Response_Atfork_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Response_Atexit::Response_Atexit()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Response.Atexit)
}

void Response_Atexit::InitAsDefaultInstance() {
}

Response_Atexit::Response_Atexit(const Response_Atexit& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Response.Atexit)
}

void Response_Atexit::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Response_Atexit::~Response_Atexit() {
  // @@protoc_insertion_point(destructor:Response.Atexit)
  SharedDtor();
}

void Response_Atexit::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Response_Atexit::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Response_Atexit::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Response_Atexit_descriptor_;
}

const Response_Atexit& Response_Atexit::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_response_2eproto();
  return *default_instance_;
}

Response_Atexit* Response_Atexit::default_instance_ = NULL;

Response_Atexit* Response_Atexit::New(::google::protobuf::Arena* arena) const {
  Response_Atexit* n = new Response_Atexit;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Response_Atexit::Clear() {
// @@protoc_insertion_point(message_clear_start:Response.Atexit)
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Response_Atexit::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Response.Atexit)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:Response.Atexit)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Response.Atexit)
  return false;
#undef DO_
}

void Response_Atexit::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Response.Atexit)
  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Response.Atexit)
}

::google::protobuf::uint8* Response_Atexit::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Response.Atexit)
  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Response.Atexit)
  return target;
}

int Response_Atexit::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:Response.Atexit)
  int total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Response_Atexit::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Response.Atexit)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Response_Atexit* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Response_Atexit>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Response.Atexit)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Response.Atexit)
    MergeFrom(*source);
  }
}

void Response_Atexit::MergeFrom(const Response_Atexit& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Response.Atexit)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Response_Atexit::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Response.Atexit)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Response_Atexit::CopyFrom(const Response_Atexit& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Response.Atexit)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Response_Atexit::IsInitialized() const {

  return true;
}

void Response_Atexit::Swap(Response_Atexit* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Response_Atexit::InternalSwap(Response_Atexit* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Response_Atexit::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Response_Atexit_descriptor_;
  metadata.reflection = Response_Atexit_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Response::kSocketCallFieldNumber;
const int Response::kConnectCallFieldNumber;
const int Response::kCloseCallFieldNumber;
const int Response::kRecvfromCallFieldNumber;
const int Response::kSendtoCallFieldNumber;
const int Response::kPollCallFieldNumber;
const int Response::kSelectCallFieldNumber;
const int Response::kGetpeernameCallFieldNumber;
const int Response::kGetsocknameCallFieldNumber;
const int Response::kGetsockoptCallFieldNumber;
const int Response::kSetsockoptCallFieldNumber;
const int Response::kFcntlCallFieldNumber;
const int Response::kAtstartActionFieldNumber;
const int Response::kAtforkActionFieldNumber;
const int Response::kAtexitActionFieldNumber;
const int Response::kRetCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Response::Response()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Response)
}

void Response::InitAsDefaultInstance() {
  Response_default_oneof_instance_->socketcall_ = const_cast< ::Response_Socket*>(&::Response_Socket::default_instance());
  Response_default_oneof_instance_->connectcall_ = const_cast< ::Response_Connect*>(&::Response_Connect::default_instance());
  Response_default_oneof_instance_->closecall_ = const_cast< ::Response_Close*>(&::Response_Close::default_instance());
  Response_default_oneof_instance_->recvfromcall_ = const_cast< ::Response_Recvfrom*>(&::Response_Recvfrom::default_instance());
  Response_default_oneof_instance_->sendtocall_ = const_cast< ::Response_Sendto*>(&::Response_Sendto::default_instance());
  Response_default_oneof_instance_->pollcall_ = const_cast< ::Response_Poll*>(&::Response_Poll::default_instance());
  Response_default_oneof_instance_->selectcall_ = const_cast< ::Response_Select*>(&::Response_Select::default_instance());
  Response_default_oneof_instance_->getpeernamecall_ = const_cast< ::Response_Getpeername*>(&::Response_Getpeername::default_instance());
  Response_default_oneof_instance_->getsocknamecall_ = const_cast< ::Response_Getsockname*>(&::Response_Getsockname::default_instance());
  Response_default_oneof_instance_->getsockoptcall_ = const_cast< ::Response_Getsockopt*>(&::Response_Getsockopt::default_instance());
  Response_default_oneof_instance_->setsockoptcall_ = const_cast< ::Response_Setsockopt*>(&::Response_Setsockopt::default_instance());
  Response_default_oneof_instance_->fcntlcall_ = const_cast< ::Response_Fcntl*>(&::Response_Fcntl::default_instance());
  Response_default_oneof_instance_->atstartaction_ = const_cast< ::Response_Atstart*>(&::Response_Atstart::default_instance());
  Response_default_oneof_instance_->atforkaction_ = const_cast< ::Response_Atfork*>(&::Response_Atfork::default_instance());
  Response_default_oneof_instance_->atexitaction_ = const_cast< ::Response_Atexit*>(&::Response_Atexit::default_instance());
}

Response::Response(const Response& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Response)
}

void Response::SharedCtor() {
  _cached_size_ = 0;
  retcode_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  clear_has_returning();
}

Response::~Response() {
  // @@protoc_insertion_point(destructor:Response)
  SharedDtor();
}

void Response::SharedDtor() {
  if (has_returning()) {
    clear_returning();
  }
  if (this != default_instance_) {
  }
}

void Response::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Response::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Response_descriptor_;
}

const Response& Response::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_response_2eproto();
  return *default_instance_;
}

Response* Response::default_instance_ = NULL;

Response* Response::New(::google::protobuf::Arena* arena) const {
  Response* n = new Response;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Response::clear_returning() {
// @@protoc_insertion_point(one_of_clear_start:Response)
  switch(returning_case()) {
    case kSocketCall: {
      delete returning_.socketcall_;
      break;
    }
    case kConnectCall: {
      delete returning_.connectcall_;
      break;
    }
    case kCloseCall: {
      delete returning_.closecall_;
      break;
    }
    case kRecvfromCall: {
      delete returning_.recvfromcall_;
      break;
    }
    case kSendtoCall: {
      delete returning_.sendtocall_;
      break;
    }
    case kPollCall: {
      delete returning_.pollcall_;
      break;
    }
    case kSelectCall: {
      delete returning_.selectcall_;
      break;
    }
    case kGetpeernameCall: {
      delete returning_.getpeernamecall_;
      break;
    }
    case kGetsocknameCall: {
      delete returning_.getsocknamecall_;
      break;
    }
    case kGetsockoptCall: {
      delete returning_.getsockoptcall_;
      break;
    }
    case kSetsockoptCall: {
      delete returning_.setsockoptcall_;
      break;
    }
    case kFcntlCall: {
      delete returning_.fcntlcall_;
      break;
    }
    case kAtstartAction: {
      delete returning_.atstartaction_;
      break;
    }
    case kAtforkAction: {
      delete returning_.atforkaction_;
      break;
    }
    case kAtexitAction: {
      delete returning_.atexitaction_;
      break;
    }
    case RETURNING_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = RETURNING_NOT_SET;
}


void Response::Clear() {
// @@protoc_insertion_point(message_clear_start:Response)
  retcode_ = 0;
  clear_returning();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Response::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Response)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .Response.Socket socketCall = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_socketcall()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_connectCall;
        break;
      }

      // optional .Response.Connect connectCall = 2;
      case 2: {
        if (tag == 18) {
         parse_connectCall:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_connectcall()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_closeCall;
        break;
      }

      // optional .Response.Close closeCall = 3;
      case 3: {
        if (tag == 26) {
         parse_closeCall:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_closecall()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_recvfromCall;
        break;
      }

      // optional .Response.Recvfrom recvfromCall = 4;
      case 4: {
        if (tag == 34) {
         parse_recvfromCall:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_recvfromcall()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_sendtoCall;
        break;
      }

      // optional .Response.Sendto sendtoCall = 5;
      case 5: {
        if (tag == 42) {
         parse_sendtoCall:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_sendtocall()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_pollCall;
        break;
      }

      // optional .Response.Poll pollCall = 6;
      case 6: {
        if (tag == 50) {
         parse_pollCall:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_pollcall()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_selectCall;
        break;
      }

      // optional .Response.Select selectCall = 7;
      case 7: {
        if (tag == 58) {
         parse_selectCall:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_selectcall()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_getpeernameCall;
        break;
      }

      // optional .Response.Getpeername getpeernameCall = 8;
      case 8: {
        if (tag == 66) {
         parse_getpeernameCall:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_getpeernamecall()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_getsocknameCall;
        break;
      }

      // optional .Response.Getsockname getsocknameCall = 9;
      case 9: {
        if (tag == 74) {
         parse_getsocknameCall:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_getsocknamecall()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_getsockoptCall;
        break;
      }

      // optional .Response.Getsockopt getsockoptCall = 10;
      case 10: {
        if (tag == 82) {
         parse_getsockoptCall:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_getsockoptcall()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(90)) goto parse_setsockoptCall;
        break;
      }

      // optional .Response.Setsockopt setsockoptCall = 11;
      case 11: {
        if (tag == 90) {
         parse_setsockoptCall:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_setsockoptcall()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(98)) goto parse_fcntlCall;
        break;
      }

      // optional .Response.Fcntl fcntlCall = 12;
      case 12: {
        if (tag == 98) {
         parse_fcntlCall:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_fcntlcall()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(120)) goto parse_retCode;
        break;
      }

      // required .Response.RetCode retCode = 15;
      case 15: {
        if (tag == 120) {
         parse_retCode:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::Response_RetCode_IsValid(value)) {
            set_retcode(static_cast< ::Response_RetCode >(value));
          } else {
            mutable_unknown_fields()->AddVarint(15, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(130)) goto parse_atstartAction;
        break;
      }

      // optional .Response.Atstart atstartAction = 16;
      case 16: {
        if (tag == 130) {
         parse_atstartAction:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_atstartaction()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(138)) goto parse_atforkAction;
        break;
      }

      // optional .Response.Atfork atforkAction = 17;
      case 17: {
        if (tag == 138) {
         parse_atforkAction:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_atforkaction()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(146)) goto parse_atexitAction;
        break;
      }

      // optional .Response.Atexit atexitAction = 18;
      case 18: {
        if (tag == 146) {
         parse_atexitAction:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_atexitaction()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Response)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Response)
  return false;
#undef DO_
}

void Response::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Response)
  // optional .Response.Socket socketCall = 1;
  if (has_socketcall()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *returning_.socketcall_, output);
  }

  // optional .Response.Connect connectCall = 2;
  if (has_connectcall()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *returning_.connectcall_, output);
  }

  // optional .Response.Close closeCall = 3;
  if (has_closecall()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *returning_.closecall_, output);
  }

  // optional .Response.Recvfrom recvfromCall = 4;
  if (has_recvfromcall()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *returning_.recvfromcall_, output);
  }

  // optional .Response.Sendto sendtoCall = 5;
  if (has_sendtocall()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *returning_.sendtocall_, output);
  }

  // optional .Response.Poll pollCall = 6;
  if (has_pollcall()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *returning_.pollcall_, output);
  }

  // optional .Response.Select selectCall = 7;
  if (has_selectcall()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, *returning_.selectcall_, output);
  }

  // optional .Response.Getpeername getpeernameCall = 8;
  if (has_getpeernamecall()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, *returning_.getpeernamecall_, output);
  }

  // optional .Response.Getsockname getsocknameCall = 9;
  if (has_getsocknamecall()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, *returning_.getsocknamecall_, output);
  }

  // optional .Response.Getsockopt getsockoptCall = 10;
  if (has_getsockoptcall()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, *returning_.getsockoptcall_, output);
  }

  // optional .Response.Setsockopt setsockoptCall = 11;
  if (has_setsockoptcall()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, *returning_.setsockoptcall_, output);
  }

  // optional .Response.Fcntl fcntlCall = 12;
  if (has_fcntlcall()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, *returning_.fcntlcall_, output);
  }

  // required .Response.RetCode retCode = 15;
  if (has_retcode()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      15, this->retcode(), output);
  }

  // optional .Response.Atstart atstartAction = 16;
  if (has_atstartaction()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      16, *returning_.atstartaction_, output);
  }

  // optional .Response.Atfork atforkAction = 17;
  if (has_atforkaction()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      17, *returning_.atforkaction_, output);
  }

  // optional .Response.Atexit atexitAction = 18;
  if (has_atexitaction()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      18, *returning_.atexitaction_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Response)
}

::google::protobuf::uint8* Response::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Response)
  // optional .Response.Socket socketCall = 1;
  if (has_socketcall()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *returning_.socketcall_, false, target);
  }

  // optional .Response.Connect connectCall = 2;
  if (has_connectcall()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *returning_.connectcall_, false, target);
  }

  // optional .Response.Close closeCall = 3;
  if (has_closecall()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *returning_.closecall_, false, target);
  }

  // optional .Response.Recvfrom recvfromCall = 4;
  if (has_recvfromcall()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *returning_.recvfromcall_, false, target);
  }

  // optional .Response.Sendto sendtoCall = 5;
  if (has_sendtocall()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, *returning_.sendtocall_, false, target);
  }

  // optional .Response.Poll pollCall = 6;
  if (has_pollcall()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, *returning_.pollcall_, false, target);
  }

  // optional .Response.Select selectCall = 7;
  if (has_selectcall()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        7, *returning_.selectcall_, false, target);
  }

  // optional .Response.Getpeername getpeernameCall = 8;
  if (has_getpeernamecall()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        8, *returning_.getpeernamecall_, false, target);
  }

  // optional .Response.Getsockname getsocknameCall = 9;
  if (has_getsocknamecall()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        9, *returning_.getsocknamecall_, false, target);
  }

  // optional .Response.Getsockopt getsockoptCall = 10;
  if (has_getsockoptcall()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        10, *returning_.getsockoptcall_, false, target);
  }

  // optional .Response.Setsockopt setsockoptCall = 11;
  if (has_setsockoptcall()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        11, *returning_.setsockoptcall_, false, target);
  }

  // optional .Response.Fcntl fcntlCall = 12;
  if (has_fcntlcall()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        12, *returning_.fcntlcall_, false, target);
  }

  // required .Response.RetCode retCode = 15;
  if (has_retcode()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      15, this->retcode(), target);
  }

  // optional .Response.Atstart atstartAction = 16;
  if (has_atstartaction()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        16, *returning_.atstartaction_, false, target);
  }

  // optional .Response.Atfork atforkAction = 17;
  if (has_atforkaction()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        17, *returning_.atforkaction_, false, target);
  }

  // optional .Response.Atexit atexitAction = 18;
  if (has_atexitaction()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        18, *returning_.atexitaction_, false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Response)
  return target;
}

int Response::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:Response)
  int total_size = 0;

  // required .Response.RetCode retCode = 15;
  if (has_retcode()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->retcode());
  }
  switch (returning_case()) {
    // optional .Response.Socket socketCall = 1;
    case kSocketCall: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *returning_.socketcall_);
      break;
    }
    // optional .Response.Connect connectCall = 2;
    case kConnectCall: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *returning_.connectcall_);
      break;
    }
    // optional .Response.Close closeCall = 3;
    case kCloseCall: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *returning_.closecall_);
      break;
    }
    // optional .Response.Recvfrom recvfromCall = 4;
    case kRecvfromCall: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *returning_.recvfromcall_);
      break;
    }
    // optional .Response.Sendto sendtoCall = 5;
    case kSendtoCall: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *returning_.sendtocall_);
      break;
    }
    // optional .Response.Poll pollCall = 6;
    case kPollCall: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *returning_.pollcall_);
      break;
    }
    // optional .Response.Select selectCall = 7;
    case kSelectCall: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *returning_.selectcall_);
      break;
    }
    // optional .Response.Getpeername getpeernameCall = 8;
    case kGetpeernameCall: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *returning_.getpeernamecall_);
      break;
    }
    // optional .Response.Getsockname getsocknameCall = 9;
    case kGetsocknameCall: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *returning_.getsocknamecall_);
      break;
    }
    // optional .Response.Getsockopt getsockoptCall = 10;
    case kGetsockoptCall: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *returning_.getsockoptcall_);
      break;
    }
    // optional .Response.Setsockopt setsockoptCall = 11;
    case kSetsockoptCall: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *returning_.setsockoptcall_);
      break;
    }
    // optional .Response.Fcntl fcntlCall = 12;
    case kFcntlCall: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *returning_.fcntlcall_);
      break;
    }
    // optional .Response.Atstart atstartAction = 16;
    case kAtstartAction: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *returning_.atstartaction_);
      break;
    }
    // optional .Response.Atfork atforkAction = 17;
    case kAtforkAction: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *returning_.atforkaction_);
      break;
    }
    // optional .Response.Atexit atexitAction = 18;
    case kAtexitAction: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *returning_.atexitaction_);
      break;
    }
    case RETURNING_NOT_SET: {
      break;
    }
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Response::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Response)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Response* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Response>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Response)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Response)
    MergeFrom(*source);
  }
}

void Response::MergeFrom(const Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Response)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  switch (from.returning_case()) {
    case kSocketCall: {
      mutable_socketcall()->::Response_Socket::MergeFrom(from.socketcall());
      break;
    }
    case kConnectCall: {
      mutable_connectcall()->::Response_Connect::MergeFrom(from.connectcall());
      break;
    }
    case kCloseCall: {
      mutable_closecall()->::Response_Close::MergeFrom(from.closecall());
      break;
    }
    case kRecvfromCall: {
      mutable_recvfromcall()->::Response_Recvfrom::MergeFrom(from.recvfromcall());
      break;
    }
    case kSendtoCall: {
      mutable_sendtocall()->::Response_Sendto::MergeFrom(from.sendtocall());
      break;
    }
    case kPollCall: {
      mutable_pollcall()->::Response_Poll::MergeFrom(from.pollcall());
      break;
    }
    case kSelectCall: {
      mutable_selectcall()->::Response_Select::MergeFrom(from.selectcall());
      break;
    }
    case kGetpeernameCall: {
      mutable_getpeernamecall()->::Response_Getpeername::MergeFrom(from.getpeernamecall());
      break;
    }
    case kGetsocknameCall: {
      mutable_getsocknamecall()->::Response_Getsockname::MergeFrom(from.getsocknamecall());
      break;
    }
    case kGetsockoptCall: {
      mutable_getsockoptcall()->::Response_Getsockopt::MergeFrom(from.getsockoptcall());
      break;
    }
    case kSetsockoptCall: {
      mutable_setsockoptcall()->::Response_Setsockopt::MergeFrom(from.setsockoptcall());
      break;
    }
    case kFcntlCall: {
      mutable_fcntlcall()->::Response_Fcntl::MergeFrom(from.fcntlcall());
      break;
    }
    case kAtstartAction: {
      mutable_atstartaction()->::Response_Atstart::MergeFrom(from.atstartaction());
      break;
    }
    case kAtforkAction: {
      mutable_atforkaction()->::Response_Atfork::MergeFrom(from.atforkaction());
      break;
    }
    case kAtexitAction: {
      mutable_atexitaction()->::Response_Atexit::MergeFrom(from.atexitaction());
      break;
    }
    case RETURNING_NOT_SET: {
      break;
    }
  }
  if (from._has_bits_[15 / 32] & (0xffu << (15 % 32))) {
    if (from.has_retcode()) {
      set_retcode(from.retcode());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Response::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Response::CopyFrom(const Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Response::IsInitialized() const {
  if ((_has_bits_[0] & 0x00008000) != 0x00008000) return false;

  if (has_socketcall()) {
    if (!this->socketcall().IsInitialized()) return false;
  }
  if (has_connectcall()) {
    if (!this->connectcall().IsInitialized()) return false;
  }
  if (has_closecall()) {
    if (!this->closecall().IsInitialized()) return false;
  }
  if (has_recvfromcall()) {
    if (!this->recvfromcall().IsInitialized()) return false;
  }
  if (has_sendtocall()) {
    if (!this->sendtocall().IsInitialized()) return false;
  }
  if (has_pollcall()) {
    if (!this->pollcall().IsInitialized()) return false;
  }
  if (has_selectcall()) {
    if (!this->selectcall().IsInitialized()) return false;
  }
  if (has_getpeernamecall()) {
    if (!this->getpeernamecall().IsInitialized()) return false;
  }
  if (has_getsocknamecall()) {
    if (!this->getsocknamecall().IsInitialized()) return false;
  }
  if (has_getsockoptcall()) {
    if (!this->getsockoptcall().IsInitialized()) return false;
  }
  if (has_setsockoptcall()) {
    if (!this->setsockoptcall().IsInitialized()) return false;
  }
  if (has_fcntlcall()) {
    if (!this->fcntlcall().IsInitialized()) return false;
  }
  if (has_atstartaction()) {
    if (!this->atstartaction().IsInitialized()) return false;
  }
  return true;
}

void Response::Swap(Response* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Response::InternalSwap(Response* other) {
  std::swap(retcode_, other->retcode_);
  std::swap(returning_, other->returning_);
  std::swap(_oneof_case_[0], other->_oneof_case_[0]);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Response::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Response_descriptor_;
  metadata.reflection = Response_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Response_Socket

// required int32 ret = 1;
bool Response_Socket::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Response_Socket::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
void Response_Socket::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
void Response_Socket::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
 ::google::protobuf::int32 Response_Socket::ret() const {
  // @@protoc_insertion_point(field_get:Response.Socket.ret)
  return ret_;
}
 void Response_Socket::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
  // @@protoc_insertion_point(field_set:Response.Socket.ret)
}

// optional int32 errno_ = 2;
bool Response_Socket::has_errno_() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Response_Socket::set_has_errno_() {
  _has_bits_[0] |= 0x00000002u;
}
void Response_Socket::clear_has_errno_() {
  _has_bits_[0] &= ~0x00000002u;
}
void Response_Socket::clear_errno_() {
  errno__ = 0;
  clear_has_errno_();
}
 ::google::protobuf::int32 Response_Socket::errno_() const {
  // @@protoc_insertion_point(field_get:Response.Socket.errno_)
  return errno__;
}
 void Response_Socket::set_errno_(::google::protobuf::int32 value) {
  set_has_errno_();
  errno__ = value;
  // @@protoc_insertion_point(field_set:Response.Socket.errno_)
}

// -------------------------------------------------------------------

// Response_Connect

// required int32 ret = 1;
bool Response_Connect::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Response_Connect::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
void Response_Connect::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
void Response_Connect::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
 ::google::protobuf::int32 Response_Connect::ret() const {
  // @@protoc_insertion_point(field_get:Response.Connect.ret)
  return ret_;
}
 void Response_Connect::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
  // @@protoc_insertion_point(field_set:Response.Connect.ret)
}

// optional int32 errno_ = 2;
bool Response_Connect::has_errno_() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Response_Connect::set_has_errno_() {
  _has_bits_[0] |= 0x00000002u;
}
void Response_Connect::clear_has_errno_() {
  _has_bits_[0] &= ~0x00000002u;
}
void Response_Connect::clear_errno_() {
  errno__ = 0;
  clear_has_errno_();
}
 ::google::protobuf::int32 Response_Connect::errno_() const {
  // @@protoc_insertion_point(field_get:Response.Connect.errno_)
  return errno__;
}
 void Response_Connect::set_errno_(::google::protobuf::int32 value) {
  set_has_errno_();
  errno__ = value;
  // @@protoc_insertion_point(field_set:Response.Connect.errno_)
}

// -------------------------------------------------------------------

// Response_Close

// required int32 ret = 1;
bool Response_Close::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Response_Close::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
void Response_Close::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
void Response_Close::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
 ::google::protobuf::int32 Response_Close::ret() const {
  // @@protoc_insertion_point(field_get:Response.Close.ret)
  return ret_;
}
 void Response_Close::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
  // @@protoc_insertion_point(field_set:Response.Close.ret)
}

// optional int32 errno_ = 2;
bool Response_Close::has_errno_() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Response_Close::set_has_errno_() {
  _has_bits_[0] |= 0x00000002u;
}
void Response_Close::clear_has_errno_() {
  _has_bits_[0] &= ~0x00000002u;
}
void Response_Close::clear_errno_() {
  errno__ = 0;
  clear_has_errno_();
}
 ::google::protobuf::int32 Response_Close::errno_() const {
  // @@protoc_insertion_point(field_get:Response.Close.errno_)
  return errno__;
}
 void Response_Close::set_errno_(::google::protobuf::int32 value) {
  set_has_errno_();
  errno__ = value;
  // @@protoc_insertion_point(field_set:Response.Close.errno_)
}

// -------------------------------------------------------------------

// Response_Recvfrom

// required int32 ret = 1;
bool Response_Recvfrom::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Response_Recvfrom::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
void Response_Recvfrom::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
void Response_Recvfrom::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
 ::google::protobuf::int32 Response_Recvfrom::ret() const {
  // @@protoc_insertion_point(field_get:Response.Recvfrom.ret)
  return ret_;
}
 void Response_Recvfrom::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
  // @@protoc_insertion_point(field_set:Response.Recvfrom.ret)
}

// optional int32 errno_ = 2;
bool Response_Recvfrom::has_errno_() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Response_Recvfrom::set_has_errno_() {
  _has_bits_[0] |= 0x00000002u;
}
void Response_Recvfrom::clear_has_errno_() {
  _has_bits_[0] &= ~0x00000002u;
}
void Response_Recvfrom::clear_errno_() {
  errno__ = 0;
  clear_has_errno_();
}
 ::google::protobuf::int32 Response_Recvfrom::errno_() const {
  // @@protoc_insertion_point(field_get:Response.Recvfrom.errno_)
  return errno__;
}
 void Response_Recvfrom::set_errno_(::google::protobuf::int32 value) {
  set_has_errno_();
  errno__ = value;
  // @@protoc_insertion_point(field_set:Response.Recvfrom.errno_)
}

// optional bytes buf = 3;
bool Response_Recvfrom::has_buf() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void Response_Recvfrom::set_has_buf() {
  _has_bits_[0] |= 0x00000004u;
}
void Response_Recvfrom::clear_has_buf() {
  _has_bits_[0] &= ~0x00000004u;
}
void Response_Recvfrom::clear_buf() {
  buf_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_buf();
}
 const ::std::string& Response_Recvfrom::buf() const {
  // @@protoc_insertion_point(field_get:Response.Recvfrom.buf)
  return buf_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Response_Recvfrom::set_buf(const ::std::string& value) {
  set_has_buf();
  buf_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Response.Recvfrom.buf)
}
 void Response_Recvfrom::set_buf(const char* value) {
  set_has_buf();
  buf_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Response.Recvfrom.buf)
}
 void Response_Recvfrom::set_buf(const void* value, size_t size) {
  set_has_buf();
  buf_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Response.Recvfrom.buf)
}
 ::std::string* Response_Recvfrom::mutable_buf() {
  set_has_buf();
  // @@protoc_insertion_point(field_mutable:Response.Recvfrom.buf)
  return buf_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Response_Recvfrom::release_buf() {
  // @@protoc_insertion_point(field_release:Response.Recvfrom.buf)
  clear_has_buf();
  return buf_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Response_Recvfrom::set_allocated_buf(::std::string* buf) {
  if (buf != NULL) {
    set_has_buf();
  } else {
    clear_has_buf();
  }
  buf_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), buf);
  // @@protoc_insertion_point(field_set_allocated:Response.Recvfrom.buf)
}

// optional bytes addr = 4;
bool Response_Recvfrom::has_addr() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void Response_Recvfrom::set_has_addr() {
  _has_bits_[0] |= 0x00000008u;
}
void Response_Recvfrom::clear_has_addr() {
  _has_bits_[0] &= ~0x00000008u;
}
void Response_Recvfrom::clear_addr() {
  addr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_addr();
}
 const ::std::string& Response_Recvfrom::addr() const {
  // @@protoc_insertion_point(field_get:Response.Recvfrom.addr)
  return addr_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Response_Recvfrom::set_addr(const ::std::string& value) {
  set_has_addr();
  addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Response.Recvfrom.addr)
}
 void Response_Recvfrom::set_addr(const char* value) {
  set_has_addr();
  addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Response.Recvfrom.addr)
}
 void Response_Recvfrom::set_addr(const void* value, size_t size) {
  set_has_addr();
  addr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Response.Recvfrom.addr)
}
 ::std::string* Response_Recvfrom::mutable_addr() {
  set_has_addr();
  // @@protoc_insertion_point(field_mutable:Response.Recvfrom.addr)
  return addr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Response_Recvfrom::release_addr() {
  // @@protoc_insertion_point(field_release:Response.Recvfrom.addr)
  clear_has_addr();
  return addr_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Response_Recvfrom::set_allocated_addr(::std::string* addr) {
  if (addr != NULL) {
    set_has_addr();
  } else {
    clear_has_addr();
  }
  addr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), addr);
  // @@protoc_insertion_point(field_set_allocated:Response.Recvfrom.addr)
}

// -------------------------------------------------------------------

// Response_Sendto

// required int32 ret = 1;
bool Response_Sendto::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Response_Sendto::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
void Response_Sendto::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
void Response_Sendto::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
 ::google::protobuf::int32 Response_Sendto::ret() const {
  // @@protoc_insertion_point(field_get:Response.Sendto.ret)
  return ret_;
}
 void Response_Sendto::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
  // @@protoc_insertion_point(field_set:Response.Sendto.ret)
}

// optional int32 errno_ = 2;
bool Response_Sendto::has_errno_() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Response_Sendto::set_has_errno_() {
  _has_bits_[0] |= 0x00000002u;
}
void Response_Sendto::clear_has_errno_() {
  _has_bits_[0] &= ~0x00000002u;
}
void Response_Sendto::clear_errno_() {
  errno__ = 0;
  clear_has_errno_();
}
 ::google::protobuf::int32 Response_Sendto::errno_() const {
  // @@protoc_insertion_point(field_get:Response.Sendto.errno_)
  return errno__;
}
 void Response_Sendto::set_errno_(::google::protobuf::int32 value) {
  set_has_errno_();
  errno__ = value;
  // @@protoc_insertion_point(field_set:Response.Sendto.errno_)
}

// -------------------------------------------------------------------

// Response_Poll

// required int32 ret = 1;
bool Response_Poll::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Response_Poll::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
void Response_Poll::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
void Response_Poll::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
 ::google::protobuf::int32 Response_Poll::ret() const {
  // @@protoc_insertion_point(field_get:Response.Poll.ret)
  return ret_;
}
 void Response_Poll::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
  // @@protoc_insertion_point(field_set:Response.Poll.ret)
}

// optional int32 errno_ = 2;
bool Response_Poll::has_errno_() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Response_Poll::set_has_errno_() {
  _has_bits_[0] |= 0x00000002u;
}
void Response_Poll::clear_has_errno_() {
  _has_bits_[0] &= ~0x00000002u;
}
void Response_Poll::clear_errno_() {
  errno__ = 0;
  clear_has_errno_();
}
 ::google::protobuf::int32 Response_Poll::errno_() const {
  // @@protoc_insertion_point(field_get:Response.Poll.errno_)
  return errno__;
}
 void Response_Poll::set_errno_(::google::protobuf::int32 value) {
  set_has_errno_();
  errno__ = value;
  // @@protoc_insertion_point(field_set:Response.Poll.errno_)
}

// -------------------------------------------------------------------

// Response_Select

// required int32 ret = 1;
bool Response_Select::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Response_Select::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
void Response_Select::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
void Response_Select::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
 ::google::protobuf::int32 Response_Select::ret() const {
  // @@protoc_insertion_point(field_get:Response.Select.ret)
  return ret_;
}
 void Response_Select::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
  // @@protoc_insertion_point(field_set:Response.Select.ret)
}

// optional int32 errno_ = 2;
bool Response_Select::has_errno_() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Response_Select::set_has_errno_() {
  _has_bits_[0] |= 0x00000002u;
}
void Response_Select::clear_has_errno_() {
  _has_bits_[0] &= ~0x00000002u;
}
void Response_Select::clear_errno_() {
  errno__ = 0;
  clear_has_errno_();
}
 ::google::protobuf::int32 Response_Select::errno_() const {
  // @@protoc_insertion_point(field_get:Response.Select.errno_)
  return errno__;
}
 void Response_Select::set_errno_(::google::protobuf::int32 value) {
  set_has_errno_();
  errno__ = value;
  // @@protoc_insertion_point(field_set:Response.Select.errno_)
}

// -------------------------------------------------------------------

// Response_Getpeername

// required int32 ret = 1;
bool Response_Getpeername::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Response_Getpeername::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
void Response_Getpeername::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
void Response_Getpeername::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
 ::google::protobuf::int32 Response_Getpeername::ret() const {
  // @@protoc_insertion_point(field_get:Response.Getpeername.ret)
  return ret_;
}
 void Response_Getpeername::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
  // @@protoc_insertion_point(field_set:Response.Getpeername.ret)
}

// optional int32 errno_ = 2;
bool Response_Getpeername::has_errno_() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Response_Getpeername::set_has_errno_() {
  _has_bits_[0] |= 0x00000002u;
}
void Response_Getpeername::clear_has_errno_() {
  _has_bits_[0] &= ~0x00000002u;
}
void Response_Getpeername::clear_errno_() {
  errno__ = 0;
  clear_has_errno_();
}
 ::google::protobuf::int32 Response_Getpeername::errno_() const {
  // @@protoc_insertion_point(field_get:Response.Getpeername.errno_)
  return errno__;
}
 void Response_Getpeername::set_errno_(::google::protobuf::int32 value) {
  set_has_errno_();
  errno__ = value;
  // @@protoc_insertion_point(field_set:Response.Getpeername.errno_)
}

// optional bytes peername = 3;
bool Response_Getpeername::has_peername() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void Response_Getpeername::set_has_peername() {
  _has_bits_[0] |= 0x00000004u;
}
void Response_Getpeername::clear_has_peername() {
  _has_bits_[0] &= ~0x00000004u;
}
void Response_Getpeername::clear_peername() {
  peername_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_peername();
}
 const ::std::string& Response_Getpeername::peername() const {
  // @@protoc_insertion_point(field_get:Response.Getpeername.peername)
  return peername_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Response_Getpeername::set_peername(const ::std::string& value) {
  set_has_peername();
  peername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Response.Getpeername.peername)
}
 void Response_Getpeername::set_peername(const char* value) {
  set_has_peername();
  peername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Response.Getpeername.peername)
}
 void Response_Getpeername::set_peername(const void* value, size_t size) {
  set_has_peername();
  peername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Response.Getpeername.peername)
}
 ::std::string* Response_Getpeername::mutable_peername() {
  set_has_peername();
  // @@protoc_insertion_point(field_mutable:Response.Getpeername.peername)
  return peername_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Response_Getpeername::release_peername() {
  // @@protoc_insertion_point(field_release:Response.Getpeername.peername)
  clear_has_peername();
  return peername_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Response_Getpeername::set_allocated_peername(::std::string* peername) {
  if (peername != NULL) {
    set_has_peername();
  } else {
    clear_has_peername();
  }
  peername_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), peername);
  // @@protoc_insertion_point(field_set_allocated:Response.Getpeername.peername)
}

// -------------------------------------------------------------------

// Response_Getsockname

// required int32 ret = 1;
bool Response_Getsockname::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Response_Getsockname::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
void Response_Getsockname::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
void Response_Getsockname::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
 ::google::protobuf::int32 Response_Getsockname::ret() const {
  // @@protoc_insertion_point(field_get:Response.Getsockname.ret)
  return ret_;
}
 void Response_Getsockname::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
  // @@protoc_insertion_point(field_set:Response.Getsockname.ret)
}

// optional int32 errno_ = 2;
bool Response_Getsockname::has_errno_() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Response_Getsockname::set_has_errno_() {
  _has_bits_[0] |= 0x00000002u;
}
void Response_Getsockname::clear_has_errno_() {
  _has_bits_[0] &= ~0x00000002u;
}
void Response_Getsockname::clear_errno_() {
  errno__ = 0;
  clear_has_errno_();
}
 ::google::protobuf::int32 Response_Getsockname::errno_() const {
  // @@protoc_insertion_point(field_get:Response.Getsockname.errno_)
  return errno__;
}
 void Response_Getsockname::set_errno_(::google::protobuf::int32 value) {
  set_has_errno_();
  errno__ = value;
  // @@protoc_insertion_point(field_set:Response.Getsockname.errno_)
}

// optional bytes sockanme = 3;
bool Response_Getsockname::has_sockanme() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void Response_Getsockname::set_has_sockanme() {
  _has_bits_[0] |= 0x00000004u;
}
void Response_Getsockname::clear_has_sockanme() {
  _has_bits_[0] &= ~0x00000004u;
}
void Response_Getsockname::clear_sockanme() {
  sockanme_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_sockanme();
}
 const ::std::string& Response_Getsockname::sockanme() const {
  // @@protoc_insertion_point(field_get:Response.Getsockname.sockanme)
  return sockanme_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Response_Getsockname::set_sockanme(const ::std::string& value) {
  set_has_sockanme();
  sockanme_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Response.Getsockname.sockanme)
}
 void Response_Getsockname::set_sockanme(const char* value) {
  set_has_sockanme();
  sockanme_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Response.Getsockname.sockanme)
}
 void Response_Getsockname::set_sockanme(const void* value, size_t size) {
  set_has_sockanme();
  sockanme_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Response.Getsockname.sockanme)
}
 ::std::string* Response_Getsockname::mutable_sockanme() {
  set_has_sockanme();
  // @@protoc_insertion_point(field_mutable:Response.Getsockname.sockanme)
  return sockanme_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Response_Getsockname::release_sockanme() {
  // @@protoc_insertion_point(field_release:Response.Getsockname.sockanme)
  clear_has_sockanme();
  return sockanme_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Response_Getsockname::set_allocated_sockanme(::std::string* sockanme) {
  if (sockanme != NULL) {
    set_has_sockanme();
  } else {
    clear_has_sockanme();
  }
  sockanme_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sockanme);
  // @@protoc_insertion_point(field_set_allocated:Response.Getsockname.sockanme)
}

// -------------------------------------------------------------------

// Response_Getsockopt

// required int32 ret = 1;
bool Response_Getsockopt::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Response_Getsockopt::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
void Response_Getsockopt::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
void Response_Getsockopt::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
 ::google::protobuf::int32 Response_Getsockopt::ret() const {
  // @@protoc_insertion_point(field_get:Response.Getsockopt.ret)
  return ret_;
}
 void Response_Getsockopt::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
  // @@protoc_insertion_point(field_set:Response.Getsockopt.ret)
}

// optional int32 errno_ = 2;
bool Response_Getsockopt::has_errno_() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Response_Getsockopt::set_has_errno_() {
  _has_bits_[0] |= 0x00000002u;
}
void Response_Getsockopt::clear_has_errno_() {
  _has_bits_[0] &= ~0x00000002u;
}
void Response_Getsockopt::clear_errno_() {
  errno__ = 0;
  clear_has_errno_();
}
 ::google::protobuf::int32 Response_Getsockopt::errno_() const {
  // @@protoc_insertion_point(field_get:Response.Getsockopt.errno_)
  return errno__;
}
 void Response_Getsockopt::set_errno_(::google::protobuf::int32 value) {
  set_has_errno_();
  errno__ = value;
  // @@protoc_insertion_point(field_set:Response.Getsockopt.errno_)
}

// -------------------------------------------------------------------

// Response_Setsockopt

// required int32 ret = 1;
bool Response_Setsockopt::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Response_Setsockopt::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
void Response_Setsockopt::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
void Response_Setsockopt::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
 ::google::protobuf::int32 Response_Setsockopt::ret() const {
  // @@protoc_insertion_point(field_get:Response.Setsockopt.ret)
  return ret_;
}
 void Response_Setsockopt::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
  // @@protoc_insertion_point(field_set:Response.Setsockopt.ret)
}

// optional int32 errno_ = 2;
bool Response_Setsockopt::has_errno_() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Response_Setsockopt::set_has_errno_() {
  _has_bits_[0] |= 0x00000002u;
}
void Response_Setsockopt::clear_has_errno_() {
  _has_bits_[0] &= ~0x00000002u;
}
void Response_Setsockopt::clear_errno_() {
  errno__ = 0;
  clear_has_errno_();
}
 ::google::protobuf::int32 Response_Setsockopt::errno_() const {
  // @@protoc_insertion_point(field_get:Response.Setsockopt.errno_)
  return errno__;
}
 void Response_Setsockopt::set_errno_(::google::protobuf::int32 value) {
  set_has_errno_();
  errno__ = value;
  // @@protoc_insertion_point(field_set:Response.Setsockopt.errno_)
}

// -------------------------------------------------------------------

// Response_Fcntl

// required int32 ret = 1;
bool Response_Fcntl::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Response_Fcntl::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
void Response_Fcntl::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
void Response_Fcntl::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
 ::google::protobuf::int32 Response_Fcntl::ret() const {
  // @@protoc_insertion_point(field_get:Response.Fcntl.ret)
  return ret_;
}
 void Response_Fcntl::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
  // @@protoc_insertion_point(field_set:Response.Fcntl.ret)
}

// optional int32 errno_ = 2;
bool Response_Fcntl::has_errno_() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Response_Fcntl::set_has_errno_() {
  _has_bits_[0] |= 0x00000002u;
}
void Response_Fcntl::clear_has_errno_() {
  _has_bits_[0] &= ~0x00000002u;
}
void Response_Fcntl::clear_errno_() {
  errno__ = 0;
  clear_has_errno_();
}
 ::google::protobuf::int32 Response_Fcntl::errno_() const {
  // @@protoc_insertion_point(field_get:Response.Fcntl.errno_)
  return errno__;
}
 void Response_Fcntl::set_errno_(::google::protobuf::int32 value) {
  set_has_errno_();
  errno__ = value;
  // @@protoc_insertion_point(field_set:Response.Fcntl.errno_)
}

// -------------------------------------------------------------------

// Response_Atstart

// required int32 startfd = 1;
bool Response_Atstart::has_startfd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Response_Atstart::set_has_startfd() {
  _has_bits_[0] |= 0x00000001u;
}
void Response_Atstart::clear_has_startfd() {
  _has_bits_[0] &= ~0x00000001u;
}
void Response_Atstart::clear_startfd() {
  startfd_ = 0;
  clear_has_startfd();
}
 ::google::protobuf::int32 Response_Atstart::startfd() const {
  // @@protoc_insertion_point(field_get:Response.Atstart.startfd)
  return startfd_;
}
 void Response_Atstart::set_startfd(::google::protobuf::int32 value) {
  set_has_startfd();
  startfd_ = value;
  // @@protoc_insertion_point(field_set:Response.Atstart.startfd)
}

// optional int32 count = 2;
bool Response_Atstart::has_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Response_Atstart::set_has_count() {
  _has_bits_[0] |= 0x00000002u;
}
void Response_Atstart::clear_has_count() {
  _has_bits_[0] &= ~0x00000002u;
}
void Response_Atstart::clear_count() {
  count_ = 0;
  clear_has_count();
}
 ::google::protobuf::int32 Response_Atstart::count() const {
  // @@protoc_insertion_point(field_get:Response.Atstart.count)
  return count_;
}
 void Response_Atstart::set_count(::google::protobuf::int32 value) {
  set_has_count();
  count_ = value;
  // @@protoc_insertion_point(field_set:Response.Atstart.count)
}

// -------------------------------------------------------------------

// Response_Atfork

// -------------------------------------------------------------------

// Response_Atexit

// -------------------------------------------------------------------

// Response

// optional .Response.Socket socketCall = 1;
bool Response::has_socketcall() const {
  return returning_case() == kSocketCall;
}
void Response::set_has_socketcall() {
  _oneof_case_[0] = kSocketCall;
}
void Response::clear_socketcall() {
  if (has_socketcall()) {
    delete returning_.socketcall_;
    clear_has_returning();
  }
}
 const ::Response_Socket& Response::socketcall() const {
  // @@protoc_insertion_point(field_get:Response.socketCall)
  return has_socketcall()
      ? *returning_.socketcall_
      : ::Response_Socket::default_instance();
}
::Response_Socket* Response::mutable_socketcall() {
  if (!has_socketcall()) {
    clear_returning();
    set_has_socketcall();
    returning_.socketcall_ = new ::Response_Socket;
  }
  // @@protoc_insertion_point(field_mutable:Response.socketCall)
  return returning_.socketcall_;
}
::Response_Socket* Response::release_socketcall() {
  // @@protoc_insertion_point(field_release:Response.socketCall)
  if (has_socketcall()) {
    clear_has_returning();
    ::Response_Socket* temp = returning_.socketcall_;
    returning_.socketcall_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void Response::set_allocated_socketcall(::Response_Socket* socketcall) {
  clear_returning();
  if (socketcall) {
    set_has_socketcall();
    returning_.socketcall_ = socketcall;
  }
  // @@protoc_insertion_point(field_set_allocated:Response.socketCall)
}

// optional .Response.Connect connectCall = 2;
bool Response::has_connectcall() const {
  return returning_case() == kConnectCall;
}
void Response::set_has_connectcall() {
  _oneof_case_[0] = kConnectCall;
}
void Response::clear_connectcall() {
  if (has_connectcall()) {
    delete returning_.connectcall_;
    clear_has_returning();
  }
}
 const ::Response_Connect& Response::connectcall() const {
  // @@protoc_insertion_point(field_get:Response.connectCall)
  return has_connectcall()
      ? *returning_.connectcall_
      : ::Response_Connect::default_instance();
}
::Response_Connect* Response::mutable_connectcall() {
  if (!has_connectcall()) {
    clear_returning();
    set_has_connectcall();
    returning_.connectcall_ = new ::Response_Connect;
  }
  // @@protoc_insertion_point(field_mutable:Response.connectCall)
  return returning_.connectcall_;
}
::Response_Connect* Response::release_connectcall() {
  // @@protoc_insertion_point(field_release:Response.connectCall)
  if (has_connectcall()) {
    clear_has_returning();
    ::Response_Connect* temp = returning_.connectcall_;
    returning_.connectcall_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void Response::set_allocated_connectcall(::Response_Connect* connectcall) {
  clear_returning();
  if (connectcall) {
    set_has_connectcall();
    returning_.connectcall_ = connectcall;
  }
  // @@protoc_insertion_point(field_set_allocated:Response.connectCall)
}

// optional .Response.Close closeCall = 3;
bool Response::has_closecall() const {
  return returning_case() == kCloseCall;
}
void Response::set_has_closecall() {
  _oneof_case_[0] = kCloseCall;
}
void Response::clear_closecall() {
  if (has_closecall()) {
    delete returning_.closecall_;
    clear_has_returning();
  }
}
 const ::Response_Close& Response::closecall() const {
  // @@protoc_insertion_point(field_get:Response.closeCall)
  return has_closecall()
      ? *returning_.closecall_
      : ::Response_Close::default_instance();
}
::Response_Close* Response::mutable_closecall() {
  if (!has_closecall()) {
    clear_returning();
    set_has_closecall();
    returning_.closecall_ = new ::Response_Close;
  }
  // @@protoc_insertion_point(field_mutable:Response.closeCall)
  return returning_.closecall_;
}
::Response_Close* Response::release_closecall() {
  // @@protoc_insertion_point(field_release:Response.closeCall)
  if (has_closecall()) {
    clear_has_returning();
    ::Response_Close* temp = returning_.closecall_;
    returning_.closecall_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void Response::set_allocated_closecall(::Response_Close* closecall) {
  clear_returning();
  if (closecall) {
    set_has_closecall();
    returning_.closecall_ = closecall;
  }
  // @@protoc_insertion_point(field_set_allocated:Response.closeCall)
}

// optional .Response.Recvfrom recvfromCall = 4;
bool Response::has_recvfromcall() const {
  return returning_case() == kRecvfromCall;
}
void Response::set_has_recvfromcall() {
  _oneof_case_[0] = kRecvfromCall;
}
void Response::clear_recvfromcall() {
  if (has_recvfromcall()) {
    delete returning_.recvfromcall_;
    clear_has_returning();
  }
}
 const ::Response_Recvfrom& Response::recvfromcall() const {
  // @@protoc_insertion_point(field_get:Response.recvfromCall)
  return has_recvfromcall()
      ? *returning_.recvfromcall_
      : ::Response_Recvfrom::default_instance();
}
::Response_Recvfrom* Response::mutable_recvfromcall() {
  if (!has_recvfromcall()) {
    clear_returning();
    set_has_recvfromcall();
    returning_.recvfromcall_ = new ::Response_Recvfrom;
  }
  // @@protoc_insertion_point(field_mutable:Response.recvfromCall)
  return returning_.recvfromcall_;
}
::Response_Recvfrom* Response::release_recvfromcall() {
  // @@protoc_insertion_point(field_release:Response.recvfromCall)
  if (has_recvfromcall()) {
    clear_has_returning();
    ::Response_Recvfrom* temp = returning_.recvfromcall_;
    returning_.recvfromcall_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void Response::set_allocated_recvfromcall(::Response_Recvfrom* recvfromcall) {
  clear_returning();
  if (recvfromcall) {
    set_has_recvfromcall();
    returning_.recvfromcall_ = recvfromcall;
  }
  // @@protoc_insertion_point(field_set_allocated:Response.recvfromCall)
}

// optional .Response.Sendto sendtoCall = 5;
bool Response::has_sendtocall() const {
  return returning_case() == kSendtoCall;
}
void Response::set_has_sendtocall() {
  _oneof_case_[0] = kSendtoCall;
}
void Response::clear_sendtocall() {
  if (has_sendtocall()) {
    delete returning_.sendtocall_;
    clear_has_returning();
  }
}
 const ::Response_Sendto& Response::sendtocall() const {
  // @@protoc_insertion_point(field_get:Response.sendtoCall)
  return has_sendtocall()
      ? *returning_.sendtocall_
      : ::Response_Sendto::default_instance();
}
::Response_Sendto* Response::mutable_sendtocall() {
  if (!has_sendtocall()) {
    clear_returning();
    set_has_sendtocall();
    returning_.sendtocall_ = new ::Response_Sendto;
  }
  // @@protoc_insertion_point(field_mutable:Response.sendtoCall)
  return returning_.sendtocall_;
}
::Response_Sendto* Response::release_sendtocall() {
  // @@protoc_insertion_point(field_release:Response.sendtoCall)
  if (has_sendtocall()) {
    clear_has_returning();
    ::Response_Sendto* temp = returning_.sendtocall_;
    returning_.sendtocall_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void Response::set_allocated_sendtocall(::Response_Sendto* sendtocall) {
  clear_returning();
  if (sendtocall) {
    set_has_sendtocall();
    returning_.sendtocall_ = sendtocall;
  }
  // @@protoc_insertion_point(field_set_allocated:Response.sendtoCall)
}

// optional .Response.Poll pollCall = 6;
bool Response::has_pollcall() const {
  return returning_case() == kPollCall;
}
void Response::set_has_pollcall() {
  _oneof_case_[0] = kPollCall;
}
void Response::clear_pollcall() {
  if (has_pollcall()) {
    delete returning_.pollcall_;
    clear_has_returning();
  }
}
 const ::Response_Poll& Response::pollcall() const {
  // @@protoc_insertion_point(field_get:Response.pollCall)
  return has_pollcall()
      ? *returning_.pollcall_
      : ::Response_Poll::default_instance();
}
::Response_Poll* Response::mutable_pollcall() {
  if (!has_pollcall()) {
    clear_returning();
    set_has_pollcall();
    returning_.pollcall_ = new ::Response_Poll;
  }
  // @@protoc_insertion_point(field_mutable:Response.pollCall)
  return returning_.pollcall_;
}
::Response_Poll* Response::release_pollcall() {
  // @@protoc_insertion_point(field_release:Response.pollCall)
  if (has_pollcall()) {
    clear_has_returning();
    ::Response_Poll* temp = returning_.pollcall_;
    returning_.pollcall_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void Response::set_allocated_pollcall(::Response_Poll* pollcall) {
  clear_returning();
  if (pollcall) {
    set_has_pollcall();
    returning_.pollcall_ = pollcall;
  }
  // @@protoc_insertion_point(field_set_allocated:Response.pollCall)
}

// optional .Response.Select selectCall = 7;
bool Response::has_selectcall() const {
  return returning_case() == kSelectCall;
}
void Response::set_has_selectcall() {
  _oneof_case_[0] = kSelectCall;
}
void Response::clear_selectcall() {
  if (has_selectcall()) {
    delete returning_.selectcall_;
    clear_has_returning();
  }
}
 const ::Response_Select& Response::selectcall() const {
  // @@protoc_insertion_point(field_get:Response.selectCall)
  return has_selectcall()
      ? *returning_.selectcall_
      : ::Response_Select::default_instance();
}
::Response_Select* Response::mutable_selectcall() {
  if (!has_selectcall()) {
    clear_returning();
    set_has_selectcall();
    returning_.selectcall_ = new ::Response_Select;
  }
  // @@protoc_insertion_point(field_mutable:Response.selectCall)
  return returning_.selectcall_;
}
::Response_Select* Response::release_selectcall() {
  // @@protoc_insertion_point(field_release:Response.selectCall)
  if (has_selectcall()) {
    clear_has_returning();
    ::Response_Select* temp = returning_.selectcall_;
    returning_.selectcall_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void Response::set_allocated_selectcall(::Response_Select* selectcall) {
  clear_returning();
  if (selectcall) {
    set_has_selectcall();
    returning_.selectcall_ = selectcall;
  }
  // @@protoc_insertion_point(field_set_allocated:Response.selectCall)
}

// optional .Response.Getpeername getpeernameCall = 8;
bool Response::has_getpeernamecall() const {
  return returning_case() == kGetpeernameCall;
}
void Response::set_has_getpeernamecall() {
  _oneof_case_[0] = kGetpeernameCall;
}
void Response::clear_getpeernamecall() {
  if (has_getpeernamecall()) {
    delete returning_.getpeernamecall_;
    clear_has_returning();
  }
}
 const ::Response_Getpeername& Response::getpeernamecall() const {
  // @@protoc_insertion_point(field_get:Response.getpeernameCall)
  return has_getpeernamecall()
      ? *returning_.getpeernamecall_
      : ::Response_Getpeername::default_instance();
}
::Response_Getpeername* Response::mutable_getpeernamecall() {
  if (!has_getpeernamecall()) {
    clear_returning();
    set_has_getpeernamecall();
    returning_.getpeernamecall_ = new ::Response_Getpeername;
  }
  // @@protoc_insertion_point(field_mutable:Response.getpeernameCall)
  return returning_.getpeernamecall_;
}
::Response_Getpeername* Response::release_getpeernamecall() {
  // @@protoc_insertion_point(field_release:Response.getpeernameCall)
  if (has_getpeernamecall()) {
    clear_has_returning();
    ::Response_Getpeername* temp = returning_.getpeernamecall_;
    returning_.getpeernamecall_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void Response::set_allocated_getpeernamecall(::Response_Getpeername* getpeernamecall) {
  clear_returning();
  if (getpeernamecall) {
    set_has_getpeernamecall();
    returning_.getpeernamecall_ = getpeernamecall;
  }
  // @@protoc_insertion_point(field_set_allocated:Response.getpeernameCall)
}

// optional .Response.Getsockname getsocknameCall = 9;
bool Response::has_getsocknamecall() const {
  return returning_case() == kGetsocknameCall;
}
void Response::set_has_getsocknamecall() {
  _oneof_case_[0] = kGetsocknameCall;
}
void Response::clear_getsocknamecall() {
  if (has_getsocknamecall()) {
    delete returning_.getsocknamecall_;
    clear_has_returning();
  }
}
 const ::Response_Getsockname& Response::getsocknamecall() const {
  // @@protoc_insertion_point(field_get:Response.getsocknameCall)
  return has_getsocknamecall()
      ? *returning_.getsocknamecall_
      : ::Response_Getsockname::default_instance();
}
::Response_Getsockname* Response::mutable_getsocknamecall() {
  if (!has_getsocknamecall()) {
    clear_returning();
    set_has_getsocknamecall();
    returning_.getsocknamecall_ = new ::Response_Getsockname;
  }
  // @@protoc_insertion_point(field_mutable:Response.getsocknameCall)
  return returning_.getsocknamecall_;
}
::Response_Getsockname* Response::release_getsocknamecall() {
  // @@protoc_insertion_point(field_release:Response.getsocknameCall)
  if (has_getsocknamecall()) {
    clear_has_returning();
    ::Response_Getsockname* temp = returning_.getsocknamecall_;
    returning_.getsocknamecall_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void Response::set_allocated_getsocknamecall(::Response_Getsockname* getsocknamecall) {
  clear_returning();
  if (getsocknamecall) {
    set_has_getsocknamecall();
    returning_.getsocknamecall_ = getsocknamecall;
  }
  // @@protoc_insertion_point(field_set_allocated:Response.getsocknameCall)
}

// optional .Response.Getsockopt getsockoptCall = 10;
bool Response::has_getsockoptcall() const {
  return returning_case() == kGetsockoptCall;
}
void Response::set_has_getsockoptcall() {
  _oneof_case_[0] = kGetsockoptCall;
}
void Response::clear_getsockoptcall() {
  if (has_getsockoptcall()) {
    delete returning_.getsockoptcall_;
    clear_has_returning();
  }
}
 const ::Response_Getsockopt& Response::getsockoptcall() const {
  // @@protoc_insertion_point(field_get:Response.getsockoptCall)
  return has_getsockoptcall()
      ? *returning_.getsockoptcall_
      : ::Response_Getsockopt::default_instance();
}
::Response_Getsockopt* Response::mutable_getsockoptcall() {
  if (!has_getsockoptcall()) {
    clear_returning();
    set_has_getsockoptcall();
    returning_.getsockoptcall_ = new ::Response_Getsockopt;
  }
  // @@protoc_insertion_point(field_mutable:Response.getsockoptCall)
  return returning_.getsockoptcall_;
}
::Response_Getsockopt* Response::release_getsockoptcall() {
  // @@protoc_insertion_point(field_release:Response.getsockoptCall)
  if (has_getsockoptcall()) {
    clear_has_returning();
    ::Response_Getsockopt* temp = returning_.getsockoptcall_;
    returning_.getsockoptcall_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void Response::set_allocated_getsockoptcall(::Response_Getsockopt* getsockoptcall) {
  clear_returning();
  if (getsockoptcall) {
    set_has_getsockoptcall();
    returning_.getsockoptcall_ = getsockoptcall;
  }
  // @@protoc_insertion_point(field_set_allocated:Response.getsockoptCall)
}

// optional .Response.Setsockopt setsockoptCall = 11;
bool Response::has_setsockoptcall() const {
  return returning_case() == kSetsockoptCall;
}
void Response::set_has_setsockoptcall() {
  _oneof_case_[0] = kSetsockoptCall;
}
void Response::clear_setsockoptcall() {
  if (has_setsockoptcall()) {
    delete returning_.setsockoptcall_;
    clear_has_returning();
  }
}
 const ::Response_Setsockopt& Response::setsockoptcall() const {
  // @@protoc_insertion_point(field_get:Response.setsockoptCall)
  return has_setsockoptcall()
      ? *returning_.setsockoptcall_
      : ::Response_Setsockopt::default_instance();
}
::Response_Setsockopt* Response::mutable_setsockoptcall() {
  if (!has_setsockoptcall()) {
    clear_returning();
    set_has_setsockoptcall();
    returning_.setsockoptcall_ = new ::Response_Setsockopt;
  }
  // @@protoc_insertion_point(field_mutable:Response.setsockoptCall)
  return returning_.setsockoptcall_;
}
::Response_Setsockopt* Response::release_setsockoptcall() {
  // @@protoc_insertion_point(field_release:Response.setsockoptCall)
  if (has_setsockoptcall()) {
    clear_has_returning();
    ::Response_Setsockopt* temp = returning_.setsockoptcall_;
    returning_.setsockoptcall_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void Response::set_allocated_setsockoptcall(::Response_Setsockopt* setsockoptcall) {
  clear_returning();
  if (setsockoptcall) {
    set_has_setsockoptcall();
    returning_.setsockoptcall_ = setsockoptcall;
  }
  // @@protoc_insertion_point(field_set_allocated:Response.setsockoptCall)
}

// optional .Response.Fcntl fcntlCall = 12;
bool Response::has_fcntlcall() const {
  return returning_case() == kFcntlCall;
}
void Response::set_has_fcntlcall() {
  _oneof_case_[0] = kFcntlCall;
}
void Response::clear_fcntlcall() {
  if (has_fcntlcall()) {
    delete returning_.fcntlcall_;
    clear_has_returning();
  }
}
 const ::Response_Fcntl& Response::fcntlcall() const {
  // @@protoc_insertion_point(field_get:Response.fcntlCall)
  return has_fcntlcall()
      ? *returning_.fcntlcall_
      : ::Response_Fcntl::default_instance();
}
::Response_Fcntl* Response::mutable_fcntlcall() {
  if (!has_fcntlcall()) {
    clear_returning();
    set_has_fcntlcall();
    returning_.fcntlcall_ = new ::Response_Fcntl;
  }
  // @@protoc_insertion_point(field_mutable:Response.fcntlCall)
  return returning_.fcntlcall_;
}
::Response_Fcntl* Response::release_fcntlcall() {
  // @@protoc_insertion_point(field_release:Response.fcntlCall)
  if (has_fcntlcall()) {
    clear_has_returning();
    ::Response_Fcntl* temp = returning_.fcntlcall_;
    returning_.fcntlcall_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void Response::set_allocated_fcntlcall(::Response_Fcntl* fcntlcall) {
  clear_returning();
  if (fcntlcall) {
    set_has_fcntlcall();
    returning_.fcntlcall_ = fcntlcall;
  }
  // @@protoc_insertion_point(field_set_allocated:Response.fcntlCall)
}

// optional .Response.Atstart atstartAction = 16;
bool Response::has_atstartaction() const {
  return returning_case() == kAtstartAction;
}
void Response::set_has_atstartaction() {
  _oneof_case_[0] = kAtstartAction;
}
void Response::clear_atstartaction() {
  if (has_atstartaction()) {
    delete returning_.atstartaction_;
    clear_has_returning();
  }
}
 const ::Response_Atstart& Response::atstartaction() const {
  // @@protoc_insertion_point(field_get:Response.atstartAction)
  return has_atstartaction()
      ? *returning_.atstartaction_
      : ::Response_Atstart::default_instance();
}
::Response_Atstart* Response::mutable_atstartaction() {
  if (!has_atstartaction()) {
    clear_returning();
    set_has_atstartaction();
    returning_.atstartaction_ = new ::Response_Atstart;
  }
  // @@protoc_insertion_point(field_mutable:Response.atstartAction)
  return returning_.atstartaction_;
}
::Response_Atstart* Response::release_atstartaction() {
  // @@protoc_insertion_point(field_release:Response.atstartAction)
  if (has_atstartaction()) {
    clear_has_returning();
    ::Response_Atstart* temp = returning_.atstartaction_;
    returning_.atstartaction_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void Response::set_allocated_atstartaction(::Response_Atstart* atstartaction) {
  clear_returning();
  if (atstartaction) {
    set_has_atstartaction();
    returning_.atstartaction_ = atstartaction;
  }
  // @@protoc_insertion_point(field_set_allocated:Response.atstartAction)
}

// optional .Response.Atfork atforkAction = 17;
bool Response::has_atforkaction() const {
  return returning_case() == kAtforkAction;
}
void Response::set_has_atforkaction() {
  _oneof_case_[0] = kAtforkAction;
}
void Response::clear_atforkaction() {
  if (has_atforkaction()) {
    delete returning_.atforkaction_;
    clear_has_returning();
  }
}
 const ::Response_Atfork& Response::atforkaction() const {
  // @@protoc_insertion_point(field_get:Response.atforkAction)
  return has_atforkaction()
      ? *returning_.atforkaction_
      : ::Response_Atfork::default_instance();
}
::Response_Atfork* Response::mutable_atforkaction() {
  if (!has_atforkaction()) {
    clear_returning();
    set_has_atforkaction();
    returning_.atforkaction_ = new ::Response_Atfork;
  }
  // @@protoc_insertion_point(field_mutable:Response.atforkAction)
  return returning_.atforkaction_;
}
::Response_Atfork* Response::release_atforkaction() {
  // @@protoc_insertion_point(field_release:Response.atforkAction)
  if (has_atforkaction()) {
    clear_has_returning();
    ::Response_Atfork* temp = returning_.atforkaction_;
    returning_.atforkaction_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void Response::set_allocated_atforkaction(::Response_Atfork* atforkaction) {
  clear_returning();
  if (atforkaction) {
    set_has_atforkaction();
    returning_.atforkaction_ = atforkaction;
  }
  // @@protoc_insertion_point(field_set_allocated:Response.atforkAction)
}

// optional .Response.Atexit atexitAction = 18;
bool Response::has_atexitaction() const {
  return returning_case() == kAtexitAction;
}
void Response::set_has_atexitaction() {
  _oneof_case_[0] = kAtexitAction;
}
void Response::clear_atexitaction() {
  if (has_atexitaction()) {
    delete returning_.atexitaction_;
    clear_has_returning();
  }
}
 const ::Response_Atexit& Response::atexitaction() const {
  // @@protoc_insertion_point(field_get:Response.atexitAction)
  return has_atexitaction()
      ? *returning_.atexitaction_
      : ::Response_Atexit::default_instance();
}
::Response_Atexit* Response::mutable_atexitaction() {
  if (!has_atexitaction()) {
    clear_returning();
    set_has_atexitaction();
    returning_.atexitaction_ = new ::Response_Atexit;
  }
  // @@protoc_insertion_point(field_mutable:Response.atexitAction)
  return returning_.atexitaction_;
}
::Response_Atexit* Response::release_atexitaction() {
  // @@protoc_insertion_point(field_release:Response.atexitAction)
  if (has_atexitaction()) {
    clear_has_returning();
    ::Response_Atexit* temp = returning_.atexitaction_;
    returning_.atexitaction_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void Response::set_allocated_atexitaction(::Response_Atexit* atexitaction) {
  clear_returning();
  if (atexitaction) {
    set_has_atexitaction();
    returning_.atexitaction_ = atexitaction;
  }
  // @@protoc_insertion_point(field_set_allocated:Response.atexitAction)
}

// required .Response.RetCode retCode = 15;
bool Response::has_retcode() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
void Response::set_has_retcode() {
  _has_bits_[0] |= 0x00008000u;
}
void Response::clear_has_retcode() {
  _has_bits_[0] &= ~0x00008000u;
}
void Response::clear_retcode() {
  retcode_ = 0;
  clear_has_retcode();
}
 ::Response_RetCode Response::retcode() const {
  // @@protoc_insertion_point(field_get:Response.retCode)
  return static_cast< ::Response_RetCode >(retcode_);
}
 void Response::set_retcode(::Response_RetCode value) {
  assert(::Response_RetCode_IsValid(value));
  set_has_retcode();
  retcode_ = value;
  // @@protoc_insertion_point(field_set:Response.retCode)
}

bool Response::has_returning() const {
  return returning_case() != RETURNING_NOT_SET;
}
void Response::clear_has_returning() {
  _oneof_case_[0] = RETURNING_NOT_SET;
}
Response::ReturningCase Response::returning_case() const {
  return Response::ReturningCase(_oneof_case_[0]);
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
