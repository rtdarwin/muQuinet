/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: response.proto */

#ifndef PROTOBUF_C_response_2eproto__INCLUDED
#define PROTOBUF_C_response_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1000000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1002001 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct _Response Response;
typedef struct _Response__Socket Response__Socket;
typedef struct _Response__Connect Response__Connect;
typedef struct _Response__Close Response__Close;
typedef struct _Response__Recvfrom Response__Recvfrom;
typedef struct _Response__Sendto Response__Sendto;
typedef struct _Response__Poll Response__Poll;
typedef struct _Response__Select Response__Select;
typedef struct _Response__Getpeername Response__Getpeername;
typedef struct _Response__Getsockname Response__Getsockname;
typedef struct _Response__Getsockopt Response__Getsockopt;
typedef struct _Response__Setsockopt Response__Setsockopt;
typedef struct _Response__Fcntl Response__Fcntl;
typedef struct _Response__Atstart Response__Atstart;
typedef struct _Response__Atfork Response__Atfork;
typedef struct _Response__Atexit Response__Atexit;


/* --- enums --- */

typedef enum _Response__RetCode {
  RESPONSE__RET_CODE__OK = 0,
  RESPONSE__RET_CODE__ERROR = 1,
  RESPONSE__RET_CODE__WAIT_NEXT = 2
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(RESPONSE__RET_CODE)
} Response__RetCode;

/* --- messages --- */

/*
 * 1
 */
struct  _Response__Socket
{
  ProtobufCMessage base;
  int32_t ret;
  /*
   * postfix _ to avoid name conflict in C language
   */
  protobuf_c_boolean has_errno_;
  int32_t errno_;
};
#define RESPONSE__SOCKET__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&response__socket__descriptor) \
    , 0, 0,0 }


/*
 * 2
 */
struct  _Response__Connect
{
  ProtobufCMessage base;
  int32_t ret;
  protobuf_c_boolean has_errno_;
  int32_t errno_;
};
#define RESPONSE__CONNECT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&response__connect__descriptor) \
    , 0, 0,0 }


/*
 * 3
 */
struct  _Response__Close
{
  ProtobufCMessage base;
  int32_t ret;
  protobuf_c_boolean has_errno_;
  int32_t errno_;
};
#define RESPONSE__CLOSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&response__close__descriptor) \
    , 0, 0,0 }


/*
 * 4
 */
struct  _Response__Recvfrom
{
  ProtobufCMessage base;
  int32_t ret;
  protobuf_c_boolean has_errno_;
  int32_t errno_;
  protobuf_c_boolean has_buf;
  ProtobufCBinaryData buf;
  protobuf_c_boolean has_addr;
  ProtobufCBinaryData addr;
};
#define RESPONSE__RECVFROM__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&response__recvfrom__descriptor) \
    , 0, 0,0, 0,{0,NULL}, 0,{0,NULL} }


/*
 * 5
 */
struct  _Response__Sendto
{
  ProtobufCMessage base;
  int32_t ret;
  protobuf_c_boolean has_errno_;
  int32_t errno_;
};
#define RESPONSE__SENDTO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&response__sendto__descriptor) \
    , 0, 0,0 }


/*
 * 6
 */
struct  _Response__Poll
{
  ProtobufCMessage base;
  int32_t ret;
  protobuf_c_boolean has_errno_;
  int32_t errno_;
};
#define RESPONSE__POLL__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&response__poll__descriptor) \
    , 0, 0,0 }


/*
 * 7
 */
struct  _Response__Select
{
  ProtobufCMessage base;
  int32_t ret;
  protobuf_c_boolean has_errno_;
  int32_t errno_;
};
#define RESPONSE__SELECT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&response__select__descriptor) \
    , 0, 0,0 }


/*
 * 8
 */
struct  _Response__Getpeername
{
  ProtobufCMessage base;
  int32_t ret;
  protobuf_c_boolean has_errno_;
  int32_t errno_;
  protobuf_c_boolean has_peername;
  ProtobufCBinaryData peername;
};
#define RESPONSE__GETPEERNAME__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&response__getpeername__descriptor) \
    , 0, 0,0, 0,{0,NULL} }


/*
 * 9
 */
struct  _Response__Getsockname
{
  ProtobufCMessage base;
  int32_t ret;
  protobuf_c_boolean has_errno_;
  int32_t errno_;
  protobuf_c_boolean has_sockanme;
  ProtobufCBinaryData sockanme;
};
#define RESPONSE__GETSOCKNAME__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&response__getsockname__descriptor) \
    , 0, 0,0, 0,{0,NULL} }


/*
 * 10
 */
struct  _Response__Getsockopt
{
  ProtobufCMessage base;
  int32_t ret;
  protobuf_c_boolean has_errno_;
  int32_t errno_;
};
#define RESPONSE__GETSOCKOPT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&response__getsockopt__descriptor) \
    , 0, 0,0 }


/*
 * 11
 */
struct  _Response__Setsockopt
{
  ProtobufCMessage base;
  int32_t ret;
  protobuf_c_boolean has_errno_;
  int32_t errno_;
};
#define RESPONSE__SETSOCKOPT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&response__setsockopt__descriptor) \
    , 0, 0,0 }


/*
 * 12
 */
struct  _Response__Fcntl
{
  ProtobufCMessage base;
  int32_t ret;
  protobuf_c_boolean has_errno_;
  int32_t errno_;
};
#define RESPONSE__FCNTL__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&response__fcntl__descriptor) \
    , 0, 0,0 }


/*
 * 16
 */
struct  _Response__Atstart
{
  ProtobufCMessage base;
  int32_t startfd;
  protobuf_c_boolean has_count;
  int32_t count;
};
#define RESPONSE__ATSTART__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&response__atstart__descriptor) \
    , 0, 0,0 }


/*
 * 17
 */
struct  _Response__Atfork
{
  ProtobufCMessage base;
};
#define RESPONSE__ATFORK__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&response__atfork__descriptor) \
     }


/*
 * 18
 */
struct  _Response__Atexit
{
  ProtobufCMessage base;
};
#define RESPONSE__ATEXIT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&response__atexit__descriptor) \
     }


typedef enum {
  RESPONSE__RETURNING__NOT_SET = 0,
  RESPONSE__RETURNING_SOCKET_CALL = 1,
  RESPONSE__RETURNING_CONNECT_CALL = 2,
  RESPONSE__RETURNING_CLOSE_CALL = 3,
  RESPONSE__RETURNING_RECVFROM_CALL = 4,
  RESPONSE__RETURNING_SENDTO_CALL = 5,
  RESPONSE__RETURNING_POLL_CALL = 6,
  RESPONSE__RETURNING_SELECT_CALL = 7,
  RESPONSE__RETURNING_GETPEERNAME_CALL = 8,
  RESPONSE__RETURNING_GETSOCKNAME_CALL = 9,
  RESPONSE__RETURNING_GETSOCKOPT_CALL = 10,
  RESPONSE__RETURNING_SETSOCKOPT_CALL = 11,
  RESPONSE__RETURNING_FCNTL_CALL = 12,
  RESPONSE__RETURNING_ATSTART_ACTION = 16,
  RESPONSE__RETURNING_ATFORK_ACTION = 17,
  RESPONSE__RETURNING_ATEXIT_ACTION = 18,
} Response__ReturningCase;

struct  _Response
{
  ProtobufCMessage base;
  Response__RetCode retcode;
  Response__ReturningCase returning_case;
  union {
    Response__Socket *socketcall;
    Response__Connect *connectcall;
    Response__Close *closecall;
    Response__Recvfrom *recvfromcall;
    Response__Sendto *sendtocall;
    Response__Poll *pollcall;
    Response__Select *selectcall;
    Response__Getpeername *getpeernamecall;
    Response__Getsockname *getsocknamecall;
    Response__Getsockopt *getsockoptcall;
    Response__Setsockopt *setsockoptcall;
    Response__Fcntl *fcntlcall;
    Response__Atstart *atstartaction;
    Response__Atfork *atforkaction;
    Response__Atexit *atexitaction;
  };
};
#define RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&response__descriptor) \
    , 0, RESPONSE__RETURNING__NOT_SET, {0} }


/* Response__Socket methods */
void   response__socket__init
                     (Response__Socket         *message);
/* Response__Connect methods */
void   response__connect__init
                     (Response__Connect         *message);
/* Response__Close methods */
void   response__close__init
                     (Response__Close         *message);
/* Response__Recvfrom methods */
void   response__recvfrom__init
                     (Response__Recvfrom         *message);
/* Response__Sendto methods */
void   response__sendto__init
                     (Response__Sendto         *message);
/* Response__Poll methods */
void   response__poll__init
                     (Response__Poll         *message);
/* Response__Select methods */
void   response__select__init
                     (Response__Select         *message);
/* Response__Getpeername methods */
void   response__getpeername__init
                     (Response__Getpeername         *message);
/* Response__Getsockname methods */
void   response__getsockname__init
                     (Response__Getsockname         *message);
/* Response__Getsockopt methods */
void   response__getsockopt__init
                     (Response__Getsockopt         *message);
/* Response__Setsockopt methods */
void   response__setsockopt__init
                     (Response__Setsockopt         *message);
/* Response__Fcntl methods */
void   response__fcntl__init
                     (Response__Fcntl         *message);
/* Response__Atstart methods */
void   response__atstart__init
                     (Response__Atstart         *message);
/* Response__Atfork methods */
void   response__atfork__init
                     (Response__Atfork         *message);
/* Response__Atexit methods */
void   response__atexit__init
                     (Response__Atexit         *message);
/* Response methods */
void   response__init
                     (Response         *message);
size_t response__get_packed_size
                     (const Response   *message);
size_t response__pack
                     (const Response   *message,
                      uint8_t             *out);
size_t response__pack_to_buffer
                     (const Response   *message,
                      ProtobufCBuffer     *buffer);
Response *
       response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   response__free_unpacked
                     (Response *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Response__Socket_Closure)
                 (const Response__Socket *message,
                  void *closure_data);
typedef void (*Response__Connect_Closure)
                 (const Response__Connect *message,
                  void *closure_data);
typedef void (*Response__Close_Closure)
                 (const Response__Close *message,
                  void *closure_data);
typedef void (*Response__Recvfrom_Closure)
                 (const Response__Recvfrom *message,
                  void *closure_data);
typedef void (*Response__Sendto_Closure)
                 (const Response__Sendto *message,
                  void *closure_data);
typedef void (*Response__Poll_Closure)
                 (const Response__Poll *message,
                  void *closure_data);
typedef void (*Response__Select_Closure)
                 (const Response__Select *message,
                  void *closure_data);
typedef void (*Response__Getpeername_Closure)
                 (const Response__Getpeername *message,
                  void *closure_data);
typedef void (*Response__Getsockname_Closure)
                 (const Response__Getsockname *message,
                  void *closure_data);
typedef void (*Response__Getsockopt_Closure)
                 (const Response__Getsockopt *message,
                  void *closure_data);
typedef void (*Response__Setsockopt_Closure)
                 (const Response__Setsockopt *message,
                  void *closure_data);
typedef void (*Response__Fcntl_Closure)
                 (const Response__Fcntl *message,
                  void *closure_data);
typedef void (*Response__Atstart_Closure)
                 (const Response__Atstart *message,
                  void *closure_data);
typedef void (*Response__Atfork_Closure)
                 (const Response__Atfork *message,
                  void *closure_data);
typedef void (*Response__Atexit_Closure)
                 (const Response__Atexit *message,
                  void *closure_data);
typedef void (*Response_Closure)
                 (const Response *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor response__descriptor;
extern const ProtobufCMessageDescriptor response__socket__descriptor;
extern const ProtobufCMessageDescriptor response__connect__descriptor;
extern const ProtobufCMessageDescriptor response__close__descriptor;
extern const ProtobufCMessageDescriptor response__recvfrom__descriptor;
extern const ProtobufCMessageDescriptor response__sendto__descriptor;
extern const ProtobufCMessageDescriptor response__poll__descriptor;
extern const ProtobufCMessageDescriptor response__select__descriptor;
extern const ProtobufCMessageDescriptor response__getpeername__descriptor;
extern const ProtobufCMessageDescriptor response__getsockname__descriptor;
extern const ProtobufCMessageDescriptor response__getsockopt__descriptor;
extern const ProtobufCMessageDescriptor response__setsockopt__descriptor;
extern const ProtobufCMessageDescriptor response__fcntl__descriptor;
extern const ProtobufCMessageDescriptor response__atstart__descriptor;
extern const ProtobufCMessageDescriptor response__atfork__descriptor;
extern const ProtobufCMessageDescriptor response__atexit__descriptor;
extern const ProtobufCEnumDescriptor    response__ret_code__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_response_2eproto__INCLUDED */
